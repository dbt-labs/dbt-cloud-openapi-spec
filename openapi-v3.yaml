openapi: 3.0.3
info:
  title: dbt Cloud API v3
  version: 3.0.0
  description: |
    # How to use this API

    The dbt Cloud API v3 contains endpoints for programmatic administration of your dbt Cloud account.
    With it, you can replicate resources across projects, accounts, and environments, or standardize project
    creation for business teams. For endpoints related to jobs and runs, refer to the
    [Discovery API](https://docs.getdbt.com/docs/dbt-cloud-apis/discovery-api) or [dbt Cloud API v2](https://docs.getdbt.com/dbt-cloud/api-v2#/).

    The API docs are generated from an openapi spec defined in the
    [dbt-cloud-openapi-spec](https://github.com/dbt-labs/dbt-cloud-openapi-spec/blob/master/openapi-v3.yaml)
    repository. If you find issues in these docs or have questions about using the dbt Cloud
    API, please open an issue in the dbt-cloud-openapi-spec repo or contact support@getdbt.com.

    ## Authentication

    To authenticate an application with the dbt Cloud API, navigate to the
    API Settings page in your [dbt Cloud profile](https://cloud.getdbt.com/#/profile/api/).
    If you cannot access this page, confirm that your dbt Cloud account has access to the API,
    and that you are using the hosted version of dbt Cloud. If dbt Cloud is running inside of a VPC
    in an Enterprise account, contact your account manager for help finding your API key.

    Once you've found your API key, use it in the Authorization header of requests to the dbt Cloud API.
    Be sure to include the `Token` prefix in the Authorization header, or the request will fail with a
    "401 Unauthorized" error.

    *Note: `Bearer` can be used in place of `Token` in the Authorization header. Both syntaxes are equivalent.*

    **Headers**
    ```
    Accept: application/json
    Authorization: Token <your token>
    ```

    ## Pagination

    All top-level API resources support bulk fetches using the "list" or `GET` API methods. These API methods accept `limit` and `offset` query parameters that you can use together to paginate results and return a subset of those results.

    * Offset: Specifies how many records to skip. Can be an integer 0 and higher.
    * Limit: Specifies the maximum records you want to retrieve in a single request. Can be an integer up to 100. This limit makes responses easier to handle for servers and people.


    ## Example request

    The following example uses the list projects endpoint to list the projects that your token is authorized to access.
    This request skips the first 10 projects and lists the next 10 projects.
    Be sure to replace `<YOUR_TOKEN>` in the Authorization header with your actual API token and `<YOUR_ACCOUNT_ID>` with your actual account ID.

    ```bash
    curl --request GET \
      --url 'https://cloud.getdbt.com/api/v3/accounts/<YOUR_ACCOUNT_ID>/projects/?limit=10&offset=5' \
      --header 'Content-Type: application/json' \
      --header 'Authorization: Token <YOUR_TOKEN>'
    ```
  termsOfService: https://www.getdbt.com/terms-of-service
  contact:
    email: support@getdbt.com
paths:
  /api/v3/accounts/:
    get:
      operationId: List Accounts
      description: List accounts
      tags:
      - Accounts
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountEnveloped'
          description: ''
  /api/v3/accounts/{account_id}/assign-groups/:
    post:
      operationId: Assign User to Groups
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Groups
      security:
      - BearerAuthentication: []
      responses:
        '200':
          description: No response body
  /api/v3/accounts/{account_id}/audit-logs/:
    get:
      operationId: List Recent Audit Log Events
      description: |-
        Fetch paginated audit log events.

        Note: This API is only available to enterprise customers.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Audit Logs
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicAuditLogEnveloped'
          description: ''
  /api/v3/accounts/{account_id}/audit-logs/download/:
    get:
      operationId: Get Recent Audit Log Events CSV
      description: |-
        Generate audit log CSV

        Note: This API is only available to enterprise customers.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Audit Logs
      security:
      - BearerAuthentication: []
      responses:
        '200':
          description: No response body
  /api/v3/accounts/{account_id}/audit-logs/export/:
    get:
      operationId: Get Bulk Audit Log Export Status
      description: |-
        Check the status of a bulk export request.

        Note: This API is only available to enterprise customers.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Audit Logs
      security:
      - BearerAuthentication: []
      responses:
        '200':
          description: No response body
    post:
      operationId: Submit Bulk Audit Log Export Request
      description: |-
        Submit a bulk export request.

        Note: This API is only available to enterprise customers.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Audit Logs
      security:
      - BearerAuthentication: []
      responses:
        '200':
          description: No response body
  /api/v3/accounts/{account_id}/audit-logs/export/{job_id}/download/:
    get:
      operationId: Download Bulk Audit Log Export
      description: |-
        Download a bulk export of audit log events.

        Note: This API is only available to enterprise customers.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: job_id
        schema:
          type: string
        required: true
      tags:
      - Audit Logs
      security:
      - BearerAuthentication: []
      responses:
        '200':
          description: No response body
  /api/v3/accounts/{account_id}/group-permissions/{group_id}/:
    post:
      operationId: Assign Group Permissions
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: group_id
        schema:
          type: integer
        required: true
      tags:
      - Groups
      security:
      - BearerAuthentication: []
      responses:
        '200':
          description: No response body
  /api/v3/accounts/{account_id}/groups/:
    get:
      operationId: List Groups
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: name__icontains
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: pk__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Groups
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GroupEnveloped'
          description: ''
    post:
      operationId: Create Group
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GroupRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GroupRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupEnveloped'
          description: ''
  /api/v3/accounts/{account_id}/groups/{id}/:
    get:
      operationId: Retrieve Group
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Groups
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupEnveloped'
          description: ''
    post:
      operationId: Update Group
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GroupRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GroupRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupEnveloped'
          description: ''
  /api/v3/accounts/{account_id}/invites/:
    post:
      operationId: Send user invites
      description: Send email invites to users who you wish to add to this account
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Invites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InviteUsersRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InviteUsersRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InviteUsersRequestRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InviteUsersResponseEnveloped'
          description: ''
  /api/v3/accounts/{account_id}/ip-restrictions/:
    get:
      operationId: List IP Restrictions
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - IP Restriction Endpoints
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPRestrictionRuleEnveloped'
          description: ''
    post:
      operationId: Save IP Restriction
      description: |-
        Save net-new ip restriction rule

        Note: As long as at least one cidr was successfully saved a 2XX will be returned.
        Check the `extra` key within the response for a list of cidrs that failed to save.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - IP Restriction Endpoints
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IPRestrictionRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IPRestrictionRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IPRestrictionRequestRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPRestrictionRuleEnveloped'
          description: ''
  /api/v3/accounts/{account_id}/ip-restrictions-set/:
    post:
      operationId: Enable IP Restrictions
      description: Toggle the enablement of the IP restriction feature.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - IP Restriction Endpoints
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IPRestrictionSetRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IPRestrictionSetRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IPRestrictionSetRequestRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          description: No response body
  /api/v3/accounts/{account_id}/ip-restrictions-set/{id}/validate/:
    get:
      operationId: Validate Client IP Against IP Restrictions
      description: |-
        This endpoint returns whether the client ip is acceptable based on the
        configured ip restriction rules associated to the rule set.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - IP Restriction Endpoints
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPRestrictionSetValidate'
          description: ''
  /api/v3/accounts/{account_id}/ip-restrictions-set/{id}/validate/{rule_id}:
    get:
      operationId: Validate Client IP Against IP Restrictions Excluding Specified
        IP Rule
      description: |-
        This endpoint returns whether the client ip is acceptable based on the
        configured ip restriction rules associated to the rule set - excluding the ip rule id
        passed into the url
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: rule_id
        schema:
          type: integer
        required: true
      tags:
      - IP Restriction Endpoints
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPRestrictionSetValidate'
          description: ''
  /api/v3/accounts/{account_id}/ip-restrictions/{id}:
    get:
      operationId: Retrieve IP Restriction
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - IP Restriction Endpoints
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPRestrictionRuleEnveloped'
          description: ''
    put:
      operationId: Update IP Restriction
      description: |-
        Update an existing ip restriction rule

        Note: As long as at least one cidr was successfully saved a 2XX will be returned.
        Check the `extra` key within the response for a list of cidrs that failed to save.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - IP Restriction Endpoints
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateIPRestrictionRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateIPRestrictionRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateIPRestrictionRequestRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPRestrictionRule'
          description: ''
    delete:
      operationId: Delete IP Restriction
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - IP Restriction Endpoints
      security:
      - BearerAuthentication: []
      responses:
        '204':
          description: No response body
  /api/v3/accounts/{account_id}/license-maps/:
    get:
      operationId: List License Maps
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - License Maps
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LicenseMapEnveloped'
          description: ''
    post:
      operationId: Create License Map
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - License Maps
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LicenseMapRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LicenseMapRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LicenseMapRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenseMapEnveloped'
          description: ''
  /api/v3/accounts/{account_id}/license-maps/{id}/:
    get:
      operationId: Retrieve License Map
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - License Maps
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenseMapEnveloped'
          description: ''
    post:
      operationId: Update License Map
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - License Maps
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LicenseMapRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LicenseMapRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LicenseMapRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenseMapEnveloped'
          description: ''
    delete:
      operationId: Destroy License Map
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - License Maps
      security:
      - BearerAuthentication: []
      responses:
        '204':
          description: No response body
  /api/v3/accounts/{account_id}/private-link-endpoints/:
    get:
      operationId: List PrivateLink Endpoints
      description: |-
        List PrivateLink Endpoints for an account.

        Note: This API is only available to Enterprise BusinessCritical customers.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Private Link Endpoints
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkEndpointEnveloped'
          description: ''
  /api/v3/accounts/{account_id}/projects/:
    get:
      operationId: List Projects
      description: List Projects
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: name__icontains
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: pk__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Projects
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectEnveloped'
          description: ''
    post:
      operationId: Create Project
      description: Create a new Project
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectEnveloped'
          description: ''
  /api/v3/accounts/{account_id}/projects/{id}/:
    get:
      operationId: Retrieve Project
      description: Retrieve a Project
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Projects
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectEnveloped'
          description: ''
    post:
      operationId: Update Project
      description: Update a Project
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectEnveloped'
          description: ''
    delete:
      operationId: Destroy Project
      description: Delete Project
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Projects
      security:
      - BearerAuthentication: []
      responses:
        '204':
          description: No response body
  /api/v3/accounts/{account_id}/projects/{project_id}/adapters/:
    post:
      operationId: Create Adapter
      description: Create a new adapter for a project. The ID from this adapter can
        be used to create Connections or Credentials when necessary.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Adapters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DbtAdapterRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DbtAdapterRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DbtAdapterRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DbtAdapterEnveloped'
          description: ''
  /api/v3/accounts/{account_id}/projects/{project_id}/adapters/{id}/:
    get:
      operationId: Retrieve Adapter
      description: Get an adapter by ID.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Adapters
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DbtAdapterEnveloped'
          description: ''
    post:
      operationId: Update Adapter
      description: Update an adapter.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Adapters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DbtAdapterRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DbtAdapterRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DbtAdapterRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DbtAdapterEnveloped'
          description: ''
    delete:
      operationId: Destroy Adapter
      description: Delete an adapter.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Adapters
      security:
      - BearerAuthentication: []
      responses:
        '204':
          description: No response body
  /api/v3/accounts/{account_id}/projects/{project_id}/connections/:
    get:
      operationId: List Connections
      description: List Connections
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Connections
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BaseConnectionV3Enveloped'
          description: ''
    post:
      operationId: Create Connection
      description: Create a new Connection
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Connections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseConnectionV3Request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BaseConnectionV3Request'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BaseConnectionV3Request'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseConnectionV3Enveloped'
          description: ''
  /api/v3/accounts/{account_id}/projects/{project_id}/connections/{id}/:
    get:
      operationId: Retrieve Connection
      description: Retrieve a Connection
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Connections
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseConnectionV3Enveloped'
          description: ''
    post:
      operationId: Update Connection
      description: Update a Connection
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Connections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseConnectionV3Request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BaseConnectionV3Request'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BaseConnectionV3Request'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseConnectionV3Enveloped'
          description: ''
    delete:
      operationId: Destroy Connection
      description: Delete a Connection
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Connections
      security:
      - BearerAuthentication: []
      responses:
        '204':
          description: No response body
  /api/v3/accounts/{account_id}/projects/{project_id}/credentials/:
    get:
      operationId: List Projects Credentials
      description: List the credentials for a given project.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Credentials
      security:
      - BearerAuthentication: []
      responses:
        '200':
          description: No response body
    post:
      operationId: Create Projects Credential
      description: Create new credentials
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Credentials
      security:
      - BearerAuthentication: []
      responses:
        '200':
          description: No response body
  /api/v3/accounts/{account_id}/projects/{project_id}/credentials/{id}/:
    get:
      operationId: Retrieve Projects Credential
      description: Fetch a specific set of credentials.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Credentials
      security:
      - BearerAuthentication: []
      responses:
        '200':
          description: No response body
    post:
      operationId: Updates Project Credentials
      description: Update a set of credentials
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Credentials
      security:
      - BearerAuthentication: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: Partial Update Projects Credential
      description: Partially update a set of credentials
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Credentials
      security:
      - BearerAuthentication: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: Destroy Projects Credential
      description: Delete a set of credentials
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Credentials
      security:
      - BearerAuthentication: []
      responses:
        '204':
          description: No response body
  /api/v3/accounts/{account_id}/projects/{project_id}/environment-variables/:
    post:
      operationId: Create Projects Environment Variable
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Environment Variables
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomEnvironmentVariableRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomEnvironmentVariableRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomEnvironmentVariableRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomEnvironmentVariableEnveloped'
          description: ''
  /api/v3/accounts/{account_id}/projects/{project_id}/environment-variables/{id}/:
    post:
      operationId: Update Projects Environment Variable
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Environment Variables
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomEnvironmentVariableRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomEnvironmentVariableRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomEnvironmentVariableRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomEnvironmentVariableEnveloped'
          description: ''
    delete:
      operationId: Destroy Projects Environment Variable
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Environment Variables
      security:
      - BearerAuthentication: []
      responses:
        '204':
          description: No response body
  /api/v3/accounts/{account_id}/projects/{project_id}/environment-variables/bulk/:
    post:
      operationId: Create Projects Environment Variables Bulk
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Environment Variables
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomEnvironmentVariableBulkRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomEnvironmentVariableBulkRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomEnvironmentVariableBulkRequestRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomEnvironmentVariableBulkResponseEnveloped'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomEnvironmentVariableBulkResponseFailEnveloped'
          description: ''
    put:
      operationId: Update Projects Environment Variables Bulk
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Environment Variables
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomEnvironmentVariableRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomEnvironmentVariableRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomEnvironmentVariableRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomEnvironmentVariableEnveloped'
          description: ''
    delete:
      operationId: Destroy Projects Environment Variables Bulk
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Environment Variables
      security:
      - BearerAuthentication: []
      responses:
        '204':
          description: No response body
  /api/v3/accounts/{account_id}/projects/{project_id}/environment-variables/environment/:
    get:
      operationId: List Projects Environment Variables Environment
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: environment_id
        schema:
          type: integer
      - in: query
        name: job_definition_id
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      - in: query
        name: type
        schema:
          type: string
      - in: query
        name: user_id
        schema:
          type: integer
      tags:
      - Environment Variables
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomEnvironmentVariableEnveloped'
          description: ''
  /api/v3/accounts/{account_id}/projects/{project_id}/environment-variables/job/:
    get:
      operationId: List Projects Environment Variables Job
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: environment_id
        schema:
          type: integer
      - in: query
        name: job_definition_id
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      - in: query
        name: type
        schema:
          type: string
      - in: query
        name: user_id
        schema:
          type: integer
      tags:
      - Environment Variables
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomEnvironmentVariableEnveloped'
          description: ''
  /api/v3/accounts/{account_id}/projects/{project_id}/environment-variables/user/:
    get:
      operationId: List Projects Environment Variables User
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: environment_id
        schema:
          type: integer
      - in: query
        name: job_definition_id
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      - in: query
        name: type
        schema:
          type: string
      - in: query
        name: user_id
        schema:
          type: integer
      tags:
      - Environment Variables
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomEnvironmentVariableEnveloped'
          description: ''
  /api/v3/accounts/{account_id}/projects/{project_id}/environments/:
    get:
      operationId: List Environments
      description: List Environments
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: credentials_id
        schema:
          type: integer
      - in: query
        name: dbt_version
        schema:
          type: string
      - in: query
        name: dbt_version__in
        schema:
          type: array
      - in: query
        name: deployment_type
        schema:
          type: string
      - in: query
        name: deployment_type__in
        schema:
          type: array
      - in: query
        name: id__gt
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: name__icontains
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: pk__in
        schema:
          type: array
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      - in: query
        name: type
        schema:
          type: string
      tags:
      - Environments
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnvironmentV3Enveloped'
          description: ''
    post:
      operationId: Create Environment
      description: Create a new Environment
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Environments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentV3Request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EnvironmentV3Request'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EnvironmentV3Request'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentV3Enveloped'
          description: ''
  /api/v3/accounts/{account_id}/projects/{project_id}/environments/{id}/:
    get:
      operationId: Retrieve Environment
      description: Retrieve an Environment
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Environments
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentV3Enveloped'
          description: ''
    post:
      operationId: Update Environment
      description: Update an Environment
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Environments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentV3Request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EnvironmentV3Request'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EnvironmentV3Request'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentV3Enveloped'
          description: ''
    delete:
      operationId: Destroy Environment
      description: Delete an Environment
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Environments
      security:
      - BearerAuthentication: []
      responses:
        '204':
          description: No response body
  /api/v3/accounts/{account_id}/projects/{project_id}/extended-attributes/:
    post:
      operationId: Create Extended Attributes
      description: Create a new Extended Attributes record.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Extended Attributes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtendedAttributesRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExtendedAttributesRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExtendedAttributesRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtendedAttributesEnveloped'
          description: ''
  /api/v3/accounts/{account_id}/projects/{project_id}/extended-attributes/{id}/:
    get:
      operationId: Retrieve Extended Attributes
      description: 'Given an account_id, project_id, and primary key: retrieve an
        existing Extended Attributes record.'
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Extended Attributes
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtendedAttributesEnveloped'
          description: ''
    patch:
      operationId: Update Extended Attributes
      description: Update an existing Extended Attributes record by ID.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Extended Attributes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtendedAttributesRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExtendedAttributesRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExtendedAttributesRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtendedAttributesEnveloped'
          description: ''
    delete:
      operationId: Destroy Extended Attributes
      description: Delete an existing Extended Attributes record by ID.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Extended Attributes
      security:
      - BearerAuthentication: []
      responses:
        '204':
          description: No response body
  /api/v3/accounts/{account_id}/projects/{project_id}/group-permissions/:
    post:
      operationId: Assign Project Group Permissions
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Groups
      security:
      - BearerAuthentication: []
      responses:
        '200':
          description: No response body
  /api/v3/accounts/{account_id}/projects/{project_id}/managed-repositories/:
    post:
      operationId: Create Managed Repository
      description: Create a new dbt Cloud managed repository.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Repositories
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoryV3Enveloped'
          description: ''
  /api/v3/accounts/{account_id}/projects/{project_id}/repositories/:
    get:
      operationId: List Repositories
      description: List repositories for the given project
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: remote_url
        schema:
          type: string
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Repositories
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RepositoryV3Enveloped'
          description: ''
    post:
      operationId: Create Repository
      description: Create a new repository for the given project
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Repositories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepositoryV3Request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RepositoryV3Request'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RepositoryV3Request'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoryV3Enveloped'
          description: ''
  /api/v3/accounts/{account_id}/projects/{project_id}/repositories/{id}/:
    get:
      operationId: Retrieve Repository
      description: Get a repository by ID
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Repositories
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoryV3Enveloped'
          description: ''
    post:
      operationId: Update Repository
      description: Update a repository
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Repositories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepositoryV3Request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RepositoryV3Request'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RepositoryV3Request'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoryV3Enveloped'
          description: ''
    delete:
      operationId: Destroy Repository
      description: Delete a repository
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Repositories
      security:
      - BearerAuthentication: []
      responses:
        '204':
          description: No response body
  /api/v3/accounts/{account_id}/semantic-layer-credentials/:
    get:
      operationId: List Semantic Layer Credentials
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Semantic Layer Credentials
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SemanticLayerCredentialsEnveloped'
          description: ''
  /api/v3/accounts/{account_id}/service-tokens/:
    get:
      operationId: List Service Tokens
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Service Tokens
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceTokenEnveloped'
          description: ''
    post:
      operationId: Create Service Token
      description: This endpoint is used to generate a new service token for the account.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Service Tokens
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceTokenRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceTokenRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceTokenRequestRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceTokenEnveloped'
          description: ''
  /api/v3/accounts/{account_id}/service-tokens/{id}/:
    get:
      operationId: Retrieve Service Token
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Service Tokens
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceTokenEnveloped'
          description: ''
    put:
      operationId: Update Service Token
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Service Tokens
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceTokenRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceTokenRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceTokenRequestRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceTokenEnveloped'
          description: ''
    delete:
      operationId: Destroy Service Token
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Service Tokens
      security:
      - BearerAuthentication: []
      responses:
        '204':
          description: No response body
  /api/v3/accounts/{account_id}/service-tokens/{service_token_id}/permissions/:
    get:
      operationId: Retrieve Service Tokens Permission
      description: List permissions of a given ServiceToken for an account.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: service_token_id
        schema:
          type: integer
        required: true
      tags:
      - Service Tokens
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceTokenPermissionEnveloped'
          description: ''
  /api/v3/accounts/{account_id}/users/:
    get:
      operationId: Retrieve User
      description: List users for a given account.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Users
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserEnveloped'
          description: ''
  /api/v3/accounts/{account_id}/webhooks/event/{event_id}:
    get:
      operationId: Retrieve Webhooks Event
      description: Get a specific event given an event_id
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: event_id
        schema:
          type: string
        required: true
      tags:
      - Webhooks
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventResponseEnvelope'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
  /api/v3/accounts/{account_id}/webhooks/event/{event_id}/receipts:
    get:
      operationId: List Webhooks Event Receipts
      description: Get all receipts for a given event id
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: event_id
        schema:
          type: string
        required: true
      tags:
      - Webhooks
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWebhooksReceiptsResponseEnvelope'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
  /api/v3/accounts/{account_id}/webhooks/receipt/{receipt_id}:
    get:
      operationId: Retrieve Webhooks Receipt
      description: Get a specific receipt given its id
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: receipt_id
        schema:
          type: string
        required: true
      tags:
      - Webhooks
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWebhooksReceiptResponseEnvelope'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
  /api/v3/accounts/{account_id}/webhooks/subscription/{subscription_id}:
    get:
      operationId: Retrieve Webhooks Subscription
      description: Get a specific subscription with a subscription id
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: subscription_id
        schema:
          type: string
        required: true
      tags:
      - Webhooks
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionResponseEnvelope'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
    put:
      operationId: Update Webhooks Subscription
      description: Edit a subscription given a subscription id
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: subscription_id
        schema:
          type: string
        required: true
      tags:
      - Webhooks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SubscriptionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SubscriptionRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSubscriptionResponseEnvelope'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
    delete:
      operationId: Destroy Webhooks Subscription
      description: Delete a specific subscription
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: subscription_id
        schema:
          type: string
        required: true
      tags:
      - Webhooks
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSubscriptionResponseEnvelope'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
  /api/v3/accounts/{account_id}/webhooks/subscription/{subscription_id}/events:
    get:
      operationId: List Webhooks Events
      description: Get all events for a specific subscription
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: subscription_id
        schema:
          type: string
        required: true
      tags:
      - Webhooks
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWebhooksEvents'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
  /api/v3/accounts/{account_id}/webhooks/subscription/{subscription_id}/test:
    get:
      operationId: Test Webhooks Subscription
      description: Test the client endpoint for a given subscription
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: subscription_id
        schema:
          type: string
        required: true
      tags:
      - Webhooks
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestSubscriptionResponseEnvelope'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
  /api/v3/accounts/{account_id}/webhooks/subscriptions:
    get:
      operationId: List Webhooks Subscriptions
      description: Given an account id list all webhook subscriptions
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Webhooks
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWebhooksSubscriptions'
          description: ''
    post:
      operationId: Create Webhooks Subscription
      description: Create a new webhook subscription
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Webhooks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SubscriptionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SubscriptionRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSubscriptionResponseEnvelope'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
  /api/v3/adapter-schema/:
    get:
      operationId: Retrieve Adapter Schema
      description: Fetch the schema for a given adapter. The schema will include details
        on available fields for connections and credentials.
      parameters:
      - in: query
        name: adapter_version
        schema:
          type: string
          enum:
          - apache_spark_v0
          - bigquery_v0
          - databricks_spark_v0
          - databricks_v0
          - fabric_v0
          - postgres_v0
          - redshift_v0
          - snowflake_v0
          - synapse_v0
          - trino_v0
        description: The adapter to fetch the schema for
        required: true
      tags:
      - Adapter Schema
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdapterSchemaResponseEnveloped'
          description: ''
  /api/v3/users/{user_id}/credentials/:
    get:
      operationId: List Users Credential
      description: List the development credentials associated with a given user.
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - Users
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCredentialsEnveloped'
          description: ''
    post:
      operationId: Create Users Credential
      description: Associate a set of development credentials with a given user.
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentialsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCredentialsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCredentialsRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCredentialsEnveloped'
          description: ''
  /api/v3/users/{user_id}/credentials/{id}/:
    get:
      operationId: Retrieve Users Credential
      description: Get a development credentials association for a given user.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - Users
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCredentialsEnveloped'
          description: ''
    post:
      operationId: Update Users Credential
      description: Update which development credentials are associated with a specific
        user.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentialsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCredentialsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCredentialsRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCredentialsEnveloped'
          description: ''
    delete:
      operationId: Destroy Users Credential
      description: Delete a development credentials / user association.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - Users
      security:
      - BearerAuthentication: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    Account:
      type: object
      required:
      - id
      - name
      - state
      - plan
      - pending_cancel
      - run_slots
      - developer_seats
      - docs_job_id
      - freshness_job_id
      properties:
        id:
          oneOf:
          - type: 'null'
          - type: integer
        name:
          allOf:
          - type: string
          - minLength: 1
            maxLength: 255
          description: The name of the account
        state:
          type: integer
        plan:
          type: string
          description: The active plan type for the account
        pending_cancel:
          type: boolean
        run_slots:
          type: integer
          description: The total number of run slots the account may use
        developer_seats:
          type: integer
          description: The total number of developer seats the account may use
        it_seats:
          type: integer
          description: The total number of IT seats the account may use
        read_only_seats:
          type: integer
          description: The total number of Read Only seats the account may use
        pod_memory_request_mebibytes:
          type: integer
        develop_pod_memory_request_mebibytes:
          type: integer
        run_duration_limit_seconds:
          type: integer
        queue_limit:
          type: integer
        stripe_customer_id:
          oneOf:
          - type: 'null'
          - type: string
        metronome_customer_id:
          oneOf:
          - type: 'null'
          - type: string
        salesforce_customer_id:
          oneOf:
          - type: 'null'
          - type: string
        third_party_billing:
          oneOf:
          - type: 'null'
          - {}
        billing_email_address:
          oneOf:
          - type: 'null'
          - type: string
        locked:
          type: boolean
          description: Whether the account is currently locked
        lock_reason:
          oneOf:
          - type: 'null'
          - type: string
          description: Why the account is locked
        lock_cause:
          oneOf:
          - type: 'null'
          - {}
          - {}
          - {}
          - {}
          - {}
          description: Why the account is locked
        develop_file_system:
          type: boolean
        unlocked_at:
          oneOf:
          - type: 'null'
          - type: string
            format: date-time
        unlock_if_subscription_renewed:
          type: boolean
        enterprise_authentication_method:
          oneOf:
          - type: 'null'
          - type: string
        enterprise_login_slug:
          oneOf:
          - type: 'null'
          - type: string
        enterprise_unique_identifier:
          oneOf:
          - type: 'null'
          - type: string
        business_critical:
          type: boolean
        groups:
          oneOf:
          - type: 'null'
          - {}
          description: The user groups in the account
        created_at:
          oneOf:
          - type: 'null'
          - type: string
            format: date-time
          readOnly: true
        updated_at:
          oneOf:
          - type: 'null'
          - type: string
            format: date-time
          readOnly: true
        starter_repo_url:
          oneOf:
          - type: 'null'
          - type: string
        git_auth_level:
          oneOf:
          - type: 'null'
          - type: string
        identifier:
          oneOf:
          - type: 'null'
          - allOf:
            - type: string
            - minLength: 31
              maxLength: 31
        trial_end_date:
          oneOf:
          - type: 'null'
          - type: string
            format: date-time
        static_subdomain:
          oneOf:
          - type: 'null'
          - type: string
        run_locked_until:
          oneOf:
          - type: 'null'
          - type: string
            format: date-time
        docs_job_id:
          oneOf:
          - type: 'null'
          - type: integer
          description: (Deprecated)
        freshness_job_id:
          oneOf:
          - type: 'null'
          - type: integer
          description: (Deprecated)
        migration_scheduled_at:
          oneOf:
          - type: 'null'
          - type: string
            format: date-time
        account_migration_events:
          oneOf:
          - type: 'null'
          - {}
      additionalProperties: false
      definitions: {}
      $schema: http://json-schema.org/draft-07/schema#
    AccountEnveloped:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Account'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    Adapter:
      type: object
      properties:
        metadata:
          allOf:
          - $ref: '#/components/schemas/AdapterMetadata'
          description: High level information about the adapter
        connection:
          allOf:
          - $ref: '#/components/schemas/Schema'
          description: The set of connection-level fields for this adapter
        credential:
          allOf:
          - $ref: '#/components/schemas/Schema'
          description: The set of credential-level fields for this adapter
        semantic_layer_credentials:
          allOf:
          - $ref: '#/components/schemas/Schema'
          description: The set of semantic layer credential-level fields for this
            adapter
      required:
      - metadata
    AdapterMetadata:
      type: object
      properties:
        title:
          type: string
        docs_link:
          type: string
        image_link:
          type: string
      required:
      - docs_link
      - image_link
      - title
    AdapterSchemaResponse:
      type: object
      properties:
        adapter:
          $ref: '#/components/schemas/Adapter'
    AdapterSchemaResponseEnveloped:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/AdapterSchemaResponse'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    AdapterVersionEnum:
      enum:
      - apache_spark_v0
      - databricks_spark_v0
      - databricks_v0
      - trino_v0
      - snowflake_v0
      - bigquery_v0
      - postgres_v0
      - redshift_v0
      - synapse_v0
      - fabric_v0
      type: string
      description: |-
        * `apache_spark_v0` - apache_spark_v0
        * `databricks_spark_v0` - databricks_spark_v0
        * `databricks_v0` - databricks_v0
        * `trino_v0` - trino_v0
        * `snowflake_v0` - snowflake_v0
        * `bigquery_v0` - bigquery_v0
        * `postgres_v0` - postgres_v0
        * `redshift_v0` - redshift_v0
        * `synapse_v0` - synapse_v0
        * `fabric_v0` - fabric_v0
    BaseConnectionV3:
      type: object
      properties:
        id:
          type: integer
        account_id:
          type: integer
          description: The account the connection is associated with
        project_id:
          type: integer
          description: The project the connection is associated with
        name:
          type: string
          description: The name of the connection
        type:
          $ref: '#/components/schemas/Type32eEnum'
        created_by_id:
          type: integer
        created_by_service_token_id:
          type: integer
        state:
          type: integer
          default: 1
          description: A value of 1 means this entity is active and a value of 2 means
            this entity is deleted
        private_link_endpoint_id:
          type: string
      required:
      - account_id
      - name
      - project_id
      - type
    BaseConnectionV3Enveloped:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/BaseConnectionV3'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    BaseConnectionV3Request:
      type: object
      properties:
        id:
          type: integer
        account_id:
          type: integer
          description: The account the connection is associated with
        project_id:
          type: integer
          description: The project the connection is associated with
        name:
          type: string
          minLength: 1
          description: The name of the connection
        type:
          $ref: '#/components/schemas/Type32eEnum'
        created_by_id:
          type: integer
        created_by_service_token_id:
          type: integer
        state:
          type: integer
          default: 1
          description: A value of 1 means this entity is active and a value of 2 means
            this entity is deleted
        private_link_endpoint_id:
          type: string
          minLength: 1
      required:
      - account_id
      - name
      - project_id
      - type
    CreateSubscriptionResponseEnvelope:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Subscription'
        status:
          $ref: '#/components/schemas/ResponseStatus'
      required:
      - data
      - status
    CustomEnvironmentVariable:
      type: object
      properties:
        account_id:
          type: integer
        project_id:
          type: integer
        name:
          type: string
        type:
          $ref: '#/components/schemas/CustomEnvironmentVariableTypeEnum'
        state:
          type: integer
          default: 1
        user_id:
          type: integer
        environment_id:
          type: integer
        job_definition_id:
          type: integer
        environment:
          readOnly: true
        display_value:
          type: string
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - environment
      - id
      - updated_at
    CustomEnvironmentVariableBulkRequest:
      type: object
      properties:
        new_name:
          type: string
          minLength: 1
        project:
          type: string
          minLength: 1
        environmentNameExample1:
          type: string
          minLength: 1
          description: This key must match the name of the environment you want to
            set this environment variable for.
        environmentNameExample2:
          type: string
          minLength: 1
          description: This key must match the name of the environment you want to
            set this environment variable for.
      required:
      - new_name
    CustomEnvironmentVariableBulkRequestRequest:
      type: object
      properties:
        env_var:
          type: array
          items:
            $ref: '#/components/schemas/CustomEnvironmentVariableBulkRequest'
      required:
      - env_var
    CustomEnvironmentVariableBulkResponse:
      type: object
      properties:
        status:
          type: string
        status_code:
          type: integer
        key_name:
          type: string
        data:
          $ref: '#/components/schemas/ResponseData'
    CustomEnvironmentVariableBulkResponseEnveloped:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/CustomEnvironmentVariableBulkResponse'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    CustomEnvironmentVariableBulkResponseFail:
      type: object
      properties:
        status:
          type: string
        status_code:
          type: integer
        key_name:
          type: string
        reason:
          type: string
    CustomEnvironmentVariableBulkResponseFailEnveloped:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/CustomEnvironmentVariableBulkResponseFail'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    CustomEnvironmentVariableEnveloped:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/CustomEnvironmentVariable'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    CustomEnvironmentVariableRequest:
      type: object
      properties:
        account_id:
          type: integer
        project_id:
          type: integer
        name:
          type: string
          minLength: 1
        type:
          $ref: '#/components/schemas/CustomEnvironmentVariableTypeEnum'
        state:
          type: integer
          default: 1
        user_id:
          type: integer
        environment_id:
          type: integer
        job_definition_id:
          type: integer
        raw_value:
          type: string
          writeOnly: true
          minLength: 1
        display_value:
          type: string
          minLength: 1
      required:
      - account_id
      - name
      - project_id
      - type
    CustomEnvironmentVariableTypeEnum:
      enum:
      - project
      - environment
      - job
      - user
      type: string
      description: |-
        * `project` - project
        * `environment` - environment
        * `job` - job
        * `user` - user
    DateEnum:
      enum:
      - every_day
      - days_of_week
      - custom_cron
      - interval_cron
      type: string
      description: |-
        * `every_day` - every_day
        * `days_of_week` - days_of_week
        * `custom_cron` - custom_cron
        * `interval_cron` - interval_cron
    DbtAdapter:
      type: object
      properties:
        id:
          type: integer
        account_id:
          type: integer
        project_id:
          type: integer
        created_by_id:
          type: integer
        created_by_service_token_id:
          type: integer
        adapter_version:
          $ref: '#/components/schemas/AdapterVersionEnum'
        metadata_json: {}
        state:
          type: integer
          default: 1
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - updated_at
    DbtAdapterEnveloped:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/DbtAdapter'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    DbtAdapterRequest:
      type: object
      properties:
        id:
          type: integer
        account_id:
          type: integer
        project_id:
          type: integer
        created_by_id:
          type: integer
        created_by_service_token_id:
          type: integer
        adapter_version:
          $ref: '#/components/schemas/AdapterVersionEnum'
        metadata_json: {}
        state:
          type: integer
          default: 1
          description: A value of 1 means this entity is active and a value of 2 means
            this entity is deleted
      required:
      - account_id
      - adapter_version
      - metadata_json
      - project_id
    DeleteSubscriptionResponseData:
      type: object
      properties:
        id:
          type: string
      required:
      - id
    DeleteSubscriptionResponseEnvelope:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/DeleteSubscriptionResponseData'
        status:
          $ref: '#/components/schemas/DeleteSubscriptionResponseStatus'
      required:
      - data
      - status
    DeleteSubscriptionResponseStatus:
      type: object
      properties:
        code:
          type: integer
        is_success:
          type: boolean
      required:
      - code
      - is_success
    DeploymentTypeEnum:
      enum:
      - production
      - staging
      type: string
      description: |-
        * `production` - production
        * `staging` - staging
    EnvironmentV3:
      type: object
      properties:
        id:
          type: integer
        account_id:
          type: integer
          description: The account the environment is associated with
        project_id:
          type: integer
          description: The project the environment is associated with
        credentials_id:
          type: integer
          description: The id of the associated credentials. Null for development
            environments.
        extended_attributes_id:
          type: integer
        name:
          type: string
          description: The name of the environment
        dbt_version:
          type: string
          description: The default dbt Version to use for this environment
        type:
          $ref: '#/components/schemas/EnvironmentV3TypeEnum'
        use_custom_branch:
          type: boolean
        custom_branch:
          type: string
        supports_docs:
          type: boolean
        state:
          type: integer
          default: 1
          description: A value of 1 means this entity is active and a value of 2 means
            this entity is deleted
        deployment_type:
          $ref: '#/components/schemas/DeploymentTypeEnum'
      required:
      - account_id
      - dbt_version
      - name
      - project_id
      - supports_docs
      - type
      - use_custom_branch
    EnvironmentV3Enveloped:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EnvironmentV3'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    EnvironmentV3Request:
      type: object
      properties:
        id:
          type: integer
        account_id:
          type: integer
          description: The account the environment is associated with
        project_id:
          type: integer
          description: The project the environment is associated with
        credentials_id:
          type: integer
          description: The id of the associated credentials. Null for development
            environments.
        extended_attributes_id:
          type: integer
        name:
          type: string
          minLength: 1
          description: The name of the environment
        dbt_version:
          type: string
          minLength: 1
          description: The default dbt Version to use for this environment
        type:
          $ref: '#/components/schemas/EnvironmentV3TypeEnum'
        use_custom_branch:
          type: boolean
        custom_branch:
          type: string
          minLength: 1
        supports_docs:
          type: boolean
        state:
          type: integer
          default: 1
          description: A value of 1 means this entity is active and a value of 2 means
            this entity is deleted
        deployment_type:
          $ref: '#/components/schemas/DeploymentTypeEnum'
      required:
      - account_id
      - dbt_version
      - name
      - project_id
      - supports_docs
      - type
      - use_custom_branch
    EnvironmentV3TypeEnum:
      enum:
      - development
      - deployment
      type: string
      description: |-
        * `development` - DEVELOPMENT
        * `deployment` - DEPLOYMENT
    Event:
      type: object
      properties:
        id:
          type: string
        subscription_id:
          type: string
        account_identifier:
          type: string
        job_id:
          type: string
        trigger_event_type:
          type: string
        payload:
          type: string
        http_status_code:
          type: string
        account_id:
          type: string
      required:
      - account_id
      - account_identifier
      - http_status_code
      - id
      - job_id
      - payload
      - subscription_id
      - trigger_event_type
    EventResponseEnvelope:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Event'
        status:
          $ref: '#/components/schemas/ResponseStatus'
      required:
      - data
      - status
    ExtendedAttributes:
      type: object
      properties:
        id:
          type: integer
        account_id:
          type: integer
        project_id:
          type: integer
        extended_attributes: {}
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        state:
          type: integer
          default: 1
      required:
      - created_at
      - updated_at
    ExtendedAttributesEnveloped:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ExtendedAttributes'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    ExtendedAttributesRequest:
      type: object
      properties:
        id:
          type: integer
        account_id:
          type: integer
        project_id:
          type: integer
        extended_attributes: {}
        state:
          type: integer
          default: 1
          description: A value of 1 means this entity is active and a value of 2 means
            this entity is deleted
      required:
      - account_id
      - extended_attributes
      - project_id
    Filters:
      type: object
      properties:
        offset:
          type: integer
        limit:
          type: integer
      required:
      - limit
      - offset
    GetWebhooksReceiptResponseEnvelope:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Receipt'
        status:
          $ref: '#/components/schemas/ResponseStatus'
      required:
      - data
      - status
    GitCloneStrategyEnum:
      enum:
      - azure_active_directory_app
      - deploy_key
      - deploy_token
      - github_app
      - git_token
      type: string
      description: |-
        * `azure_active_directory_app` - azure_active_directory_app
        * `deploy_key` - deploy_key
        * `deploy_token` - deploy_token
        * `github_app` - github_app
        * `git_token` - git_token
    GitProvider:
      type: object
      properties:
        account_id:
          type: integer
        provider_type:
          $ref: '#/components/schemas/ProviderTypeEnum'
        state:
          type: integer
          default: 1
          description: A value of 1 means this entity is active and a value of 2 means
            this entity is deleted
      required:
      - account_id
      - provider_type
    GitProviderRequest:
      type: object
      properties:
        account_id:
          type: integer
        provider_type:
          $ref: '#/components/schemas/ProviderTypeEnum'
        state:
          type: integer
          default: 1
          description: A value of 1 means this entity is active and a value of 2 means
            this entity is deleted
      required:
      - account_id
      - provider_type
    Group:
      type: object
      properties:
        account_id:
          type: integer
        name:
          type: string
        id:
          type: integer
        state:
          type: integer
          default: 1
        assign_by_default:
          type: boolean
          default: false
        sso_mapping_groups:
          type: array
          items:
            type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        group_permissions:
          type: array
          items:
            $ref: '#/components/schemas/GroupPermission'
          readOnly: true
          default: []
      required:
      - created_at
      - group_permissions
      - updated_at
    GroupEnveloped:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Group'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    GroupPermission:
      type: object
      properties:
        account_id:
          type: integer
        group_id:
          type: integer
        project_id:
          type: integer
        all_projects:
          type: boolean
        permission_set:
          $ref: '#/components/schemas/PermissionSetEnum'
        permission_level:
          type: integer
        id:
          type: integer
        state:
          type: integer
          default: 1
          description: A value of 1 means this entity is active and a value of 2 means
            this entity is deleted
        writable_environment_categories:
          type: array
          items:
            type: string
      required:
      - account_id
      - all_projects
      - group_id
      - permission_set
      - writable_environment_categories
    GroupRequest:
      type: object
      properties:
        account_id:
          type: integer
        name:
          type: string
          minLength: 1
        id:
          type: integer
        state:
          type: integer
          default: 1
          description: A value of 1 means this entity is active and a value of 2 means
            this entity is deleted
        assign_by_default:
          type: boolean
        sso_mapping_groups:
          type: array
          items:
            type: string
            minLength: 1
      required:
      - account_id
      - assign_by_default
      - name
    IPRestrictionCidr:
      type: object
      properties:
        state:
          type: integer
          default: 1
          description: A value of 1 means this entity is active and a value of 2 means
            this entity is deleted
        ip_restriction_rule_id:
          type: integer
        enabled:
          type: boolean
        cidr:
          type: string
        cidr_ipv6:
          type: string
      required:
      - cidr
      - enabled
      - ip_restriction_rule_id
    IPRestrictionCidrRequestRequest:
      type: object
      properties:
        state:
          type: integer
          default: 1
          description: A value of 1 means this entity is active and a value of 2 means
            this entity is deleted
        cidr:
          type: string
          minLength: 1
        id:
          type: integer
      required:
      - cidr
    IPRestrictionRequestRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
        rule_set_enabled:
          type: boolean
        account_id:
          type: integer
        cidrs:
          type: array
          items:
            $ref: '#/components/schemas/IPRestrictionCidrRequestRequest'
        description:
          type: string
          minLength: 1
      required:
      - account_id
      - cidrs
      - name
      - rule_set_enabled
    IPRestrictionRule:
      type: object
      properties:
        name:
          type: string
        type:
          type: integer
        state:
          type: integer
          default: 1
          description: A value of 1 means this entity is active and a value of 2 means
            this entity is deleted
        ip_restriction_rule_set_id:
          type: integer
        rule_set_enabled:
          type: boolean
        account_id:
          type: integer
        cidrs:
          type: array
          items:
            $ref: '#/components/schemas/IPRestrictionCidr'
        created_by_id:
          type: integer
        created_by_service_token_id:
          type: integer
        id:
          type: integer
          readOnly: true
        enabled_for_service_tokens:
          type: boolean
          readOnly: true
        description:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - enabled_for_service_tokens
      - id
      - updated_at
    IPRestrictionRuleEnveloped:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/IPRestrictionRule'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    IPRestrictionSetRequestRequest:
      type: object
      properties:
        enabled:
          type: boolean
      required:
      - enabled
    IPRestrictionSetValidate:
      type: object
      properties:
        is_valid_for_admin:
          type: boolean
      required:
      - is_valid_for_admin
    InviteUsersRequestRequest:
      type: object
      properties:
        id:
          type: integer
        email_addresses:
          type: array
          items:
            type: string
            minLength: 1
        license_type:
          $ref: '#/components/schemas/LicenseTypeEnum'
        group_ids:
          type: array
          items:
            type: integer
      required:
      - email_addresses
      - license_type
    InviteUsersResponse:
      type: object
      properties:
        sent:
          type: integer
    InviteUsersResponseEnveloped:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/InviteUsersResponse'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    JobDefinitionExecution:
      type: object
      properties:
        timeout_seconds:
          type: integer
      required:
      - timeout_seconds
    JobDefinitionSchedule:
      type: object
      properties:
        cron:
          type: string
        date:
          $ref: '#/components/schemas/DateEnum'
        time:
          $ref: '#/components/schemas/TimeEnum'
      required:
      - cron
      - date
      - time
    JobDefinitionSettings:
      type: object
      properties:
        threads:
          type: integer
        target_name:
          type: string
      required:
      - target_name
      - threads
    JobDefinitionTriggers:
      type: object
      properties:
        github_webhook:
          type: boolean
        schedule:
          type: boolean
        git_provider_webhook:
          type: boolean
        on_merge:
          type: boolean
      required:
      - github_webhook
      - schedule
    JobDefinitionV2:
      type: object
      properties:
        environment_id:
          type: integer
        account_id:
          type: integer
        project_id:
          type: integer
        name:
          type: string
        description:
          type: string
        generate_docs:
          type: boolean
        run_generate_sources:
          type: boolean
        state:
          type: integer
          default: 1
          description: A value of 1 means this entity is active and a value of 2 means
            this entity is deleted
        dbt_version:
          type: string
        triggers:
          $ref: '#/components/schemas/JobDefinitionTriggers'
        settings:
          $ref: '#/components/schemas/JobDefinitionSettings'
        execution:
          $ref: '#/components/schemas/JobDefinitionExecution'
        schedule:
          $ref: '#/components/schemas/JobDefinitionSchedule'
        execute_steps:
          type: array
          items:
            type: string
        most_recent_run:
          $ref: '#/components/schemas/Run'
        most_recent_completed_run:
          $ref: '#/components/schemas/Run'
        job_type:
          $ref: '#/components/schemas/JobTypeEnum'
        triggers_on_draft_pr:
          type: boolean
          default: false
        run_audit_helper:
          type: boolean
          default: false
        run_compare_changes:
          type: boolean
          default: false
      required:
      - account_id
      - environment_id
      - generate_docs
      - name
      - project_id
      - run_generate_sources
    JobTypeEnum:
      enum:
      - ci
      - scheduled
      - other
      - merge
      type: string
      description: |-
        * `ci` - ci
        * `scheduled` - scheduled
        * `other` - other
        * `merge` - merge
    LicenseMap:
      type: object
      properties:
        id:
          type: integer
        account_id:
          type: integer
        license_type:
          $ref: '#/components/schemas/LicenseTypeEnum'
        state:
          type: integer
          default: 1
        sso_license_mapping_groups:
          type: array
          items:
            type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - updated_at
    LicenseMapEnveloped:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/LicenseMap'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    LicenseMapRequest:
      type: object
      properties:
        id:
          type: integer
        account_id:
          type: integer
        license_type:
          $ref: '#/components/schemas/LicenseTypeEnum'
        state:
          type: integer
          default: 1
          description: A value of 1 means this entity is active and a value of 2 means
            this entity is deleted
        sso_license_mapping_groups:
          type: array
          items:
            type: string
            minLength: 1
      required:
      - account_id
      - license_type
    LicenseTypeEnum:
      enum:
      - developer
      - read_only
      - it
      type: string
      description: |-
        * `developer` - DEVELOPER
        * `read_only` - READ_ONLY
        * `it` - IT
    ListWebhooksReceiptsResponseEnvelope:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Receipt'
        status:
          $ref: '#/components/schemas/ResponseStatus'
      required:
      - data
      - status
    NotFound:
      type: object
      properties:
        data:
          type: object
          additionalProperties: {}
          nullable: true
        status:
          $ref: '#/components/schemas/NotFoundStatus'
      required:
      - status
    NotFoundStatus:
      type: object
      properties:
        code:
          type: integer
          default: 404
        is_success:
          type: boolean
        user_message:
          type: string
        developer_message:
          type: string
      required:
      - developer_message
      - is_success
      - user_message
    PaginatedWebhooksEvents:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Event'
        status:
          $ref: '#/components/schemas/ResponseStatus'
        extra:
          $ref: '#/components/schemas/PaginationExtra'
      required:
      - data
      - extra
      - status
    PaginatedWebhooksSubscriptions:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Subscription'
        status:
          $ref: '#/components/schemas/ResponseStatus'
        extra:
          $ref: '#/components/schemas/PaginationExtra'
      required:
      - data
      - extra
      - status
    Pagination:
      type: object
      properties:
        total_count:
          type: integer
        count:
          type: integer
      required:
      - count
      - total_count
    PaginationExtra:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        filters:
          $ref: '#/components/schemas/Filters'
      required:
      - filters
      - pagination
    PermissionSetEnum:
      enum:
      - owner
      - member
      - account_admin
      - security_admin
      - billing_admin
      - admin
      - database_admin
      - git_admin
      - team_admin
      - job_admin
      - job_runner
      - job_viewer
      - analyst
      - developer
      - stakeholder
      - readonly
      - project_creator
      - account_viewer
      - metadata_only
      - semantic_layer_only
      - webhooks_only
      type: string
      description: |-
        * `owner` - owner
        * `member` - member
        * `account_admin` - account_admin
        * `security_admin` - security_admin
        * `billing_admin` - billing_admin
        * `admin` - admin
        * `database_admin` - database_admin
        * `git_admin` - git_admin
        * `team_admin` - team_admin
        * `job_admin` - job_admin
        * `job_runner` - job_runner
        * `job_viewer` - job_viewer
        * `analyst` - analyst
        * `developer` - developer
        * `stakeholder` - stakeholder
        * `readonly` - readonly
        * `project_creator` - project_creator
        * `account_viewer` - account_viewer
        * `metadata_only` - metadata_only
        * `semantic_layer_only` - semantic_layer_only
        * `webhooks_only` - webhooks_only
    PostgresCredentials:
      type: object
      properties:
        id:
          type: integer
        account_id:
          type: integer
        project_id:
          type: integer
        type:
          $ref: '#/components/schemas/Type32eEnum'
        state:
          type: integer
          default: 1
          description: A value of 1 means this entity is active and a value of 2 means
            this entity is deleted
        threads:
          type: integer
        username:
          type: string
        default_schema:
          type: string
        target_name:
          type: string
      required:
      - account_id
      - default_schema
      - target_name
      - threads
      - type
      - username
    PrivateLinkEndpoint:
      type: object
      properties:
        account_id:
          type: integer
        name:
          type: string
        type:
          type: string
          description: The warehouse or the git provider type of the PrivateLink endpoint
        private_link_endpoint:
          type: string
        cidr_range:
          type: string
        state:
          type: integer
          default: 1
          description: A value of 1 means this entity is active and a value of 2 means
            this entity is deleted
        id:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - updated_at
    PrivateLinkEndpointEnveloped:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/PrivateLinkEndpoint'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    Project:
      type: object
      properties:
        name:
          type: string
          description: The name of the project
        account_id:
          type: integer
          description: The account the project is associated with
        description:
          type: string
          description: The description of the project
        connection_id:
          type: integer
          description: The active connection
        repository_id:
          type: integer
          description: The active repository
        semantic_layer_config_id:
          type: integer
          description: The active semantic layer configuration
        id:
          type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        skipped_setup:
          type: boolean
          default: false
        state:
          type: integer
          default: 1
        dbt_project_subdirectory:
          type: string
        connection:
          allOf:
          - $ref: '#/components/schemas/BaseConnectionV3'
          readOnly: true
        environments:
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentV3'
          readOnly: true
        repository:
          allOf:
          - $ref: '#/components/schemas/RepositoryV3'
          readOnly: true
        group_permissions:
          type: array
          items:
            $ref: '#/components/schemas/GroupPermission'
          readOnly: true
        docs_job_id:
          type: integer
          description: The job used for docs generation
        freshness_job_id:
          type: integer
          description: The job used for source freshness generation
        docs_job:
          allOf:
          - $ref: '#/components/schemas/JobDefinitionV2'
          readOnly: true
        freshness_job:
          allOf:
          - $ref: '#/components/schemas/JobDefinitionV2'
          readOnly: true
      required:
      - connection
      - created_at
      - docs_job
      - environments
      - freshness_job
      - group_permissions
      - repository
      - updated_at
    ProjectEnveloped:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Project'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    ProjectRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          description: The name of the project
        account_id:
          type: integer
          description: The account the project is associated with
        description:
          type: string
          minLength: 1
          description: The description of the project
        connection_id:
          type: integer
          description: The active connection
        repository_id:
          type: integer
          description: The active repository
        semantic_layer_config_id:
          type: integer
          description: The active semantic layer configuration
        id:
          type: integer
        skipped_setup:
          type: boolean
          default: false
        state:
          type: integer
          default: 1
          description: A value of 1 means this entity is active and a value of 2 means
            this entity is deleted
        dbt_project_subdirectory:
          type: string
          minLength: 1
        docs_job_id:
          type: integer
          description: The job used for docs generation
        freshness_job_id:
          type: integer
          description: The job used for source freshness generation
      required:
      - account_id
      - name
    ProviderTypeEnum:
      enum:
      - azure_active_directory
      - github
      - gitlab
      - git_url
      - managed_github
      - manual_config
      type: string
      description: |-
        * `azure_active_directory` - azure_active_directory
        * `github` - github
        * `gitlab` - gitlab
        * `git_url` - git_url
        * `managed_github` - managed_github
        * `manual_config` - manual_config
    PublicAuditLog:
      type: object
      properties:
        id:
          type: string
        account_id:
          type: integer
        source:
          type: string
        service:
          type: string
        actor: {}
        event_type:
          type: string
        event_context: {}
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
    PublicAuditLogEnveloped:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/PublicAuditLog'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    Receipt:
      type: object
      properties:
        id:
          type: string
        event_id:
          type: string
        subscription_id:
          type: string
        dispatched_at:
          type: string
        http_status_code:
          type: string
        error_info:
          type: string
        request_body:
          type: string
        request_headers:
          type: string
        response_body:
          type: string
      required:
      - dispatched_at
      - error_info
      - event_id
      - http_status_code
      - id
      - request_body
      - request_headers
      - response_body
      - subscription_id
    RemoteBackendEnum:
      enum:
      - azure_active_directory
      - github
      - managed
      - gitlab
      - manual_config
      type: string
      description: |-
        * `azure_active_directory` - azure_active_directory
        * `github` - github
        * `managed` - managed
        * `gitlab` - gitlab
        * `manual_config` - manual_config
    RepositoryGitlab:
      type: object
      properties:
        id:
          type: integer
        account_id:
          type: integer
        repository_id:
          type: integer
        gitlab_project_id:
          type: integer
        state:
          type: integer
          default: 1
          description: A value of 1 means this entity is active and a value of 2 means
            this entity is deleted
        project_access_token_id:
          type: integer
        expires_at:
          type: string
          format: date-time
      required:
      - account_id
      - gitlab_project_id
    RepositoryGitlabRequest:
      type: object
      properties:
        id:
          type: integer
        account_id:
          type: integer
        repository_id:
          type: integer
        gitlab_project_id:
          type: integer
        state:
          type: integer
          default: 1
          description: A value of 1 means this entity is active and a value of 2 means
            this entity is deleted
        project_access_token_id:
          type: integer
        project_access_token:
          type: string
          writeOnly: true
          minLength: 1
        expires_at:
          type: string
          format: date-time
      required:
      - account_id
      - gitlab_project_id
    RepositoryV3:
      type: object
      properties:
        id:
          type: integer
        account_id:
          type: integer
          description: The account the repo is associated with
        project_id:
          type: integer
          description: The project the repo is associated with
        full_name:
          type: string
          description: The name of the repo
        remote_backend:
          allOf:
          - $ref: '#/components/schemas/RemoteBackendEnum'
          description: |-
            The associated git provider

            * `azure_active_directory` - azure_active_directory
            * `github` - github
            * `managed` - managed
            * `gitlab` - gitlab
            * `manual_config` - manual_config
        git_clone_strategy:
          allOf:
          - $ref: '#/components/schemas/GitCloneStrategyEnum'
          description: |-
            The strategy to use when cloning the repo

            * `azure_active_directory_app` - azure_active_directory_app
            * `deploy_key` - deploy_key
            * `deploy_token` - deploy_token
            * `github_app` - github_app
            * `git_token` - git_token
        deploy_key_id:
          type: integer
        repository_credentials_id:
          type: integer
        github_installation_id:
          type: integer
        github_webhook_id:
          type: integer
        state:
          type: integer
          default: 1
          description: A value of 1 means this entity is active and a value of 2 means
            this entity is deleted
        private_link_endpoint_id:
          type: string
        git_provider_id:
          type: integer
        gitlab:
          $ref: '#/components/schemas/RepositoryGitlab'
        git_provider:
          $ref: '#/components/schemas/GitProvider'
      required:
      - account_id
    RepositoryV3Enveloped:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/RepositoryV3'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    RepositoryV3Request:
      type: object
      properties:
        id:
          type: integer
        account_id:
          type: integer
          description: The account the repo is associated with
        project_id:
          type: integer
          description: The project the repo is associated with
        full_name:
          type: string
          minLength: 1
          description: The name of the repo
        remote_backend:
          allOf:
          - $ref: '#/components/schemas/RemoteBackendEnum'
          description: |-
            The associated git provider

            * `azure_active_directory` - azure_active_directory
            * `github` - github
            * `managed` - managed
            * `gitlab` - gitlab
            * `manual_config` - manual_config
        git_clone_strategy:
          allOf:
          - $ref: '#/components/schemas/GitCloneStrategyEnum'
          description: |-
            The strategy to use when cloning the repo

            * `azure_active_directory_app` - azure_active_directory_app
            * `deploy_key` - deploy_key
            * `deploy_token` - deploy_token
            * `github_app` - github_app
            * `git_token` - git_token
        deploy_key_id:
          type: integer
        repository_credentials_id:
          type: integer
        github_installation_id:
          type: integer
        github_webhook_id:
          type: integer
        github_webhook_secret:
          type: string
          writeOnly: true
          minLength: 1
        state:
          type: integer
          default: 1
          description: A value of 1 means this entity is active and a value of 2 means
            this entity is deleted
        private_link_endpoint_id:
          type: string
          minLength: 1
        git_provider_id:
          type: integer
        gitlab:
          $ref: '#/components/schemas/RepositoryGitlabRequest'
        git_provider:
          $ref: '#/components/schemas/GitProviderRequest'
      required:
      - account_id
    ResponseData:
      type: object
      properties:
        message:
          type: string
        new_var_ids:
          type: array
          items:
            type: integer
        failures:
          description: This field will detail specific failures within a single environment
            variable you are attempting to create.
      required:
      - message
      - new_var_ids
    ResponseStatus:
      type: object
      properties:
        code:
          type: integer
      required:
      - code
    Run:
      type: object
      properties:
        id:
          type: integer
        trigger_id:
          type: integer
        account_id:
          type: integer
        environment_id:
          type: integer
        project_id:
          type: integer
        job_definition_id:
          type: integer
        status:
          type: integer
        dbt_version:
          type: string
        git_branch:
          type: string
        git_sha:
          type: string
        status_message:
          type: string
        owner_thread_id:
          type: string
        executed_by_thread_id:
          type: string
        deferring_run_id:
          type: integer
        artifacts_saved:
          type: boolean
        artifact_s3_path:
          type: string
        has_docs_generated:
          type: boolean
        has_sources_generated:
          type: boolean
        notifications_sent:
          type: boolean
        blocked_by:
          type: array
          items:
            type: integer
        is_running:
          type: boolean
      required:
      - account_id
      - artifacts_saved
      - blocked_by
      - dbt_version
      - environment_id
      - has_docs_generated
      - has_sources_generated
      - job_definition_id
      - notifications_sent
      - project_id
      - status
    Schema:
      type: object
      properties:
        field_order:
          type: array
          items:
            type: string
          description: The field order for display in the UI
        field_groups:
          type: array
          items:
            $ref: '#/components/schemas/Group'
          description: Specification of how certain fields should be grouped
    SchemaTypeEnum:
      enum:
      - connection
      - credential
      - semantic_layer_credentials
      type: string
      description: |-
        * `connection` - connection
        * `credential` - credential
        * `semantic_layer_credentials` - semantic_layer_credentials
    SemanticLayerCredentials:
      type: object
      properties:
        id:
          type: integer
        account_id:
          type: integer
          description: The account the credentials are associated with
        adapter_version:
          allOf:
          - $ref: '#/components/schemas/AdapterVersionEnum'
          description: |-
            The adapter version. Should match the associated project's adapter version.

            * `apache_spark_v0` - apache_spark_v0
            * `databricks_spark_v0` - databricks_spark_v0
            * `databricks_v0` - databricks_v0
            * `trino_v0` - trino_v0
            * `snowflake_v0` - snowflake_v0
            * `bigquery_v0` - bigquery_v0
            * `postgres_v0` - postgres_v0
            * `redshift_v0` - redshift_v0
            * `synapse_v0` - synapse_v0
            * `fabric_v0` - fabric_v0
        schema_type:
          allOf:
          - $ref: '#/components/schemas/SchemaTypeEnum'
          description: |-
            The adapter schema type. Should always be 'semantic_layer_credentials'

            * `connection` - connection
            * `credential` - credential
            * `semantic_layer_credentials` - semantic_layer_credentials
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        state:
          type: integer
          default: 1
      required:
      - created_at
      - updated_at
    SemanticLayerCredentialsEnveloped:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/SemanticLayerCredentials'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    ServiceToken:
      type: object
      properties:
        id:
          type: integer
        account_id:
          type: integer
        uid:
          type: string
        name:
          type: string
        token:
          type: string
        state:
          type: integer
          default: 1
        token_string:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        last_used:
          type: string
          format: date-time
        user_id:
          type: integer
        type:
          type: string
        expires_at:
          type: string
          format: date-time
        metadata_only:
          type: boolean
          default: false
        webhooks_only:
          type: boolean
          default: false
        service_token_permissions:
          type: array
          items:
            $ref: '#/components/schemas/ServiceTokenPermission'
          readOnly: true
          default: []
      required:
      - created_at
      - service_token_permissions
      - token_string
      - updated_at
    ServiceTokenEnveloped:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ServiceToken'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    ServiceTokenPermission:
      type: object
      properties:
        account_id:
          type: integer
        service_token_id:
          type: integer
        project_id:
          type: integer
        all_projects:
          type: boolean
        permission_set:
          $ref: '#/components/schemas/PermissionSetEnum'
        state:
          type: integer
          default: 1
          description: A value of 1 means this entity is active and a value of 2 means
            this entity is deleted
        writable_environment_categories:
          type: array
          items:
            type: string
      required:
      - account_id
      - all_projects
      - permission_set
      - service_token_id
      - writable_environment_categories
    ServiceTokenPermissionEnveloped:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ServiceTokenPermission'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    ServiceTokenRequestRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
        metadata_only:
          type: boolean
        webhooks_only:
          type: boolean
      required:
      - metadata_only
      - name
      - webhooks_only
    Status:
      type: object
      properties:
        code:
          type: integer
          default: 200
        is_success:
          type: boolean
        user_message:
          type: string
        developer_message:
          type: string
      required:
      - developer_message
      - is_success
      - user_message
    Subscription:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
          description: Webhook name
        description:
          type: string
          description: Webhook description
        event_types:
          type: array
          items: {}
          description: Event types that trigger this webhook. Must not be empty.
        job_ids:
          type: array
          items:
            type: integer
          description: Job IDs that trigger this webhook. Leave empty to trigger for
            all jobs.
        client_url:
          type: string
          description: Endpoint where events are sent
        active:
          type: boolean
          description: Whether or not this Webhook is currently active
        http_status_code:
          type: string
          description: The latest HTTP status code received from the client URL. 0
            indicates that the webhook has not been dispatched.
        dispatched_at:
          type: string
          description: Timestamp of when the webhook was last dispatched.
        deactivate_reason:
          type: string
          description: Reason for deactivation
        account_id:
          type: integer
        account_identifier:
          type: string
      required:
      - active
      - client_url
      - event_types
      - name
    SubscriptionRequest:
      type: object
      properties:
        id:
          type: string
          minLength: 1
        name:
          type: string
          minLength: 1
          description: Webhook name
        description:
          type: string
          minLength: 1
          description: Webhook description
        event_types:
          type: array
          items: {}
          description: Event types that trigger this webhook. Must not be empty.
        job_ids:
          type: array
          items:
            type: integer
          description: Job IDs that trigger this webhook. Leave empty to trigger for
            all jobs.
        client_url:
          type: string
          minLength: 1
          description: Endpoint where events are sent
        active:
          type: boolean
          description: Whether or not this Webhook is currently active
        http_status_code:
          type: string
          minLength: 1
          description: The latest HTTP status code received from the client URL. 0
            indicates that the webhook has not been dispatched.
        dispatched_at:
          type: string
          minLength: 1
          description: Timestamp of when the webhook was last dispatched.
        deactivate_reason:
          type: string
          minLength: 1
          description: Reason for deactivation
        account_id:
          type: integer
        account_identifier:
          type: string
          minLength: 1
      required:
      - active
      - client_url
      - event_types
      - name
    SubscriptionResponseEnvelope:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Subscription'
        status:
          $ref: '#/components/schemas/ResponseStatus'
      required:
      - data
      - status
    TestSubscriptionResponseData:
      type: object
      properties:
        verification_error:
          type: string
        verification_status_code:
          type: string
    TestSubscriptionResponseEnvelope:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TestSubscriptionResponseData'
        status:
          $ref: '#/components/schemas/ResponseStatus'
      required:
      - data
      - status
    TimeEnum:
      enum:
      - every_hour
      - at_exact_hours
      type: string
      description: |-
        * `every_hour` - every_hour
        * `at_exact_hours` - at_exact_hours
    Type32eEnum:
      enum:
      - postgres
      - redshift
      - snowflake
      - bigquery
      - adapter
      type: string
      description: |-
        * `postgres` - postgres
        * `redshift` - redshift
        * `snowflake` - snowflake
        * `bigquery` - bigquery
        * `adapter` - adapter
    UpdateIPRestrictionRequestRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
        rule_set_enabled:
          type: boolean
        account_id:
          type: integer
        cidrs:
          type: array
          items:
            $ref: '#/components/schemas/IPRestrictionCidrRequestRequest'
        description:
          type: string
          minLength: 1
        id:
          type: integer
      required:
      - account_id
      - cidrs
      - id
      - name
      - rule_set_enabled
    UpdateSubscriptionResponseEnvelope:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Subscription'
        status:
          $ref: '#/components/schemas/ResponseStatus'
      required:
      - data
      - status
    User:
      type: object
      required:
      - id
      - first_name
      - last_name
      - email
      - is_staff
      - github_connected
      - github_username
      - gitlab_connected
      - gitlab_username
      - azure_active_directory_connected
      - azure_active_directory_username
      - email_connected
      - email_verified
      - slack_connected
      - enterprise_connected
      properties:
        id:
          oneOf:
          - type: 'null'
          - type: integer
        auth0_user_id:
          oneOf:
          - type: 'null'
          - type: string
        auth0_database_user_id:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        is_staff:
          type: boolean
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        last_login:
          oneOf:
          - type: 'null'
          - type: string
            format: date-time
        github_connected:
          oneOf:
          - type: 'null'
          - type: boolean
        github_token_retrieval_failure:
          oneOf:
          - type: 'null'
          - type: boolean
        github_access_token:
          oneOf:
          - type: 'null'
          - type: string
        github_username:
          oneOf:
          - type: 'null'
          - type: string
        gitlab_connected:
          oneOf:
          - type: 'null'
          - type: boolean
        gitlab_token_retrieval_failure:
          oneOf:
          - type: 'null'
          - type: boolean
        gitlab_access_token:
          oneOf:
          - type: 'null'
          - type: string
        gitlab_username:
          oneOf:
          - type: 'null'
          - type: string
        azure_active_directory_connected:
          oneOf:
          - type: 'null'
          - type: boolean
        azure_active_directory_access_token:
          oneOf:
          - type: 'null'
          - type: string
        azure_active_directory_username:
          oneOf:
          - type: 'null'
          - type: string
        azure_active_directory_token_retrieval_failure:
          oneOf:
          - type: 'null'
          - type: boolean
        email_connected:
          oneOf:
          - type: 'null'
          - type: boolean
        email_verified:
          type: boolean
        slack_connected:
          oneOf:
          - type: 'null'
          - type: boolean
        slack_team_name:
          oneOf:
          - type: 'null'
          - type: string
        slack_avatar_url:
          oneOf:
          - type: 'null'
          - type: string
        slack_access_token:
          oneOf:
          - type: 'null'
          - type: string
        enterprise_connected:
          oneOf:
          - type: 'null'
          - type: boolean
        enterprise_authentication_method:
          oneOf:
          - type: 'null'
          - type: string
        enterprise_idp_attributes:
          oneOf:
          - type: 'null'
          - {}
        auth_provider_infos:
          oneOf:
          - type: 'null'
          - {}
        api_key:
          type: string
        password:
          allOf:
          - minLength: 9
          - type: string
        confirm_password:
          type: string
        permissions: {}
        licenses: {}
        user_feature_flags: {}
        apitoken_last_used:
          oneOf:
          - type: 'null'
          - type: string
            format: date-time
        sso_only_user:
          oneOf:
          - type: 'null'
          - type: boolean
      additionalProperties: false
      definitions: {}
      $schema: http://json-schema.org/draft-07/schema#
    UserCredentials:
      type: object
      properties:
        id:
          type: integer
        account_id:
          type: integer
          description: The account the user credentials are associated with
        user_id:
          type: integer
          description: The user the user credentials are associated with
        project_id:
          type: integer
          description: The project the user credentials are associated with
        credentials_id:
          type: integer
          description: The credentials the user is associated with
        state:
          type: integer
          default: 1
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        credentials:
          allOf:
          - $ref: '#/components/schemas/PostgresCredentials'
          readOnly: true
        project:
          allOf:
          - $ref: '#/components/schemas/Project'
          readOnly: true
      required:
      - created_at
      - credentials
      - project
      - updated_at
    UserCredentialsEnveloped:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/UserCredentials'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    UserCredentialsRequest:
      type: object
      properties:
        id:
          type: integer
        account_id:
          type: integer
          description: The account the user credentials are associated with
        user_id:
          type: integer
          description: The user the user credentials are associated with
        project_id:
          type: integer
          description: The project the user credentials are associated with
        credentials_id:
          type: integer
          description: The credentials the user is associated with
        state:
          type: integer
          default: 1
          description: A value of 1 means this entity is active and a value of 2 means
            this entity is deleted
      required:
      - account_id
      - credentials_id
      - project_id
      - user_id
    UserEnveloped:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/User'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
  securitySchemes:
    BearerAuthentication:
      type: http
      scheme: bearer
      bearerFormat: Bearer
servers:
- url: https://cloud.getdbt.com/
  description: Production (US)
- url: https://{account_prefix}.us1.dbt.com/
  description: Production (US)
  variables:
    account_prefix:
      default: ab123
      description: Your unique account prefix. Can be found on your account settings
        page.
- url: https://emea.dbt.com/
  description: Production (Europe)
- url: https://au.dbt.com/
  description: Production (AU)
