openapi: 3.0.3
info:
  title: dbt Cloud API v3
  version: 3.0.0
  description: "# How to use this API\n\nThe dbt Cloud API v3 contains endpoints for\
    \ programmatic administration of your dbt Cloud account.\nWith it, you can replicate\
    \ resources across projects, accounts, and environments, or standardize project\n\
    creation for business teams. For endpoints related to jobs and runs, refer to\
    \ the\n[Discovery API](/docs/dbt-cloud-apis/discovery-api) or [dbt Cloud API v2](/dbt-cloud/api-v2#/).\n\
    \nThe API docs are generated from an openapi spec defined in the\n[dbt-cloud-openapi-spec](https://github.com/dbt-labs/dbt-cloud-openapi-spec/blob/master/openapi-v3.yaml)\n\
    repository. If you find issues in these docs or have questions about using the\
    \ dbt Cloud\nAPI, please open an issue in the dbt-cloud-openapi-spec repo or contact\
    \ support@getdbt.com.\n\n# Authentication\n\nTo authenticate an application with\
    \ the dbt Cloud API, navigate to the\nAPI Settings page in your [dbt Cloud profile](https://cloud.getdbt.com/#/profile/api/).\n\
    If you cannot access this page, confirm that your dbt Cloud account has access\
    \ to the API,\nand that you are using the hosted version of dbt Cloud. If dbt\
    \ Cloud is running inside of a VPC\nin an Enterprise account, contact your account\
    \ manager for help finding your API key.\n\n## Token Auth\n\nOnce you've found\
    \ your API key, use it in the Authorization header of requests to the dbt Cloud\
    \ API.\nBe sure to include the `Token` prefix in the Authorization header, or\
    \ the request will fail with a\n\"401 Unauthorized\" error. Note: `Bearer` can\
    \ be used in place of `Token` in the Authorization header.\nBoth syntaxes are\
    \ equivalent.\n\n**Headers**\n```\nAccept: application/json\nAuthorization: Token\
    \ <your token>\n```\n\n## Example request\n\nThe following example will list the\
    \ Accounts that your token is authorized to access.\nBe sure to replace `<your\
    \ token>` in the Authorization header with your actual API token.\n\n```bash\n\
    curl --request GET \\\n  --url https://cloud.getdbt.com/api/v2/accounts/ \\\n\
    \  --header 'Content-Type: application/json' \\\n  --header 'Authorization: Token\
    \ <your token>'\n```\n\n&nbsp;  \n\n# Pagination\n\nAll top-level API resources\
    \ have support for bulk fetches via \"list\" API methods. These list\nAPI methods\
    \ accept `limit` and `offset` query parameters which can be used together to paginate\
    \ results.\n\nOffsets begin at 0.\n\nThe maximum limit for a single request is\
    \ 100.\n"
  termsOfService: https://www.getdbt.com/terms-of-service
  contact:
    email: support@getdbt.com
paths:
  /api/v3/accounts/:
    get:
      operationId: List Accounts
      description: List the Accounts that your API Token is authorized to access.
      tags:
      - Accounts
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountEnveloped'
          description: ''
  /api/v3/accounts/{account_id}/assign-groups/:
    post:
      operationId: Assign User to Groups
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Groups
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
  /api/v3/accounts/{account_id}/audit-logs/:
    get:
      operationId: List Recent Audit Log Events
      description: |-
        Fetch paginated audit log events.

        Note: This API is only available to enterprise customers.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Audit Logs
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
  /api/v3/accounts/{account_id}/audit-logs/download/:
    get:
      operationId: Get Recent Audit Log Events CSV
      description: |-
        Generate audit log CSV

        Note: This API is only available to enterprise customers.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Audit Logs
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
  /api/v3/accounts/{account_id}/audit-logs/export/:
    get:
      operationId: Get Bulk Audit Log Export Status
      description: |-
        Check the status of a bulk export request.

        Note: This API is only available to enterprise customers.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Audit Logs
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
    post:
      operationId: Submit Bulk Audit Log Export Request
      description: |-
        Submit a bulk export request.

        Note: This API is only available to enterprise customers.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Audit Logs
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
  /api/v3/accounts/{account_id}/audit-logs/export/{job_id}/download/:
    get:
      operationId: Download Bulk Audit Log Export
      description: |-
        Download a bulk export of audit log events.

        Note: This API is only available to enterprise customers.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: job_id
        schema:
          type: string
        required: true
      tags:
      - Audit Logs
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
  /api/v3/accounts/{account_id}/codex-token/:
    get:
      operationId: Retrieve Codex Token
      description: Generate an account-level JWT that can be used to authenticate
        with codex (without a job or project ID)
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Codex Token
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
  /api/v3/accounts/{account_id}/group-permissions/{group_id}/:
    post:
      operationId: Assign Group Permissions
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: group_id
        schema:
          type: integer
        required: true
      tags:
      - Groups
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
  /api/v3/accounts/{account_id}/groups/:
    get:
      operationId: List Groups
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: name__icontains
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: pk__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Groups
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GroupEnveloped'
          description: ''
    post:
      operationId: Create Group
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GroupRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GroupRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GroupEnveloped'
          description: ''
  /api/v3/accounts/{account_id}/groups/{id}/:
    get:
      operationId: Retrieve Group
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: name__icontains
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: pk__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Groups
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupEnveloped'
          description: ''
    post:
      operationId: Update Group
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GroupRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GroupRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupEnveloped'
          description: ''
  /api/v3/accounts/{account_id}/invites/:
    post:
      operationId: Create Invite
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Invites
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
  /api/v3/accounts/{account_id}/license-maps/:
    get:
      operationId: List License Maps
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - License Maps
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LicenseMapEnveloped'
          description: ''
    post:
      operationId: Create License Map
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - License Maps
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LicenseMapRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LicenseMapRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LicenseMapRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LicenseMapEnveloped'
          description: ''
  /api/v3/accounts/{account_id}/license-maps/{id}/:
    get:
      operationId: Retrieve License Map
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - License Maps
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenseMapEnveloped'
          description: ''
    post:
      operationId: Update License Map
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - License Maps
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LicenseMapRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LicenseMapRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LicenseMapRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenseMapEnveloped'
          description: ''
    delete:
      operationId: Destroy License Map
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - License Maps
      security:
      - BearerAuthentication: []
      responses:
        '204':
          description: No response body
  /api/v3/accounts/{account_id}/private-link-endpoints/:
    get:
      operationId: List Private Link Endpoints
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Private Link Endpoints
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
  /api/v3/accounts/{account_id}/projects/:
    get:
      operationId: List Projects
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: name__icontains
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: pk__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Projects
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectEnveloped'
          description: ''
    post:
      operationId: Create Project
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectEnveloped'
          description: ''
  /api/v3/accounts/{account_id}/projects/{id}/:
    get:
      operationId: Retrieve Project
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: name__icontains
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: pk__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Projects
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectEnveloped'
          description: ''
    post:
      operationId: Update Project
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectEnveloped'
          description: ''
    delete:
      operationId: Destroy Project
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: name__icontains
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: pk__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Projects
      security:
      - BearerAuthentication: []
      responses:
        '204':
          description: No response body
  /api/v3/accounts/{account_id}/projects/{project_id}/adapters/:
    get:
      operationId: List Projects Adapters
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Projects Adapters
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DbtAdapterEnveloped'
          description: ''
    post:
      operationId: Create Projects Adapter
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Projects Adapters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DbtAdapterRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DbtAdapterRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DbtAdapterRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DbtAdapterEnveloped'
          description: ''
  /api/v3/accounts/{account_id}/projects/{project_id}/adapters/{id}/:
    get:
      operationId: Retrieve Projects Adapter
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Projects Adapters
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DbtAdapterEnveloped'
          description: ''
    post:
      operationId: Update Projects Adapter
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Projects Adapters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DbtAdapterRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DbtAdapterRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DbtAdapterRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DbtAdapterEnveloped'
          description: ''
    delete:
      operationId: Destroy Projects Adapter
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Projects Adapters
      security:
      - BearerAuthentication: []
      responses:
        '204':
          description: No response body
  /api/v3/accounts/{account_id}/projects/{project_id}/codex-token/:
    get:
      operationId: Retrieve Projects Codex Token
      description: Generate a token for a project that can be used to authenticate
        with codex (without a job definition)
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Projects Codex Token
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
  /api/v3/accounts/{account_id}/projects/{project_id}/connections/:
    get:
      operationId: List Projects Connections
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Connections
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BaseConnectionV3Enveloped'
          description: ''
    post:
      operationId: Create Projects Connection
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Connections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseConnectionV3Request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BaseConnectionV3Request'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BaseConnectionV3Request'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BaseConnectionV3Enveloped'
          description: ''
  /api/v3/accounts/{account_id}/projects/{project_id}/connections/{id}/:
    get:
      operationId: Retrieve Projects Connection
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Connections
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseConnectionV3Enveloped'
          description: ''
    post:
      operationId: Update Projects Connection
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Connections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseConnectionV3Request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BaseConnectionV3Request'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BaseConnectionV3Request'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseConnectionV3Enveloped'
          description: ''
    delete:
      operationId: Destroy Projects Connection
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Connections
      security:
      - BearerAuthentication: []
      responses:
        '204':
          description: No response body
  /api/v3/accounts/{account_id}/projects/{project_id}/credentials/:
    get:
      operationId: List Projects Credentials
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Credentials
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Defaults'
          description: ''
    post:
      operationId: Create Projects Credential
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Credentials
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Defaults'
          description: ''
  /api/v3/accounts/{account_id}/projects/{project_id}/credentials/{id}/:
    get:
      operationId: Retrieve Projects Credential
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Credentials
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
    post:
      operationId: Update Projects Credential
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Credentials
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
    patch:
      operationId: Partial Update Projects Credential
      description: |-
        Overriding the default patch behavior is primarily motivated by the DbtAdapterCredentials model.
        This model stores its credential values in nested json fields and that requires us to patch with
        bespoke merge logic
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Credentials
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
    delete:
      operationId: Destroy Projects Credential
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Credentials
      security:
      - BearerAuthentication: []
      responses:
        '204':
          description: No response body
  /api/v3/accounts/{account_id}/projects/{project_id}/environment-variables/:
    post:
      operationId: Create Projects Environment Variable
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Environment Variables
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomEnvironmentVariableRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomEnvironmentVariableRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomEnvironmentVariableRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomEnvironmentVariableEnveloped'
          description: ''
  /api/v3/accounts/{account_id}/projects/{project_id}/environment-variables/{id}/:
    post:
      operationId: Update Projects Environment Variable
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Environment Variables
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomEnvironmentVariableRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomEnvironmentVariableRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomEnvironmentVariableRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomEnvironmentVariableEnveloped'
          description: ''
    delete:
      operationId: Destroy Projects Environment Variable
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: environment_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: job_definition_id
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      - in: query
        name: type
        schema:
          type: string
      - in: query
        name: user_id
        schema:
          type: integer
      tags:
      - Environment Variables
      security:
      - BearerAuthentication: []
      responses:
        '204':
          description: No response body
  /api/v3/accounts/{account_id}/projects/{project_id}/environment-variables/bulk/:
    post:
      operationId: Create Projects Environment Variables Bulk
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Environment Variables
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomEnvironmentVariableBulkRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomEnvironmentVariableBulkRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomEnvironmentVariableBulkRequestRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomEnvironmentVariableBulkResponseEnveloped'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomEnvironmentVariableBulkResponseFailEnveloped'
          description: ''
    put:
      operationId: Update Projects Environment Variables Bulk
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Environment Variables
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomEnvironmentVariableRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomEnvironmentVariableRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomEnvironmentVariableRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomEnvironmentVariableEnveloped'
          description: ''
    delete:
      operationId: Destroy Projects Environment Variables Bulk
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Environment Variables
      security:
      - BearerAuthentication: []
      responses:
        '204':
          description: No response body
  /api/v3/accounts/{account_id}/projects/{project_id}/environment-variables/environment/:
    get:
      operationId: List Projects Environment Variables Environment
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: environment_id
        schema:
          type: integer
      - in: query
        name: job_definition_id
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      - in: query
        name: type
        schema:
          type: string
      - in: query
        name: user_id
        schema:
          type: integer
      tags:
      - Environment Variables
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomEnvironmentVariableEnveloped'
          description: ''
  /api/v3/accounts/{account_id}/projects/{project_id}/environment-variables/job/:
    get:
      operationId: List Projects Environment Variables Job
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: environment_id
        schema:
          type: integer
      - in: query
        name: job_definition_id
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      - in: query
        name: type
        schema:
          type: string
      - in: query
        name: user_id
        schema:
          type: integer
      tags:
      - Environment Variables
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomEnvironmentVariableEnveloped'
          description: ''
  /api/v3/accounts/{account_id}/projects/{project_id}/environment-variables/user/:
    get:
      operationId: List Projects Environment Variables User
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: environment_id
        schema:
          type: integer
      - in: query
        name: job_definition_id
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      - in: query
        name: type
        schema:
          type: string
      - in: query
        name: user_id
        schema:
          type: integer
      tags:
      - Environment Variables
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomEnvironmentVariableEnveloped'
          description: ''
  /api/v3/accounts/{account_id}/projects/{project_id}/environments/:
    get:
      operationId: List Projects Environments
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: credentials_id
        schema:
          type: integer
      - in: query
        name: dbt_version
        schema:
          type: string
      - in: query
        name: dbt_version__in
        schema:
          type: array
      - in: query
        name: deployment_type
        schema:
          type: string
      - in: query
        name: id__gt
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: pk__in
        schema:
          type: array
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      - in: query
        name: type
        schema:
          type: string
      tags:
      - Environments
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnvironmentV3Enveloped'
          description: ''
    post:
      operationId: Create Projects Environment
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Environments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentV3Request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EnvironmentV3Request'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EnvironmentV3Request'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnvironmentV3Enveloped'
          description: ''
  /api/v3/accounts/{account_id}/projects/{project_id}/environments/{id}/:
    get:
      operationId: Retrieve Projects Environment
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: credentials_id
        schema:
          type: integer
      - in: query
        name: dbt_version
        schema:
          type: string
      - in: query
        name: dbt_version__in
        schema:
          type: array
      - in: query
        name: deployment_type
        schema:
          type: string
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: id__gt
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: pk__in
        schema:
          type: array
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      - in: query
        name: type
        schema:
          type: string
      tags:
      - Environments
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentV3Enveloped'
          description: ''
    post:
      operationId: Update Projects Environment
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Environments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentV3Request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EnvironmentV3Request'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EnvironmentV3Request'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentV3Enveloped'
          description: ''
    delete:
      operationId: Destroy Projects Environment
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: credentials_id
        schema:
          type: integer
      - in: query
        name: dbt_version
        schema:
          type: string
      - in: query
        name: dbt_version__in
        schema:
          type: array
      - in: query
        name: deployment_type
        schema:
          type: string
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: id__gt
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: pk__in
        schema:
          type: array
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      - in: query
        name: type
        schema:
          type: string
      tags:
      - Environments
      security:
      - BearerAuthentication: []
      responses:
        '204':
          description: No response body
  /api/v3/accounts/{account_id}/projects/{project_id}/group-permissions/:
    post:
      operationId: Assign Project Group Permissions
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Groups
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
  /api/v3/accounts/{account_id}/projects/{project_id}/repositories/:
    get:
      operationId: List Repositories
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: remote_url
        schema:
          type: string
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Repositories
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RepositoryV3Enveloped'
          description: ''
    post:
      operationId: Create Repository
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Repositories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepositoryV3Request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RepositoryV3Request'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RepositoryV3Request'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RepositoryV3Enveloped'
          description: ''
  /api/v3/accounts/{account_id}/projects/{project_id}/repositories/{id}/:
    get:
      operationId: Retrieve Repository
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: remote_url
        schema:
          type: string
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Repositories
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoryV3Enveloped'
          description: ''
    post:
      operationId: Update Repository
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      tags:
      - Repositories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepositoryV3Request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RepositoryV3Request'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RepositoryV3Request'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoryV3Enveloped'
          description: ''
    delete:
      operationId: Destroy Repository
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: path
        name: project_id
        schema:
          type: integer
        required: true
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: remote_url
        schema:
          type: string
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Repositories
      security:
      - BearerAuthentication: []
      responses:
        '204':
          description: No response body
  /api/v3/accounts/{account_id}/reports/:
    get:
      operationId: Retrieve Report
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Reports
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
  /api/v3/accounts/{account_id}/service-tokens/:
    get:
      operationId: List Service Tokens
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Service Tokens
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
    post:
      operationId: Create Service Token
      description: This route is used for generating a new service account token.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Service Tokens
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
  /api/v3/accounts/{account_id}/service-tokens/{id}/:
    get:
      operationId: Retrieve Service Token
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Service Tokens
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
    put:
      operationId: Update Service Token
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Service Tokens
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
    delete:
      operationId: Destroy Service Token
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Service Tokens
      security:
      - BearerAuthentication: []
      responses:
        '204':
          description: No response body
  /api/v3/accounts/{account_id}/service-tokens/{service_token_id}/permissions/:
    get:
      operationId: Retrieve Service Tokens Permission
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: service_token_id
        schema:
          type: integer
        required: true
      tags:
      - Service Tokens
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
    post:
      operationId: Create Service Tokens Permission
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: service_token_id
        schema:
          type: integer
        required: true
      tags:
      - Service Tokens
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
  /api/v3/accounts/{account_id}/users/:
    get:
      operationId: Retrieve User
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Users
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
  /api/v3/accounts/{account_id}/webhooks/event/{event_id}:
    get:
      operationId: Retrieve Webhooks Event
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: event_id
        schema:
          type: string
        required: true
      tags:
      - Webhooks
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
  /api/v3/accounts/{account_id}/webhooks/event/{event_id}/receipts:
    get:
      operationId: Retrieve Webhooks Event Receipt
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: event_id
        schema:
          type: string
        required: true
      tags:
      - Webhooks
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
  /api/v3/accounts/{account_id}/webhooks/receipt/{receipt_id}:
    get:
      operationId: Retrieve Webhooks Receipt
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: receipt_id
        schema:
          type: string
        required: true
      tags:
      - Webhooks
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
  /api/v3/accounts/{account_id}/webhooks/subscription/{subscription_id}:
    get:
      operationId: Retrieve Webhooks Subscription
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: subscription_id
        schema:
          type: string
        required: true
      tags:
      - Webhooks
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
    put:
      operationId: Update Webhooks Subscription
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: subscription_id
        schema:
          type: string
        required: true
      tags:
      - Webhooks
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
    delete:
      operationId: Destroy Webhooks Subscription
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: subscription_id
        schema:
          type: string
        required: true
      tags:
      - Webhooks
      security:
      - BearerAuthentication: []
      responses:
        '204':
          description: No response body
  /api/v3/accounts/{account_id}/webhooks/subscription/{subscription_id}/events:
    get:
      operationId: Retrieve Webhooks Subscription Event
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: subscription_id
        schema:
          type: string
        required: true
      tags:
      - Webhooks
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
  /api/v3/accounts/{account_id}/webhooks/subscription/{subscription_id}/test:
    get:
      operationId: Retrieve Webhooks Subscription Test
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: subscription_id
        schema:
          type: string
        required: true
      tags:
      - Webhooks
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
  /api/v3/accounts/{account_id}/webhooks/subscriptions:
    get:
      operationId: List Webhooks Subscriptions
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Webhooks
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
    post:
      operationId: Create Webhooks Subscription
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Webhooks
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
  /api/v3/adapter-schema/:
    get:
      operationId: Retrieve Adapter Schema
      tags:
      - Adapter Schema
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
  /api/v3/users/{user_id}/credentials/:
    get:
      operationId: List Users Credentials
      parameters:
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      - in: query
        name: user_id
        schema:
          type: integer
      tags:
      - Users
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserCredentialsEnveloped'
          description: ''
    post:
      operationId: Create Users Credential
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentialsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCredentialsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCredentialsRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserCredentialsEnveloped'
          description: ''
  /api/v3/users/{user_id}/credentials/{id}/:
    get:
      operationId: Retrieve Users Credential
      parameters:
      - in: query
        name: account_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      - in: query
        name: user_id
        schema:
          type: integer
      tags:
      - Users
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCredentialsEnveloped'
          description: ''
    post:
      operationId: Update Users Credential
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentialsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCredentialsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCredentialsRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCredentialsEnveloped'
          description: ''
    delete:
      operationId: Destroy Users Credential
      parameters:
      - in: query
        name: account_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      - in: query
        name: user_id
        schema:
          type: integer
      tags:
      - Users
      security:
      - BearerAuthentication: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    Account:
      type: object
      required:
      - id
      - name
      - state
      - plan
      - pending_cancel
      - run_slots
      - developer_seats
      - docs_job_id
      - freshness_job_id
      properties:
        id:
          oneOf:
          - type: 'null'
          - type: integer
        name:
          allOf:
          - type: string
          - minLength: 1
            maxLength: 255
        state:
          type: integer
        plan:
          type: string
        pending_cancel:
          type: boolean
        run_slots:
          type: integer
        developer_seats:
          type: integer
        it_seats:
          type: integer
        read_only_seats:
          type: integer
        pod_memory_request_mebibytes:
          type: integer
        run_duration_limit_seconds:
          type: integer
        queue_limit:
          type: integer
        stripe_customer_id:
          oneOf:
          - type: 'null'
          - type: string
        metronome_customer_id:
          oneOf:
          - type: 'null'
          - type: string
        salesforce_customer_id:
          oneOf:
          - type: 'null'
          - type: string
        third_party_billing:
          oneOf:
          - type: 'null'
          - {}
        billing_email_address:
          oneOf:
          - type: 'null'
          - type: string
        locked:
          type: boolean
        lock_reason:
          oneOf:
          - type: 'null'
          - type: string
        lock_cause:
          oneOf:
          - type: 'null'
          - {}
          - {}
          - {}
          - {}
        develop_file_system:
          type: boolean
        unlocked_at:
          oneOf:
          - type: 'null'
          - type: string
            format: date-time
        unlock_if_subscription_renewed:
          type: boolean
        enterprise_authentication_method:
          oneOf:
          - type: 'null'
          - type: string
        enterprise_login_slug:
          oneOf:
          - type: 'null'
          - type: string
        enterprise_unique_identifier:
          oneOf:
          - type: 'null'
          - type: string
        business_critical:
          type: boolean
        groups:
          oneOf:
          - type: 'null'
          - {}
        created_at:
          oneOf:
          - type: 'null'
          - type: string
            format: date-time
          readOnly: true
        updated_at:
          oneOf:
          - type: 'null'
          - type: string
            format: date-time
          readOnly: true
        starter_repo_url:
          oneOf:
          - type: 'null'
          - type: string
        git_auth_level:
          oneOf:
          - type: 'null'
          - type: string
        identifier:
          oneOf:
          - type: 'null'
          - allOf:
            - type: string
            - minLength: 31
              maxLength: 31
        trial_end_date:
          oneOf:
          - type: 'null'
          - type: string
            format: date-time
        static_subdomain:
          oneOf:
          - type: 'null'
          - type: string
        run_locked_until:
          oneOf:
          - type: 'null'
          - type: string
            format: date-time
        docs_job_id:
          oneOf:
          - type: 'null'
          - type: integer
        freshness_job_id:
          oneOf:
          - type: 'null'
          - type: integer
      additionalProperties: false
      definitions: {}
      $schema: http://json-schema.org/draft-07/schema#
    AccountEnveloped:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Account'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    BaseConnectionV3:
      type: object
      properties:
        id:
          type: integer
        account_id:
          type: integer
        project_id:
          type: integer
        name:
          type: string
        created_by_id:
          type: integer
        created_by_service_token_id:
          type: integer
        state:
          type: integer
        private_link_endpoint_id:
          type: string
      required:
      - account_id
      - name
      - project_id
      - state
    BaseConnectionV3Enveloped:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/BaseConnectionV3'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    BaseConnectionV3Request:
      type: object
      properties:
        id:
          type: integer
        account_id:
          type: integer
        project_id:
          type: integer
        name:
          type: string
          minLength: 1
        created_by_id:
          type: integer
        created_by_service_token_id:
          type: integer
        state:
          type: integer
        private_link_endpoint_id:
          type: string
          minLength: 1
      required:
      - account_id
      - name
      - project_id
      - state
    CustomEnvironmentVariable:
      type: object
      properties:
        account_id:
          type: integer
        project_id:
          type: integer
        name:
          type: string
        state:
          type: integer
        user_id:
          type: integer
        environment_id:
          type: integer
        job_definition_id:
          type: integer
        raw_value:
          type: string
        _raw_value:
          allOf:
          - $ref: '#/components/schemas/DataclassEncryptedField'
          title: ' raw value'
        display_value:
          type: string
        id:
          type: integer
      required:
      - account_id
      - name
      - project_id
    CustomEnvironmentVariableBulkRequest:
      type: object
      properties:
        new_name:
          type: string
          minLength: 1
        project:
          type: string
          minLength: 1
        environmentNameExample1:
          type: string
          minLength: 1
          description: This key must match the name of the environment you want to
            set this environment variable for.
        environmentNameExample2:
          type: string
          minLength: 1
          description: This key must match the name of the environment you want to
            set this environment variable for.
      required:
      - new_name
    CustomEnvironmentVariableBulkRequestRequest:
      type: object
      properties:
        env_var:
          type: array
          items:
            $ref: '#/components/schemas/CustomEnvironmentVariableBulkRequest'
      required:
      - env_var
    CustomEnvironmentVariableBulkResponse:
      type: object
      properties:
        status:
          type: string
        status_code:
          type: integer
        key_name:
          type: string
        data:
          $ref: '#/components/schemas/ResponseData'
      required:
      - data
      - key_name
      - status
      - status_code
    CustomEnvironmentVariableBulkResponseEnveloped:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/CustomEnvironmentVariableBulkResponse'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    CustomEnvironmentVariableBulkResponseFail:
      type: object
      properties:
        status:
          type: string
        status_code:
          type: integer
        key_name:
          type: string
        reason:
          type: string
      required:
      - key_name
      - reason
      - status
      - status_code
    CustomEnvironmentVariableBulkResponseFailEnveloped:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/CustomEnvironmentVariableBulkResponseFail'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    CustomEnvironmentVariableEnveloped:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/CustomEnvironmentVariable'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    CustomEnvironmentVariableRequest:
      type: object
      properties:
        account_id:
          type: integer
        project_id:
          type: integer
        name:
          type: string
          minLength: 1
        state:
          type: integer
        user_id:
          type: integer
        environment_id:
          type: integer
        job_definition_id:
          type: integer
        raw_value:
          type: string
          minLength: 1
        _raw_value:
          allOf:
          - $ref: '#/components/schemas/DataclassEncryptedFieldRequest'
          title: ' raw value'
        display_value:
          type: string
          minLength: 1
        id:
          type: integer
      required:
      - account_id
      - name
      - project_id
    DataclassEncryptedField:
      type: object
      properties:
        plaintext:
          type: string
        ciphertext:
          type: string
    DataclassEncryptedFieldRequest:
      type: object
      properties:
        plaintext:
          type: string
          minLength: 1
        ciphertext:
          type: string
          minLength: 1
    DbtAdapter:
      type: object
      properties:
        id:
          type: integer
        account_id:
          type: integer
        project_id:
          type: integer
        created_by_id:
          type: integer
        created_by_service_token_id:
          type: integer
        state:
          type: integer
      required:
      - account_id
      - project_id
      - state
    DbtAdapterEnveloped:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/DbtAdapter'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    DbtAdapterRequest:
      type: object
      properties:
        id:
          type: integer
        account_id:
          type: integer
        project_id:
          type: integer
        created_by_id:
          type: integer
        created_by_service_token_id:
          type: integer
        state:
          type: integer
      required:
      - account_id
      - project_id
      - state
    Defaults:
      type: object
      properties:
        data:
          type: object
          additionalProperties: {}
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    EnvironmentV3:
      type: object
      properties:
        id:
          type: integer
        account_id:
          type: integer
        project_id:
          type: integer
        credentials_id:
          type: integer
        extended_attributes_id:
          type: integer
        name:
          type: string
        dbt_version:
          type: string
        raw_dbt_version:
          type: string
        custom_branch:
          type: string
        state:
          type: integer
        credentials:
          $ref: '#/components/schemas/PostgresCredentials'
        custom_environment_variables:
          type: array
          items:
            $ref: '#/components/schemas/CustomEnvironmentVariable'
      required:
      - account_id
      - dbt_version
      - name
      - project_id
      - state
    EnvironmentV3Enveloped:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EnvironmentV3'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    EnvironmentV3Request:
      type: object
      properties:
        id:
          type: integer
        account_id:
          type: integer
        project_id:
          type: integer
        credentials_id:
          type: integer
        extended_attributes_id:
          type: integer
        name:
          type: string
          minLength: 1
        dbt_version:
          type: string
          minLength: 1
        raw_dbt_version:
          type: string
          minLength: 1
        custom_branch:
          type: string
          minLength: 1
        state:
          type: integer
        credentials:
          $ref: '#/components/schemas/PostgresCredentialsRequest'
        custom_environment_variables:
          type: array
          items:
            $ref: '#/components/schemas/CustomEnvironmentVariableRequest'
      required:
      - account_id
      - dbt_version
      - name
      - project_id
      - state
    GitProvider:
      type: object
      properties:
        account_id:
          type: integer
        state:
          type: integer
        id:
          type: integer
      required:
      - account_id
      - state
    GitProviderRequest:
      type: object
      properties:
        account_id:
          type: integer
        state:
          type: integer
        id:
          type: integer
      required:
      - account_id
      - state
    Group:
      type: object
      properties:
        account_id:
          type: integer
        name:
          type: string
        id:
          type: integer
        state:
          type: integer
        sso_mapping_groups:
          type: array
          items: {}
        group_permissions:
          type: array
          items:
            $ref: '#/components/schemas/GroupPermission'
      required:
      - account_id
      - group_permissions
      - name
      - state
    GroupEnveloped:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Group'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    GroupPermission:
      type: object
      properties:
        account_id:
          type: integer
        group_id:
          type: integer
        project_id:
          type: integer
        permission_level:
          type: integer
        id:
          type: integer
        state:
          type: integer
      required:
      - account_id
      - group_id
      - state
    GroupPermissionRequest:
      type: object
      properties:
        account_id:
          type: integer
        group_id:
          type: integer
        project_id:
          type: integer
        permission_level:
          type: integer
        id:
          type: integer
        state:
          type: integer
      required:
      - account_id
      - group_id
      - state
    GroupRequest:
      type: object
      properties:
        account_id:
          type: integer
        name:
          type: string
          minLength: 1
        id:
          type: integer
        state:
          type: integer
        sso_mapping_groups:
          type: array
          items: {}
        group_permissions:
          type: array
          items:
            $ref: '#/components/schemas/GroupPermissionRequest'
      required:
      - account_id
      - group_permissions
      - name
      - state
    JobDefinitionExecution:
      type: object
      properties:
        timeout_seconds:
          type: integer
      required:
      - timeout_seconds
    JobDefinitionExecutionRequest:
      type: object
      properties:
        timeout_seconds:
          type: integer
      required:
      - timeout_seconds
    JobDefinitionSchedule:
      type: object
      properties:
        cron:
          type: string
      required:
      - cron
    JobDefinitionScheduleRequest:
      type: object
      properties:
        cron:
          type: string
          minLength: 1
      required:
      - cron
    JobDefinitionSettings:
      type: object
      properties:
        threads:
          type: integer
        target_name:
          type: string
      required:
      - target_name
      - threads
    JobDefinitionSettingsRequest:
      type: object
      properties:
        threads:
          type: integer
        target_name:
          type: string
          minLength: 1
      required:
      - target_name
      - threads
    JobDefinitionV2:
      type: object
      properties:
        environment_id:
          type: integer
        account_id:
          type: integer
        project_id:
          type: integer
        name:
          type: string
        description:
          type: string
        state:
          type: integer
        dbt_version:
          type: string
        raw_dbt_version:
          type: string
        id:
          type: integer
        run_failure_count:
          type: integer
        settings:
          $ref: '#/components/schemas/JobDefinitionSettings'
        execution:
          $ref: '#/components/schemas/JobDefinitionExecution'
        schedule:
          $ref: '#/components/schemas/JobDefinitionSchedule'
        execute_steps:
          type: array
          items: {}
        most_recent_run:
          $ref: '#/components/schemas/Run'
        most_recent_completed_run:
          $ref: '#/components/schemas/Run'
        custom_environment_variables:
          type: array
          items:
            $ref: '#/components/schemas/CustomEnvironmentVariable'
      required:
      - account_id
      - environment_id
      - name
      - project_id
      - run_failure_count
      - state
    JobDefinitionV2Request:
      type: object
      properties:
        environment_id:
          type: integer
        account_id:
          type: integer
        project_id:
          type: integer
        name:
          type: string
          minLength: 1
        description:
          type: string
          minLength: 1
        state:
          type: integer
        dbt_version:
          type: string
          minLength: 1
        raw_dbt_version:
          type: string
          minLength: 1
        id:
          type: integer
        run_failure_count:
          type: integer
        settings:
          $ref: '#/components/schemas/JobDefinitionSettingsRequest'
        execution:
          $ref: '#/components/schemas/JobDefinitionExecutionRequest'
        schedule:
          $ref: '#/components/schemas/JobDefinitionScheduleRequest'
        execute_steps:
          type: array
          items: {}
        most_recent_run:
          $ref: '#/components/schemas/RunRequest'
        most_recent_completed_run:
          $ref: '#/components/schemas/RunRequest'
        custom_environment_variables:
          type: array
          items:
            $ref: '#/components/schemas/CustomEnvironmentVariableRequest'
      required:
      - account_id
      - environment_id
      - name
      - project_id
      - run_failure_count
      - state
    LicenseMap:
      type: object
      properties:
        id:
          type: integer
        account_id:
          type: integer
        state:
          type: integer
        sso_license_mapping_groups:
          type: array
          items: {}
      required:
      - account_id
      - state
    LicenseMapEnveloped:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/LicenseMap'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    LicenseMapRequest:
      type: object
      properties:
        id:
          type: integer
        account_id:
          type: integer
        state:
          type: integer
        sso_license_mapping_groups:
          type: array
          items: {}
      required:
      - account_id
      - state
    PostgresCredentials:
      type: object
      properties:
        id:
          type: integer
        account_id:
          type: integer
        project_id:
          type: integer
        state:
          type: integer
        threads:
          type: integer
        username:
          type: string
        default_schema:
          type: string
        target_name:
          type: string
        password:
          type: string
        _password:
          allOf:
          - $ref: '#/components/schemas/DataclassEncryptedField'
          title: ' password'
      required:
      - account_id
      - default_schema
      - state
      - target_name
      - threads
      - username
    PostgresCredentialsRequest:
      type: object
      properties:
        id:
          type: integer
        account_id:
          type: integer
        project_id:
          type: integer
        state:
          type: integer
        threads:
          type: integer
        username:
          type: string
          minLength: 1
        default_schema:
          type: string
          minLength: 1
        target_name:
          type: string
          minLength: 1
        password:
          type: string
          minLength: 1
        _password:
          allOf:
          - $ref: '#/components/schemas/DataclassEncryptedFieldRequest'
          title: ' password'
      required:
      - account_id
      - default_schema
      - state
      - target_name
      - threads
      - username
    Project:
      type: object
      properties:
        name:
          type: string
        account_id:
          type: integer
          description: id of account this project belongs to
        connection_id:
          type: integer
        repository_id:
          type: integer
        semantic_layer_config_id:
          type: integer
        id:
          type: integer
        state:
          type: integer
        dbt_project_subdirectory:
          type: string
        connection:
          $ref: '#/components/schemas/BaseConnectionV3'
        repository:
          $ref: '#/components/schemas/RepositoryV3'
        group_permissions:
          type: array
          items:
            $ref: '#/components/schemas/GroupPermission'
        docs_job_id:
          type: integer
        freshness_job_id:
          type: integer
        docs_job:
          $ref: '#/components/schemas/JobDefinitionV2'
        freshness_job:
          $ref: '#/components/schemas/JobDefinitionV2'
      required:
      - account_id
      - name
      - state
    ProjectEnveloped:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Project'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    ProjectRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
        account_id:
          type: integer
          description: id of account this project belongs to
        connection_id:
          type: integer
        repository_id:
          type: integer
        semantic_layer_config_id:
          type: integer
        id:
          type: integer
        state:
          type: integer
        dbt_project_subdirectory:
          type: string
          minLength: 1
        connection:
          $ref: '#/components/schemas/BaseConnectionV3Request'
        repository:
          $ref: '#/components/schemas/RepositoryV3Request'
        group_permissions:
          type: array
          items:
            $ref: '#/components/schemas/GroupPermissionRequest'
        docs_job_id:
          type: integer
        freshness_job_id:
          type: integer
        docs_job:
          $ref: '#/components/schemas/JobDefinitionV2Request'
        freshness_job:
          $ref: '#/components/schemas/JobDefinitionV2Request'
      required:
      - account_id
      - name
      - state
    RepositoryGitlab:
      type: object
      properties:
        id:
          type: integer
        account_id:
          type: integer
        repository_id:
          type: integer
        gitlab_project_id:
          type: integer
        state:
          type: integer
        project_access_token_id:
          type: integer
        project_access_token:
          type: string
        _project_access_token:
          allOf:
          - $ref: '#/components/schemas/DataclassEncryptedField'
          title: ' project access token'
      required:
      - account_id
      - gitlab_project_id
      - state
    RepositoryGitlabRequest:
      type: object
      properties:
        id:
          type: integer
        account_id:
          type: integer
        repository_id:
          type: integer
        gitlab_project_id:
          type: integer
        state:
          type: integer
        project_access_token_id:
          type: integer
        project_access_token:
          type: string
          minLength: 1
        _project_access_token:
          allOf:
          - $ref: '#/components/schemas/DataclassEncryptedFieldRequest'
          title: ' project access token'
      required:
      - account_id
      - gitlab_project_id
      - state
    RepositoryV3:
      type: object
      properties:
        id:
          type: integer
        account_id:
          type: integer
        project_id:
          type: integer
        full_name:
          type: string
        deploy_key_id:
          type: integer
        repository_credentials_id:
          type: integer
        github_installation_id:
          type: integer
        github_webhook_id:
          type: integer
        github_webhook_secret:
          type: string
        _github_webhook_secret:
          allOf:
          - $ref: '#/components/schemas/DataclassEncryptedField'
          title: ' github webhook secret'
        state:
          type: integer
        github_repo:
          type: string
        name:
          type: string
        git_provider_id:
          type: integer
        gitlab:
          $ref: '#/components/schemas/RepositoryGitlab'
        git_provider:
          $ref: '#/components/schemas/GitProvider'
      required:
      - account_id
      - state
    RepositoryV3Enveloped:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/RepositoryV3'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    RepositoryV3Request:
      type: object
      properties:
        id:
          type: integer
        account_id:
          type: integer
        project_id:
          type: integer
        full_name:
          type: string
          minLength: 1
        deploy_key_id:
          type: integer
        repository_credentials_id:
          type: integer
        github_installation_id:
          type: integer
        github_webhook_id:
          type: integer
        github_webhook_secret:
          type: string
          minLength: 1
        _github_webhook_secret:
          allOf:
          - $ref: '#/components/schemas/DataclassEncryptedFieldRequest'
          title: ' github webhook secret'
        state:
          type: integer
        github_repo:
          type: string
          minLength: 1
        name:
          type: string
          minLength: 1
        git_provider_id:
          type: integer
        gitlab:
          $ref: '#/components/schemas/RepositoryGitlabRequest'
        git_provider:
          $ref: '#/components/schemas/GitProviderRequest'
      required:
      - account_id
      - state
    ResponseData:
      type: object
      properties:
        message:
          type: string
        new_var_ids:
          type: array
          items: {}
      required:
      - message
      - new_var_ids
    Run:
      type: object
      properties:
        id:
          type: integer
        trigger_id:
          type: integer
        account_id:
          type: integer
        environment_id:
          type: integer
        project_id:
          type: integer
        job_definition_id:
          type: integer
        status:
          type: integer
        dbt_version:
          type: string
        git_branch:
          type: string
        git_sha:
          type: string
        status_message:
          type: string
        owner_thread_id:
          type: string
        executed_by_thread_id:
          type: string
        deferring_run_id:
          type: integer
        artifact_s3_path:
          type: string
        blocked_by:
          type: array
          items: {}
        status_humanized:
          type: string
        duration:
          type: string
        queued_duration:
          type: string
        run_duration:
          type: string
        duration_humanized:
          type: string
        queued_duration_humanized:
          type: string
        run_duration_humanized:
          type: string
        created_at_humanized:
          type: string
        finished_at_humanized:
          type: string
        job_id:
          type: integer
      required:
      - account_id
      - blocked_by
      - dbt_version
      - environment_id
      - job_definition_id
      - project_id
      - status
    RunRequest:
      type: object
      properties:
        id:
          type: integer
        trigger_id:
          type: integer
        account_id:
          type: integer
        environment_id:
          type: integer
        project_id:
          type: integer
        job_definition_id:
          type: integer
        status:
          type: integer
        dbt_version:
          type: string
          minLength: 1
        git_branch:
          type: string
          minLength: 1
        git_sha:
          type: string
          minLength: 1
        status_message:
          type: string
          minLength: 1
        owner_thread_id:
          type: string
          minLength: 1
        executed_by_thread_id:
          type: string
          minLength: 1
        deferring_run_id:
          type: integer
        artifact_s3_path:
          type: string
          minLength: 1
        blocked_by:
          type: array
          items: {}
        status_humanized:
          type: string
          minLength: 1
        duration:
          type: string
          minLength: 1
        queued_duration:
          type: string
          minLength: 1
        run_duration:
          type: string
          minLength: 1
        duration_humanized:
          type: string
          minLength: 1
        queued_duration_humanized:
          type: string
          minLength: 1
        run_duration_humanized:
          type: string
          minLength: 1
        created_at_humanized:
          type: string
          minLength: 1
        finished_at_humanized:
          type: string
          minLength: 1
        job_id:
          type: integer
      required:
      - account_id
      - blocked_by
      - dbt_version
      - environment_id
      - job_definition_id
      - project_id
      - status
    Status:
      type: object
      properties:
        code:
          type: integer
          default: 200
        is_success:
          type: boolean
        user_message:
          type: string
        developer_message:
          type: string
      required:
      - developer_message
      - is_success
      - user_message
    UserCredentials:
      type: object
      properties:
        id:
          type: integer
        account_id:
          type: integer
        user_id:
          type: integer
        project_id:
          type: integer
        credentials_id:
          type: integer
        state:
          type: integer
        credentials:
          $ref: '#/components/schemas/PostgresCredentials'
        project:
          $ref: '#/components/schemas/Project'
      required:
      - account_id
      - credentials_id
      - project_id
      - state
      - user_id
    UserCredentialsEnveloped:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/UserCredentials'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    UserCredentialsRequest:
      type: object
      properties:
        id:
          type: integer
        account_id:
          type: integer
        user_id:
          type: integer
        project_id:
          type: integer
        credentials_id:
          type: integer
        state:
          type: integer
        credentials:
          $ref: '#/components/schemas/PostgresCredentialsRequest'
        project:
          $ref: '#/components/schemas/ProjectRequest'
      required:
      - account_id
      - credentials_id
      - project_id
      - state
      - user_id
  securitySchemes:
    BearerAuthentication:
      type: http
      scheme: bearer
      bearerFormat: Bearer
servers:
- url: https://cloud.getdbt.com/
  description: Production (US)
- url: https://emea.dbt.com/
  description: Production (Europe)
- url: https://au.dbt.com/
  description: Production (AU)
