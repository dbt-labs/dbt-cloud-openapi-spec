openapi: 3.0.3
info:
  title: dbt Cloud API v2
  version: 2.0.0
  description: "# How to use this API\n\nThe dbt Cloud API is intended for enqueuing\
    \ runs from a job, polling for run progress,\nand downloading artifacts after\
    \ jobs have completed running. Operational endpoints around\ncreating, modifying,\
    \ and deleting _objects_ in dbt Cloud are still in flux. These endpoints\nare\
    \ largely undocumented in API v2.\n\nThe API docs are generated from an openapi\
    \ spec defined in the\n[dbt-cloud-openapi-spec](https://github.com/dbt-labs/dbt-cloud-openapi-spec)\n\
    repository. If you find issues in these docs or have questions about using the\
    \ dbt Cloud\nAPI, please open an issue in the dbt-cloud-openapi-spec repo or contact\
    \ support@getdbt.com.\n\n# Authentication\n\nTo authenticate an application with\
    \ the dbt Cloud API, navigate to the\nAPI Settings page in your [dbt Cloud profile](https://cloud.getdbt.com/#/profile/api/).\n\
    If you cannot access this page, confirm that your dbt Cloud account has access\
    \ to the API,\nand that you are using the hosted version of dbt Cloud. If dbt\
    \ Cloud is running inside of a VPC\nin an Enterprise account, contact your account\
    \ manager for help finding your API key.\n\n## Token Auth\n\nOnce you've found\
    \ your API key, use it in the Authorization header of requests to the dbt Cloud\
    \ API.\nBe sure to include the `Token` prefix in the Authorization header, or\
    \ the request will fail with a\n\"401 Unauthorized\" error. Note: `Bearer` can\
    \ be used in place of `Token` in the Authorization header.\nBoth syntaxes are\
    \ equivalent.\n\n**Headers**\n```\nAccept: application/json\nAuthorization: Token\
    \ <your token>\n```\n\n## Example request\n\nThe following example will list the\
    \ Accounts that your token is authorized to access.\nBe sure to replace `<your\
    \ token>` in the Authorization header with your actual API token.\n\n```bash\n\
    curl --request GET \\\n  --url https://cloud.getdbt.com/api/v2/accounts/ \\\n\
    \  --header 'Content-Type: application/json' \\\n  --header 'Authorization: Token\
    \ <your token>'\n```\n\n&nbsp;  \n\n# Pagination\n\nAll top-level API resources\
    \ have support for bulk fetches via \"list\" API methods. These list\nAPI methods\
    \ accept `limit` and `offset` query parameters which can be used together to paginate\
    \ results.\n\nOffsets begin at 0.\n\nThe maximum limit for a single request is\
    \ 100.\n"
  termsOfService: https://www.getdbt.com/terms-of-service
  contact:
    email: support@getdbt.com
paths:
  /api/v2/accounts/{account_id}/connections/:
    get:
      operationId: List Connections
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Connections
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BaseConnectionEnveloped'
          description: ''
    post:
      operationId: Create Connection
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Connections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseConnectionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BaseConnectionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BaseConnectionRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BaseConnectionEnveloped'
          description: ''
  /api/v2/accounts/{account_id}/connections/{id}/:
    get:
      operationId: Retrieve Connection
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Connections
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseConnectionEnveloped'
          description: ''
    post:
      operationId: Update Connection
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Connections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseConnectionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BaseConnectionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BaseConnectionRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseConnectionEnveloped'
          description: ''
    delete:
      operationId: Destroy Connection
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Connections
      security:
      - BearerAuthentication: []
      responses:
        '204':
          description: No response body
  /api/v2/accounts/{account_id}/encryptions/:
    get:
      operationId: List Connection Encryptions
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: connection_id
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Connection Encryptions
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConnectionEncryptionEnveloped'
          description: ''
    post:
      operationId: Create Connection Encryption
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Connection Encryptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionEncryptionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConnectionEncryptionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConnectionEncryptionRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConnectionEncryptionEnveloped'
          description: ''
  /api/v2/accounts/{account_id}/encryptions/{id}/:
    get:
      operationId: Retrieve Connection Encryption
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: connection_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Connection Encryptions
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionEncryptionEnveloped'
          description: ''
    post:
      operationId: Update Connection Encryption
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Connection Encryptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionEncryptionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConnectionEncryptionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConnectionEncryptionRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionEncryptionEnveloped'
          description: ''
    delete:
      operationId: Destroy Connection Encryption
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: connection_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Connection Encryptions
      security:
      - BearerAuthentication: []
      responses:
        '204':
          description: No response body
  /api/v2/accounts/{account_id}/environments/:
    get:
      operationId: List Environments
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: dbt_version
        schema:
          type: string
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Environments
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnvironmentV2Enveloped'
          description: ''
    post:
      operationId: Create Environment
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Environments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentV2Request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EnvironmentV2Request'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EnvironmentV2Request'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnvironmentV2Enveloped'
          description: ''
  /api/v2/accounts/{account_id}/environments/{id}/:
    get:
      operationId: Retrieve Environment
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: dbt_version
        schema:
          type: string
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Environments
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentV2Enveloped'
          description: ''
    post:
      operationId: Update Environment
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Environments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentV2Request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EnvironmentV2Request'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EnvironmentV2Request'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentV2Enveloped'
          description: ''
    delete:
      operationId: Destroy Environment
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: dbt_version
        schema:
          type: string
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Environments
      security:
      - BearerAuthentication: []
      responses:
        '204':
          description: No response body
  /api/v2/accounts/{account_id}/invites/:
    get:
      operationId: List Invites
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Invites
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
  /api/v2/accounts/{account_id}/invites/{id}/:
    get:
      operationId: Retrieve Invite
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Invites
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
    post:
      operationId: Create Invite
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Invites
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
  /api/v2/accounts/{account_id}/jobs/:
    get:
      operationId: List Jobs
      parameters:
      - in: query
        name: account__locked
        schema:
          type: boolean
      - in: query
        name: account__state
        schema:
          type: integer
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: deactivated
        schema:
          type: boolean
      - in: query
        name: environment__state
        schema:
          type: integer
      - in: query
        name: environment_id
        schema:
          type: integer
      - in: query
        name: id__gt
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: name__icontains
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: project__state
        schema:
          type: integer
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      - in: query
        name: triggers_schedule
        schema:
          type: boolean
      tags:
      - Jobs
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InternalJobDefinitionEnveloped'
          description: ''
    post:
      operationId: Create Job
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InternalJobDefinitionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InternalJobDefinitionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InternalJobDefinitionRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InternalJobDefinitionEnveloped'
          description: ''
  /api/v2/accounts/{account_id}/jobs/{job_id}/artifacts/{remainder}:
    get:
      operationId: Retrieve Job Artifact
      description: Given a job id and *a set of Run filters* return the latest matching
        artifact for that job.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: job_id
        schema:
          type: integer
        required: true
      - in: path
        name: remainder
        schema:
          type: string
        required: true
      tags:
      - Jobs
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
  /api/v2/accounts/{account_id}/jobs/{job_id}/run/:
    post:
      operationId: Trigger Job Run
      description: Use this endpoint to kick off a run for a job. When this endpoint
        returns a successful response, a new run will be enqueued for the account.
        Users can poll the Get run endpoint to poll the run until it completes. After
        the run has completed, users can use the Get run artifact endpoint to download
        artifacts generated by the run.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: job_id
        schema:
          type: integer
        required: true
      tags:
      - Jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TriggerRunRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TriggerRunRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TriggerRunRequestRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunEnveloped'
          description: ''
  /api/v2/accounts/{account_id}/jobs/{id}/:
    get:
      operationId: Retrieve Job
      parameters:
      - in: query
        name: account__locked
        schema:
          type: boolean
      - in: query
        name: account__state
        schema:
          type: integer
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: deactivated
        schema:
          type: boolean
      - in: query
        name: environment__state
        schema:
          type: integer
      - in: query
        name: environment_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: id__gt
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: name__icontains
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: project__state
        schema:
          type: integer
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      - in: query
        name: triggers_schedule
        schema:
          type: boolean
      tags:
      - Jobs
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalJobDefinitionEnveloped'
          description: ''
    post:
      operationId: Update Job
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InternalJobDefinitionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InternalJobDefinitionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InternalJobDefinitionRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalJobDefinitionEnveloped'
          description: ''
    delete:
      operationId: Destroy Job
      parameters:
      - in: query
        name: account__locked
        schema:
          type: boolean
      - in: query
        name: account__state
        schema:
          type: integer
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: deactivated
        schema:
          type: boolean
      - in: query
        name: environment__state
        schema:
          type: integer
      - in: query
        name: environment_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: id__gt
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: name__icontains
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: project__state
        schema:
          type: integer
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      - in: query
        name: triggers_schedule
        schema:
          type: boolean
      tags:
      - Jobs
      security:
      - BearerAuthentication: []
      responses:
        '204':
          description: No response body
  /api/v2/accounts/{account_id}/licenses/:
    get:
      operationId: List Account Licenses
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Licenses
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
  /api/v2/accounts/{account_id}/notifications/:
    get:
      operationId: List Notifications
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Notifications
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobNotificationSettingsEnveloped'
          description: ''
    post:
      operationId: Create Notification
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobNotificationSettingsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobNotificationSettingsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobNotificationSettingsRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobNotificationSettingsEnveloped'
          description: ''
  /api/v2/accounts/{account_id}/notifications/{id}/:
    get:
      operationId: Retrieve Notification
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Notifications
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobNotificationSettingsEnveloped'
          description: ''
    post:
      operationId: Update Notification
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobNotificationSettingsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobNotificationSettingsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobNotificationSettingsRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobNotificationSettingsEnveloped'
          description: ''
    delete:
      operationId: Destroy Notification
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Notifications
      security:
      - BearerAuthentication: []
      responses:
        '204':
          description: No response body
  /api/v2/accounts/{account_id}/permissions/{id}/:
    post:
      operationId: Create Permission
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Permissions
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
  /api/v2/accounts/{account_id}/projects/:
    get:
      operationId: List Projects
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: name__icontains
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: pk__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Projects
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectEnveloped'
          description: ''
    post:
      operationId: Create Project
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectEnveloped'
          description: ''
  /api/v2/accounts/{account_id}/projects/{id}/:
    get:
      operationId: Retrieve Project
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: name__icontains
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: pk__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Projects
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectEnveloped'
          description: ''
    post:
      operationId: Update Project
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectEnveloped'
          description: ''
    delete:
      operationId: Destroy Project
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: name__icontains
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: pk__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Projects
      security:
      - BearerAuthentication: []
      responses:
        '204':
          description: No response body
  /api/v2/accounts/{account_id}/repositories/:
    get:
      operationId: List Repositories
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: remote_url
        schema:
          type: string
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Repositories
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RepositoryV2Enveloped'
          description: ''
    post:
      operationId: Create Repository
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Repositories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepositoryV2Request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RepositoryV2Request'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RepositoryV2Request'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RepositoryV2Enveloped'
          description: ''
  /api/v2/accounts/{account_id}/repositories/{id}/:
    get:
      operationId: Retrieve Repository
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: remote_url
        schema:
          type: string
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Repositories
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoryV2Enveloped'
          description: ''
    delete:
      operationId: Destroy Repository
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: remote_url
        schema:
          type: string
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Repositories
      security:
      - BearerAuthentication: []
      responses:
        '204':
          description: No response body
  /api/v2/accounts/{account_id}/runs/:
    get:
      operationId: List Runs
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: created_at__range
        schema:
          type: array
      - in: query
        name: dbt_version
        schema:
          type: string
      - in: query
        name: dbt_version__in
        schema:
          type: array
      - in: query
        name: deferring_run_id
        schema:
          type: integer
      - in: query
        name: environment_id
        schema:
          type: integer
      - in: query
        name: has_docs_generated
        schema:
          type: boolean
      - in: query
        name: has_sources_generated
        schema:
          type: boolean
      - in: query
        name: id__gt
        schema:
          type: integer
      - in: query
        name: job_definition_id
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: status
        schema:
          type: integer
      - in: query
        name: status__in
        schema:
          type: array
      tags:
      - Runs
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RunEnveloped'
          description: ''
  /api/v2/accounts/{account_id}/runs/{id}/:
    get:
      operationId: Retrieve Run
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: created_at__range
        schema:
          type: array
      - in: query
        name: dbt_version
        schema:
          type: string
      - in: query
        name: dbt_version__in
        schema:
          type: array
      - in: query
        name: deferring_run_id
        schema:
          type: integer
      - in: query
        name: environment_id
        schema:
          type: integer
      - in: query
        name: has_docs_generated
        schema:
          type: boolean
      - in: query
        name: has_sources_generated
        schema:
          type: boolean
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: id__gt
        schema:
          type: integer
      - in: query
        name: job_definition_id
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: status
        schema:
          type: integer
      - in: query
        name: status__in
        schema:
          type: array
      tags:
      - Runs
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunEnveloped'
          description: ''
  /api/v2/accounts/{account_id}/runs/{run_id}/artifacts/:
    get:
      operationId: List Run Artifacts
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: run_id
        schema:
          type: integer
        required: true
      tags:
      - Runs
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
  /api/v2/accounts/{account_id}/runs/{run_id}/artifacts/{remainder}:
    get:
      operationId: Retrieve Run Artifact
      description: Use this endpoint to fetch artifacts from a completed run. Once
        a run has completed, you can use this endpoint to download the `manifest.json`,
        run `results.json` or `catalog.json` files from dbt Cloud. These artifacts
        contain information about the models in your dbt project, timing information
        around their execution, and a status message indicating the result of the
        model build. By default, this endpoint returns artifacts from the last step
        in the run. To list artifacts from other steps in the run, use the step query
        parameter described below.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: remainder
        schema:
          type: string
        required: true
      - in: path
        name: run_id
        schema:
          type: integer
        required: true
      - in: query
        name: step
        schema:
          type: integer
        description: The index of the Step in the Run to query for artifacts. The
          first step in the run has the index `1`. If the `step` parameter is omitted,
          then this endpoint will return the artifacts compiled for the last step
          in the run.
      tags:
      - Runs
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
  /api/v2/accounts/{account_id}/runs/{run_id}/cancel/:
    post:
      operationId: Cancel Run
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: run_id
        schema:
          type: integer
        required: true
      tags:
      - Runs
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
  /api/v2/accounts/{account_id}/steps/{id}/:
    get:
      operationId: Retrieve Run Step
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Runs
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
  /api/v2/accounts/{account_id}/users/:
    get:
      operationId: List Users
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Users
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
  /api/v2/notifications/unsubscribe/:
    post:
      operationId: Unsubscribe from Notifications
      tags:
      - Notifications
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
  /api/v2/users/{id}/:
    get:
      operationId: Retrieve User
      parameters:
      - in: query
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Users
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserEnveloped'
          description: ''
    post:
      operationId: Update User
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserEnveloped'
          description: ''
components:
  schemas:
    BaseConnection:
      type: object
      required:
      - id
      - account_id
      - name
      - type
      - state
      properties:
        id:
          oneOf:
          - type: 'null'
          - type: integer
        account_id:
          type: integer
        dbt_project_id:
          type: integer
        created_by_id:
          oneOf:
          - type: 'null'
          - type: integer
        created_by_service_token_id:
          oneOf:
          - type: 'null'
          - type: integer
        name:
          allOf:
          - type: string
          - minLength: 1
            maxLength: 255
        type:
          type: string
        state:
          type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      additionalProperties: false
      definitions: {}
      $schema: http://json-schema.org/draft-07/schema#
    BaseConnectionEnveloped:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/BaseConnection'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    BaseConnectionRequest:
      type: object
      required:
      - id
      - account_id
      - name
      - type
      - state
      properties:
        id:
          oneOf:
          - type: 'null'
          - type: integer
        account_id:
          type: integer
        dbt_project_id:
          type: integer
        created_by_id:
          oneOf:
          - type: 'null'
          - type: integer
        created_by_service_token_id:
          oneOf:
          - type: 'null'
          - type: integer
        name:
          allOf:
          - type: string
          - minLength: 1
            maxLength: 255
        type:
          type: string
        state:
          type: integer
      additionalProperties: false
      definitions: {}
      $schema: http://json-schema.org/draft-07/schema#
    ConnectionEncryption:
      type: object
      required:
      - account_id
      - connection_id
      - username
      - port
      - hostname
      properties:
        account_id:
          type: integer
        connection_id:
          type: integer
        username:
          type: string
        port:
          type: integer
        hostname:
          type: string
        public_key:
          oneOf:
          - type: string
          - type: 'null'
        state:
          type: integer
          default: 1
        id:
          oneOf:
          - type: integer
          - type: 'null'
          readOnly: true
      additionalProperties: false
      description: 'ConnectionEncryption(account_id: int, connection_id: int, username:
        str, port: int, hostname: str, public_key: Union[str, NoneType] = None, state:
        int = 1, id: Union[int, NoneType] = None, private_key: Union[str, NoneType]
        = None, _private_key: Union[models.encrypted_field.DataclassEncryptedField,
        NoneType] = None)'
      definitions: {}
      $schema: http://json-schema.org/draft-07/schema#
    ConnectionEncryptionEnveloped:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ConnectionEncryption'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    ConnectionEncryptionRequest:
      type: object
      required:
      - account_id
      - connection_id
      - username
      - port
      - hostname
      properties:
        account_id:
          type: integer
        connection_id:
          type: integer
        username:
          type: string
        port:
          type: integer
        hostname:
          type: string
        public_key:
          oneOf:
          - type: string
          - type: 'null'
        state:
          type: integer
          default: 1
        private_key:
          oneOf:
          - type: string
          - type: 'null'
          writeOnly: true
      additionalProperties: false
      description: 'ConnectionEncryption(account_id: int, connection_id: int, username:
        str, port: int, hostname: str, public_key: Union[str, NoneType] = None, state:
        int = 1, id: Union[int, NoneType] = None, private_key: Union[str, NoneType]
        = None, _private_key: Union[models.encrypted_field.DataclassEncryptedField,
        NoneType] = None)'
      definitions: {}
      $schema: http://json-schema.org/draft-07/schema#
    Defaults:
      type: object
      properties:
        data:
          type: object
          additionalProperties: {}
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    EnvironmentV2:
      type: object
      required:
      - id
      - account_id
      - connection_id
      - created_by_id
      - name
      - dbt_project_subdirectory
      - use_custom_branch
      - custom_branch
      - dbt_version
      - supports_docs
      - repository_id
      - state
      properties:
        id:
          oneOf:
          - type: 'null'
          - type: integer
        account_id:
          type: integer
        connection_id:
          oneOf:
          - type: 'null'
          - type: integer
        project_id:
          oneOf:
          - type: 'null'
          - type: integer
        credentials_id:
          oneOf:
          - type: 'null'
          - type: integer
        created_by_id:
          oneOf:
          - type: 'null'
          - type: integer
        name:
          allOf:
          - type: string
          - minLength: 1
            maxLength: 255
        dbt_project_subdirectory:
          oneOf:
          - type: 'null'
          - type: string
        use_custom_branch:
          type: boolean
        custom_branch:
          oneOf:
          - type: 'null'
          - type: string
        dbt_version:
          oneOf:
          - type: 'null'
          - type: string
        raw_dbt_version:
          oneOf:
          - type: 'null'
          - type: string
        supports_docs:
          type: boolean
        repository_id:
          oneOf:
          - type: 'null'
          - type: integer
        state:
          type: integer
        repository:
          oneOf:
          - type: 'null'
          - {}
        jobs: {}
        connection:
          oneOf:
          - type: 'null'
          - {}
        custom_environment_variables:
          oneOf:
          - type: 'null'
          - {}
        updated_at:
          oneOf:
          - type: 'null'
          - type: string
            format: date-time
          readOnly: true
      additionalProperties: false
      definitions: {}
      $schema: http://json-schema.org/draft-07/schema#
    EnvironmentV2Enveloped:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentV2'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    EnvironmentV2Request:
      type: object
      required:
      - id
      - account_id
      - connection_id
      - created_by_id
      - name
      - dbt_project_subdirectory
      - use_custom_branch
      - custom_branch
      - dbt_version
      - supports_docs
      - repository_id
      - state
      properties:
        id:
          oneOf:
          - type: 'null'
          - type: integer
        account_id:
          type: integer
        connection_id:
          oneOf:
          - type: 'null'
          - type: integer
        project_id:
          oneOf:
          - type: 'null'
          - type: integer
        credentials_id:
          oneOf:
          - type: 'null'
          - type: integer
        created_by_id:
          oneOf:
          - type: 'null'
          - type: integer
        name:
          allOf:
          - type: string
          - minLength: 1
            maxLength: 255
        dbt_project_subdirectory:
          oneOf:
          - type: 'null'
          - type: string
        use_custom_branch:
          type: boolean
        custom_branch:
          oneOf:
          - type: 'null'
          - type: string
        dbt_version:
          oneOf:
          - type: 'null'
          - type: string
        raw_dbt_version:
          oneOf:
          - type: 'null'
          - type: string
        supports_docs:
          type: boolean
        repository_id:
          oneOf:
          - type: 'null'
          - type: integer
        state:
          type: integer
        repository:
          oneOf:
          - type: 'null'
          - {}
        jobs: {}
        connection:
          oneOf:
          - type: 'null'
          - {}
        custom_environment_variables:
          oneOf:
          - type: 'null'
          - {}
      additionalProperties: false
      definitions: {}
      $schema: http://json-schema.org/draft-07/schema#
    InternalJobDefinition:
      type: object
      required:
      - id
      - environment_id
      - account_id
      - project_id
      - name
      - dbt_version
      - triggers
      - schedule
      - settings
      - execution
      - state
      - generate_docs
      - run_generate_sources
      properties:
        id:
          oneOf:
          - type: 'null'
          - type: integer
        environment_id:
          type: integer
        deferring_job_definition_id:
          oneOf:
          - type: 'null'
          - type: integer
        deferring_environment_id:
          oneOf:
          - type: 'null'
          - type: integer
        lifecycle_webhooks:
          oneOf:
          - type: boolean
          - type: 'null'
        lifecycle_webhooks_url:
          oneOf:
          - type: string
          - type: 'null'
        account_id:
          type: integer
        project_id:
          type: integer
        name:
          allOf:
          - type: string
          - minLength: 1
            maxLength: 255
        dbt_version:
          oneOf:
          - type: string
          - type: 'null'
        raw_dbt_version:
          oneOf:
          - type: string
          - type: 'null'
        triggers: {}
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        execute_steps:
          allOf:
          - {}
          - minLength: 1
            maxLength: 100
          - {}
        schedule: {}
        settings: {}
        execution: {}
        state:
          oneOf:
          - {}
          - {}
        generate_docs:
          type: boolean
        run_generate_sources:
          type: boolean
        environment: {}
        account:
          oneOf:
          - {}
          - type: 'null'
        project:
          oneOf:
          - {}
          - type: 'null'
        most_recent_completed_run:
          oneOf:
          - {}
          - type: 'null'
        most_recent_run:
          oneOf:
          - {}
          - type: 'null'
        is_deferrable:
          type: boolean
        deactivated:
          type: boolean
        run_failure_count:
          type: integer
        job_type:
          oneOf:
          - {}
          - {}
          - {}
          - type: 'null'
      additionalProperties: false
      definitions: {}
      $schema: http://json-schema.org/draft-07/schema#
    InternalJobDefinitionEnveloped:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/InternalJobDefinition'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    InternalJobDefinitionRequest:
      type: object
      required:
      - id
      - environment_id
      - account_id
      - project_id
      - name
      - dbt_version
      - triggers
      - schedule
      - settings
      - execution
      - state
      - generate_docs
      - run_generate_sources
      properties:
        id:
          oneOf:
          - type: 'null'
          - type: integer
        environment_id:
          type: integer
        deferring_job_definition_id:
          oneOf:
          - type: 'null'
          - type: integer
        deferring_environment_id:
          oneOf:
          - type: 'null'
          - type: integer
        lifecycle_webhooks:
          oneOf:
          - type: boolean
          - type: 'null'
        lifecycle_webhooks_url:
          oneOf:
          - type: string
          - type: 'null'
        account_id:
          type: integer
        project_id:
          type: integer
        name:
          allOf:
          - type: string
          - minLength: 1
            maxLength: 255
        dbt_version:
          oneOf:
          - type: string
          - type: 'null'
        raw_dbt_version:
          oneOf:
          - type: string
          - type: 'null'
        triggers: {}
        execute_steps:
          allOf:
          - {}
          - minLength: 1
            maxLength: 100
          - {}
        schedule: {}
        settings: {}
        execution: {}
        state:
          oneOf:
          - {}
          - {}
        generate_docs:
          type: boolean
        run_generate_sources:
          type: boolean
        environment: {}
        account:
          oneOf:
          - {}
          - type: 'null'
        project:
          oneOf:
          - {}
          - type: 'null'
        most_recent_completed_run:
          oneOf:
          - {}
          - type: 'null'
        most_recent_run:
          oneOf:
          - {}
          - type: 'null'
        is_deferrable:
          type: boolean
        deactivated:
          type: boolean
        run_failure_count:
          type: integer
        job_type:
          oneOf:
          - {}
          - {}
          - {}
          - type: 'null'
      additionalProperties: false
      definitions: {}
      $schema: http://json-schema.org/draft-07/schema#
    JobNotificationSettings:
      type: object
      required:
      - id
      - account_id
      - type
      - state
      - on_cancel
      - on_failure
      - on_success
      properties:
        id:
          oneOf:
          - type: 'null'
          - type: integer
        account_id:
          type: integer
        type:
          oneOf:
          - {}
          - {}
          - {}
          - {}
        state:
          type: integer
        on_cancel: {}
        on_failure: {}
        on_success: {}
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        user_id:
          type: integer
        external_email:
          oneOf:
          - type: string
          - type: 'null'
        user: {}
        slack_channel_id:
          oneOf:
          - type: string
          - type: 'null'
        slack_channel_name:
          oneOf:
          - type: string
          - type: 'null'
      additionalProperties: false
      definitions: {}
      $schema: http://json-schema.org/draft-07/schema#
    JobNotificationSettingsEnveloped:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/JobNotificationSettings'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    JobNotificationSettingsRequest:
      type: object
      required:
      - id
      - account_id
      - type
      - state
      - on_cancel
      - on_failure
      - on_success
      properties:
        id:
          oneOf:
          - type: 'null'
          - type: integer
        account_id:
          type: integer
        type:
          oneOf:
          - {}
          - {}
          - {}
          - {}
        state:
          type: integer
        on_cancel: {}
        on_failure: {}
        on_success: {}
        user_id:
          type: integer
        external_email:
          oneOf:
          - type: string
          - type: 'null'
        user: {}
        slack_channel_id:
          oneOf:
          - type: string
          - type: 'null'
        slack_channel_name:
          oneOf:
          - type: string
          - type: 'null'
      additionalProperties: false
      definitions: {}
      $schema: http://json-schema.org/draft-07/schema#
    Project:
      type: object
      required:
      - name
      - account_id
      properties:
        name:
          type: string
        account_id:
          type: integer
        connection_id:
          oneOf:
          - type: integer
          - type: 'null'
        repository_id:
          oneOf:
          - type: integer
          - type: 'null'
        semantic_layer_config_id:
          oneOf:
          - type: integer
          - type: 'null'
        id:
          oneOf:
          - type: integer
          - type: 'null'
        created_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
          readOnly: true
        updated_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
          readOnly: true
        skipped_setup:
          oneOf:
          - type: boolean
          - type: 'null'
          default: false
        state:
          type: integer
          default: 1
        dbt_project_subdirectory:
          oneOf:
          - type: string
          - type: 'null'
        connection:
          oneOf:
          - $ref: '#/definitions/BaseConnectionV3'
          - type: 'null'
          readOnly: true
        repository:
          oneOf:
          - $ref: '#/definitions/RepositoryV3'
          - type: 'null'
          readOnly: true
        group_permissions:
          oneOf:
          - type: array
            items:
              $ref: '#/definitions/GroupPermission'
          - type: 'null'
          readOnly: true
        docs_job_id:
          oneOf:
          - type: integer
          - type: 'null'
        freshness_job_id:
          oneOf:
          - type: integer
          - type: 'null'
        docs_job:
          oneOf:
          - $ref: '#/definitions/JobDefinitionV2'
          - type: 'null'
          readOnly: true
        freshness_job:
          oneOf:
          - $ref: '#/definitions/JobDefinitionV2'
          - type: 'null'
          readOnly: true
      additionalProperties: false
      description: 'Project(name: str, account_id: int, connection_id: Union[int,
        NoneType], repository_id: Union[int, NoneType] = None, semantic_layer_config_id:
        Union[int, NoneType] = None, id: Union[int, NoneType] = None, created_at:
        Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
        NoneType] = None, skipped_setup: Union[bool, NoneType] = False, state: int
        = 1, dbt_project_subdirectory: Union[str, NoneType] = None, connection: Union[models.connection.common.BaseConnectionV3,
        NoneType] = None, repository: Union[models.repository.RepositoryV3, NoneType]
        = None, group_permissions: Union[List[models.permissions.group_permission.GroupPermission],
        NoneType] = None, docs_job_id: Union[int, NoneType] = None, freshness_job_id:
        Union[int, NoneType] = None, docs_job: Union[models.job_definition.JobDefinitionV2,
        NoneType] = None, freshness_job: Union[models.job_definition.JobDefinitionV2,
        NoneType] = None)'
      definitions:
        BaseConnectionV3:
          type: object
          required:
          - account_id
          - project_id
          - name
          - type
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            type:
              type: string
              enum:
              - postgres
              - redshift
              - snowflake
              - bigquery
              - adapter
            created_by_id:
              oneOf:
              - type: integer
              - type: 'null'
            created_by_service_token_id:
              oneOf:
              - type: integer
              - type: 'null'
            details:
              oneOf:
              - oneOf:
                - $ref: '#/definitions/PostgresConnectionV3'
                - $ref: '#/definitions/SnowflakeConnectionV3'
                - $ref: '#/definitions/BigqueryConnectionV3'
                - $ref: '#/definitions/DbtAdapterConnection'
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            private_link_endpoint_id:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'BaseConnectionV3(id: Union[int, NoneType], account_id: int,
            project_id: int, name: str, type: models.connection.common.ConnectionType,
            created_by_id: Union[int, NoneType] = None, created_by_service_token_id:
            Union[int, NoneType] = None, details: Union[ForwardRef(''AnyConnection''),
            NoneType] = None, state: int = 1, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None,
            private_link_endpoint_id: Union[str, NoneType] = None)'
        PostgresConnectionV3:
          type: object
          required:
          - hostname
          - dbname
          - port
          - tunnel_enabled
          properties:
            hostname:
              type: string
            dbname:
              type: string
            port:
              type: integer
            tunnel_enabled:
              type: boolean
            encryption:
              oneOf:
              - $ref: '#/definitions/ConnectionEncryption'
              - type: 'null'
          additionalProperties: false
          description: 'PostgresConnectionV3(hostname: str, dbname: str, port: int,
            tunnel_enabled: bool, encryption: Union[models.connection.encryption.ConnectionEncryption,
            NoneType] = None)'
        ConnectionEncryption:
          type: object
          required:
          - account_id
          - connection_id
          - username
          - port
          - hostname
          properties:
            account_id:
              type: integer
            connection_id:
              type: integer
            username:
              type: string
            port:
              type: integer
            hostname:
              type: string
            public_key:
              oneOf:
              - type: string
              - type: 'null'
            state:
              type: integer
              default: 1
            id:
              oneOf:
              - type: integer
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'ConnectionEncryption(account_id: int, connection_id: int,
            username: str, port: int, hostname: str, public_key: Union[str, NoneType]
            = None, state: int = 1, id: Union[int, NoneType] = None, private_key:
            Union[str, NoneType] = None, _private_key: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None)'
        SnowflakeConnectionV3:
          type: object
          required:
          - account
          - database
          - warehouse
          - allow_sso
          - client_session_keep_alive
          properties:
            account:
              type: string
            database:
              type: string
            warehouse:
              type: string
            allow_sso:
              type: boolean
            client_session_keep_alive:
              type: boolean
            role:
              oneOf:
              - type: string
              - type: 'null'
            oauth_client_id:
              oneOf:
              - type: string
              - type: 'null'
            oauth_client_secret:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'SnowflakeConnectionV3(account: str, database: str, warehouse:
            str, allow_sso: bool, client_session_keep_alive: bool, role: Union[str,
            NoneType] = None, oauth_client_id: Union[str, NoneType] = None, _oauth_client_id:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            oauth_client_secret: Union[str, NoneType] = None, _oauth_client_secret:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None)'
        BigqueryConnectionV3:
          type: object
          required:
          - project_id
          - timeout_seconds
          - private_key_id
          - client_email
          - client_id
          - auth_uri
          - token_uri
          - auth_provider_x509_cert_url
          - client_x509_cert_url
          properties:
            project_id:
              type: string
            timeout_seconds:
              type: integer
            private_key_id:
              type: string
            client_email:
              type: string
            client_id:
              type: string
            auth_uri:
              type: string
            token_uri:
              type: string
            auth_provider_x509_cert_url:
              type: string
            client_x509_cert_url:
              type: string
            priority:
              oneOf:
              - type: string
              - type: 'null'
            retries:
              type: integer
              default: 1
            scopes:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            location:
              oneOf:
              - type: string
              - type: 'null'
            maximum_bytes_billed:
              oneOf:
              - type: integer
              - type: 'null'
            execution_project:
              oneOf:
              - type: string
              - type: 'null'
            impersonate_service_account:
              oneOf:
              - type: string
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
            job_retry_deadline_seconds:
              oneOf:
              - type: integer
              - type: 'null'
            job_creation_timeout_seconds:
              oneOf:
              - type: integer
              - type: 'null'
            application_id:
              oneOf:
              - type: string
              - type: 'null'
            application_secret:
              oneOf:
              - type: string
              - type: 'null'
            is_configured_for_oauth:
              type: boolean
              default: false
            gcs_bucket:
              oneOf:
              - type: string
              - type: 'null'
            dataproc_region:
              oneOf:
              - type: string
              - type: 'null'
            dataproc_cluster_name:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'BigqueryConnectionV3(project_id: str, timeout_seconds: int,
            private_key_id: str, client_email: str, client_id: str, auth_uri: str,
            token_uri: str, auth_provider_x509_cert_url: str, client_x509_cert_url:
            str, priority: Union[str, NoneType] = None, retries: int = 1, scopes:
            Union[List[str], NoneType] = None, location: Union[str, NoneType] = None,
            maximum_bytes_billed: Union[int, NoneType] = None, execution_project:
            Union[str, NoneType] = None, impersonate_service_account: Union[str, NoneType]
            = None, private_key: Union[str, NoneType] = None, job_retry_deadline_seconds:
            Union[int, NoneType] = None, job_creation_timeout_seconds: Union[int,
            NoneType] = None, _private_key: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, application_id: Union[str, NoneType] = None, application_secret:
            Union[str, NoneType] = None, is_configured_for_oauth: bool = False, _application_id:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            _application_secret: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, gcs_bucket: Union[str, NoneType] = None, dataproc_region:
            Union[str, NoneType] = None, dataproc_cluster_name: Union[str, NoneType]
            = None)'
        DbtAdapterConnection:
          type: object
          required:
          - connection_details
          properties:
            adapter_id:
              oneOf:
              - type: integer
              - type: 'null'
            connection_details:
              oneOf:
              - $ref: '#/definitions/ApacheSparkConnectionSchema'
              - $ref: '#/definitions/DatabricksSparkConnectionSchema'
              - $ref: '#/definitions/DatabricksConnectionSchema'
              - $ref: '#/definitions/TrinoConnectionSchema'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapterConnection(adapter_id: Union[int, NoneType], connection_details:
            Union[schemas.adapters.apache_spark.connection_schema.ApacheSparkConnectionSchema,
            schemas.adapters.databricks_spark.connection_schema.DatabricksSparkConnectionSchema,
            schemas.adapters.databricks.connection_schema.DatabricksConnectionSchema,
            schemas.adapters.trino.connection_schema.TrinoConnectionSchema], created_at:
            Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None)'
        ApacheSparkConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/ApacheSparkConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: spark
                method:
                  metadata:
                    label: Method
                    description: ''
                    field_type: select
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    options:
                    - label: HTTP
                      value: http
                    - label: Thrift
                      value: thrift
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: http
                host:
                  metadata:
                    label: Hostname
                    description: Host name of connection.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: Port number of host.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
                cluster:
                  metadata:
                    label: Cluster
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: ''
                connect_timeout:
                  metadata:
                    label: Connection Timeout
                    description: Connection timeout in seconds
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: false
                  value: 10
                connect_retries:
                  metadata:
                    label: Connection Retries
                    description: Connection retries in integer
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: false
                  value: 0
                organization:
                  metadata:
                    label: Organization
                    description: Organization id
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                user:
                  metadata:
                    label: User
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                auth:
                  metadata:
                    label: Auth
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                kerberos_service_name:
                  metadata:
                    label: Kerberos Service Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'ApacheSparkConnectionSchema(fields: schemas.adapters.apache_spark.connection_schema.ApacheSparkConnectionFields
            = ApacheSparkConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''spark''), method=SelectField(metadata=SelectFieldMetadata(label=''Method'',
            description='''', field_type=''select'', encrypt=False, depends_on=None,
            overrideable=False, options=[SelectOption(label=''HTTP'', value=''http''),
            SelectOption(label=''Thrift'', value=''thrift'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''http''), host=TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''Host name of connection.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''Port number of host.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster=TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=''''), connect_timeout=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Timeout'', description=''Connection timeout in seconds'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=10), connect_retries=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Retries'', description=''Connection retries in integer'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=0), organization=TextField(metadata=TextFieldMetadata(label=''Organization'',
            description=''Organization id'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user=TextField(metadata=TextFieldMetadata(label=''User'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), auth=TextField(metadata=TextFieldMetadata(label=''Auth'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), kerberos_service_name=TextField(metadata=TextFieldMetadata(label=''Kerberos
            Service Name'', description='''', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            List[str] = <factory>)'
        ApacheSparkConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: spark
            method:
              $ref: '#/definitions/SelectField'
              default:
                metadata:
                  label: Method
                  description: ''
                  field_type: select
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  options:
                  - label: HTTP
                    value: http
                  - label: Thrift
                    value: thrift
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: http
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Hostname
                  description: Host name of connection.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: Port number of host.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
            cluster:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Cluster
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: ''
            connect_timeout:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Connection Timeout
                  description: Connection timeout in seconds
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: false
                value: 10
            connect_retries:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Connection Retries
                  description: Connection retries in integer
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: false
                value: 0
            organization:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Organization
                  description: Organization id
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            auth:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Auth
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            kerberos_service_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Kerberos Service Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'ApacheSparkConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''spark''), method: schemas.fields.SelectField.SelectField
            = SelectField(metadata=SelectFieldMetadata(label=''Method'', description='''',
            field_type=''select'', encrypt=False, depends_on=None, overrideable=False,
            options=[SelectOption(label=''HTTP'', value=''http''), SelectOption(label=''Thrift'',
            value=''thrift'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''http''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''Host name of connection.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''Port
            number of host.'', field_type=''number'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=''''), connect_timeout: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Timeout'', description=''Connection timeout in seconds'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=10), connect_retries: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Retries'', description=''Connection retries in integer'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=0), organization: Union[schemas.fields.TextField.TextField, NoneType]
            = TextField(metadata=TextFieldMetadata(label=''Organization'', description=''Organization
            id'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), auth: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Auth'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), kerberos_service_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Kerberos Service Name'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''))'
        TextField:
          type: object
          required:
          - metadata
          - value
          properties:
            metadata:
              $ref: '#/definitions/TextFieldMetadata'
            value:
              type: string
          additionalProperties: false
          description: 'TextField(metadata: schemas.fields.TextField.TextFieldMetadata,
            value: str = None)'
        TextFieldMetadata:
          type: object
          required:
          - label
          - description
          properties:
            label:
              type: string
            description:
              type: string
            field_type:
              type: string
              default: text
            encrypt:
              type: boolean
              default: false
            depends_on:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: array
                    items:
                      type: string
              - type: 'null'
            overrideable:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            validation:
              $ref: '#/definitions/GenericTextValidation'
              default:
                min_length: null
                max_length: null
                required: false
                pattern: null
          additionalProperties: false
          description: 'TextFieldMetadata(label: str, description: str, field_type:
            str = ''text'', encrypt: bool = False, depends_on: Union[Dict[str, Union[str,
            List[str]]], NoneType] = None, overrideable: Union[bool, NoneType] = False,
            validation: schemas.fields.TextField.GenericTextValidation = GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None))'
        GenericTextValidation:
          type: object
          required: []
          properties:
            min_length:
              oneOf:
              - type: integer
              - type: 'null'
            max_length:
              oneOf:
              - type: integer
              - type: 'null'
            required:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            pattern:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'GenericTextValidation(min_length: Union[int, NoneType] = None,
            max_length: Union[int, NoneType] = None, required: Union[bool, NoneType]
            = False, pattern: Union[str, NoneType] = None)'
        SelectField:
          type: object
          required:
          - metadata
          properties:
            metadata:
              $ref: '#/definitions/SelectFieldMetadata'
            value:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'SelectField(metadata: schemas.fields.SelectField.SelectFieldMetadata,
            value: Union[str, NoneType] = None)'
        SelectFieldMetadata:
          type: object
          required:
          - label
          - description
          - options
          properties:
            label:
              type: string
            description:
              type: string
            field_type:
              type: string
              default: select
            encrypt:
              type: boolean
              default: false
            depends_on:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: array
                    items:
                      type: string
              - type: 'null'
            overrideable:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            options:
              type: array
              items:
                $ref: '#/definitions/SelectOption'
            validation:
              $ref: '#/definitions/GenericTextValidation'
              default:
                min_length: null
                max_length: null
                required: false
                pattern: null
          additionalProperties: false
          description: 'SelectFieldMetadata(label: str, description: str, field_type:
            str = ''select'', encrypt: bool = False, depends_on: Union[Dict[str, Union[str,
            List[str]]], NoneType] = None, overrideable: Union[bool, NoneType] = False,
            options: List[schemas.fields.SelectField.SelectOption] = None, validation:
            schemas.fields.TextField.GenericTextValidation = GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None))'
        SelectOption:
          type: object
          required:
          - label
          - value
          properties:
            label:
              type: string
            value:
              oneOf:
              - type: string
              - type: integer
          additionalProperties: false
          description: 'SelectOption(label: str, value: Union[str, int])'
        LegacyIntegerField:
          type: object
          required:
          - metadata
          - value
          properties:
            metadata:
              $ref: '#/definitions/TextFieldMetadata'
            value:
              type: integer
          additionalProperties: false
          description: 'LegacyIntegerField(metadata: schemas.fields.TextField.TextFieldMetadata,
            value: int = None)'
        DatabricksSparkConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksSparkConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: spark
                method:
                  metadata:
                    label: Method
                    description: ''
                    field_type: select
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    options:
                    - label: ODBC
                      value: odbc
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: odbc
                host:
                  metadata:
                    label: Hostname
                    description: The hostname of the Databricks account to connect
                      to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_hostname
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: The port to connect to Databricks for this connection.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
                cluster:
                  metadata:
                    label: Cluster
                    description: The ID of the cluster to connect to (required if
                      using a cluster)
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                endpoint:
                  metadata:
                    label: Endpoint
                    description: The ID of the endpoint to connect to (required if
                      using Databricks SQL Analytics)
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                driver:
                  metadata:
                    label: Driver
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: /opt/simba/spark/lib/64/libsparkodbc_sb64.so
                organization:
                  metadata:
                    label: Organization
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                user:
                  metadata:
                    label: User
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'DatabricksSparkConnectionSchema(fields: schemas.adapters.databricks_spark.connection_schema.DatabricksSparkConnectionFields
            = DatabricksSparkConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''spark''), method=SelectField(metadata=SelectFieldMetadata(label=''Method'',
            description='''', field_type=''select'', encrypt=False, depends_on=None,
            overrideable=False, options=[SelectOption(label=''ODBC'', value=''odbc'')],
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''odbc''), host=TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''The hostname of the Databricks account to connect to.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_hostname'')), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''The port to connect to Databricks for this connection.'',
            field_type=''number'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericIntegerValidation(required=True)), value=443), cluster=TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description=''The ID of the cluster to connect to (required if using a
            cluster)'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), endpoint=TextField(metadata=TextFieldMetadata(label=''Endpoint'',
            description=''The ID of the endpoint to connect to (required if using
            Databricks SQL Analytics)'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), driver=TextField(metadata=TextFieldMetadata(label=''Driver'',
            description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''/opt/simba/spark/lib/64/libsparkodbc_sb64.so''),
            organization=TextField(metadata=TextFieldMetadata(label=''Organization'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user=TextField(metadata=TextFieldMetadata(label=''User'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            List[str] = <factory>)'
        DatabricksSparkConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: spark
            method:
              $ref: '#/definitions/SelectField'
              default:
                metadata:
                  label: Method
                  description: ''
                  field_type: select
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  options:
                  - label: ODBC
                    value: odbc
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: odbc
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Hostname
                  description: The hostname of the Databricks account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_hostname
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: The port to connect to Databricks for this connection.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
            cluster:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Cluster
                  description: The ID of the cluster to connect to (required if using
                    a cluster)
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            endpoint:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Endpoint
                  description: The ID of the endpoint to connect to (required if using
                    Databricks SQL Analytics)
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            driver:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Driver
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: /opt/simba/spark/lib/64/libsparkodbc_sb64.so
            organization:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Organization
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksSparkConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''spark''), method: schemas.fields.SelectField.SelectField
            = SelectField(metadata=SelectFieldMetadata(label=''Method'', description='''',
            field_type=''select'', encrypt=False, depends_on=None, overrideable=False,
            options=[SelectOption(label=''ODBC'', value=''odbc'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''odbc''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''The hostname of the Databricks account to connect to.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_hostname'')), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''The
            port to connect to Databricks for this connection.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description=''The ID of the cluster to connect to (required if using a
            cluster)'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), endpoint: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Endpoint'', description=''The
            ID of the endpoint to connect to (required if using Databricks SQL Analytics)'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), driver: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Driver'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''/opt/simba/spark/lib/64/libsparkodbc_sb64.so''),
            organization: Union[schemas.fields.TextField.TextField, NoneType] = TextField(metadata=TextFieldMetadata(label=''Organization'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''))'
        DatabricksConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: databricks
                host:
                  metadata:
                    label: Server Hostname
                    description: The hostname of the Databricks cluster or SQL warehouse.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_hostname
                  value: ''
                http_path:
                  metadata:
                    label: HTTP Path
                    description: The HTTP path of the Databricks cluster or SQL warehouse.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_http_path
                  value: ''
                catalog:
                  metadata:
                    label: Catalog
                    description: Catalog name if Unity Catalog is enabled in your
                      Databricks workspace.  Only available in dbt version 1.1 and
                      later.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: true
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'DatabricksConnectionSchema(fields: schemas.adapters.databricks.connection_schema.DatabricksConnectionFields
            = DatabricksConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''databricks''),
            host=TextField(metadata=TextFieldMetadata(label=''Server Hostname'', description=''The
            hostname of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_hostname'')), value=''''),
            http_path=TextField(metadata=TextFieldMetadata(label=''HTTP Path'', description=''The
            HTTP path of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_http_path'')), value=''''),
            catalog=TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=True, validation=GenericTextValidation(min_length=None, max_length=None,
            required=False, pattern=None)), value='''')), field_order: List[str] =
            <factory>)'
        DatabricksConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: databricks
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Server Hostname
                  description: The hostname of the Databricks cluster or SQL warehouse.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_hostname
                value: ''
            http_path:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: HTTP Path
                  description: The HTTP path of the Databricks cluster or SQL warehouse.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_http_path
                value: ''
            catalog:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Catalog
                  description: Catalog name if Unity Catalog is enabled in your Databricks
                    workspace.  Only available in dbt version 1.1 and later.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: true
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''databricks''), host: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Server Hostname'', description=''The
            hostname of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_hostname'')), value=''''),
            http_path: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''HTTP
            Path'', description=''The HTTP path of the Databricks cluster or SQL warehouse.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_http_path'')), value=''''), catalog: Union[schemas.fields.TextField.TextField,
            NoneType] = TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=True, validation=GenericTextValidation(min_length=None, max_length=None,
            required=False, pattern=None)), value=''''))'
        TrinoConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/TrinoConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: trino
                method:
                  metadata:
                    label: Method
                    description: The auth method to use.
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ldap
                host:
                  metadata:
                    label: Host
                    description: The hostname of the account to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: The port to connect to for this connection.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'TrinoConnectionSchema(fields: schemas.adapters.trino.connection_schema.TrinoConnectionFields
            = TrinoConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''trino''), method=TextField(metadata=TextFieldMetadata(label=''Method'',
            description=''The auth method to use.'', field_type=''hidden'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''ldap''), host=TextField(metadata=TextFieldMetadata(label=''Host'',
            description=''The hostname of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''The port to connect to for this connection.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443)), field_order: List[str] = <factory>)'
        TrinoConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: trino
            method:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Method
                  description: The auth method to use.
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ldap
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Host
                  description: The hostname of the account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: The port to connect to for this connection.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
          additionalProperties: false
          description: 'TrinoConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''trino''), method: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Method'', description=''The
            auth method to use.'', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''ldap''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Host'',
            description=''The hostname of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''The
            port to connect to for this connection.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443))'
        RepositoryV3:
          type: object
          required:
          - account_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            full_name:
              oneOf:
              - type: string
              - type: 'null'
            remote_url:
              oneOf:
              - type: string
                pattern: ^\S+[/:](?P<repo>[^\s/]+?)(?:\.git)?$
              - type: 'null'
            remote_backend:
              oneOf:
              - type: string
                enum:
                - azure_active_directory
                - github
                - managed
                - gitlab
                - manual_config
              - type: 'null'
            git_clone_strategy:
              oneOf:
              - type: string
                enum:
                - azure_active_directory_app
                - deploy_key
                - deploy_token
                - github_app
                - git_token
              - type: 'null'
            deploy_key_id:
              oneOf:
              - type: integer
              - type: 'null'
            repository_credentials_id:
              oneOf:
              - type: integer
              - type: 'null'
            github_installation_id:
              oneOf:
              - type: integer
              - type: 'null'
            github_webhook_id:
              oneOf:
              - type: integer
              - type: 'null'
            github_webhook_secret:
              oneOf:
              - type: string
              - type: 'null'
            pull_request_url_template:
              oneOf:
              - type: string
                pattern: ^(http|https)://(.*)
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            deploy_key:
              oneOf:
              - type: object
              - type: 'null'
            github_repo:
              oneOf:
              - type: string
              - type: 'null'
            name:
              oneOf:
              - type: string
              - type: 'null'
            git_provider_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab:
              oneOf:
              - $ref: '#/definitions/RepositoryGitlab'
              - type: 'null'
            git_provider:
              oneOf:
              - $ref: '#/definitions/GitProvider'
              - type: 'null'
          additionalProperties: false
          description: 'RepositoryV3(id: Union[int, NoneType], account_id: int, project_id:
            Union[int, NoneType] = None, full_name: Union[str, NoneType] = None, remote_url:
            Union[RemoteUrl, NoneType] = None, remote_backend: Union[models.repository.GitRemoteBackend,
            NoneType] = None, git_clone_strategy: Union[models.repository.GitCloneStrategy,
            NoneType] = None, deploy_key_id: Union[int, NoneType] = None, repository_credentials_id:
            Union[int, NoneType] = None, github_installation_id: Union[int, NoneType]
            = None, github_webhook_id: Union[int, NoneType] = None, github_webhook_secret:
            Union[str, NoneType] = None, _github_webhook_secret: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, pull_request_url_template: Union[PullRequestUrl, NoneType]
            = None, state: int = 1, created_at: Union[datetime.datetime, NoneType]
            = None, updated_at: Union[datetime.datetime, NoneType] = None, deploy_key:
            Union[Dict[Any, Any], NoneType] = None, github_repo: Union[str, NoneType]
            = None, name: Union[str, NoneType] = None, git_provider_id: Union[int,
            NoneType] = None, gitlab: Union[models.repository_gitlab.RepositoryGitlab,
            NoneType] = None, git_provider: Union[models.git_provider.GitProvider,
            NoneType] = None)'
        RepositoryGitlab:
          type: object
          required:
          - account_id
          - gitlab_project_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            repository_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab_project_id:
              type: integer
            state:
              type: integer
              default: 1
            project_access_token_id:
              oneOf:
              - type: integer
              - type: 'null'
            project_access_token:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'RepositoryGitlab(id: Union[int, NoneType], account_id: int,
            repository_id: Union[int, NoneType], gitlab_project_id: int, state: int
            = 1, project_access_token_id: Union[int, NoneType] = None, project_access_token:
            Union[str, NoneType] = None, _project_access_token: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        GitProvider:
          type: object
          required:
          - account_id
          - provider_type
          properties:
            account_id:
              type: integer
            provider_type:
              type: string
              enum:
              - azure_active_directory
              - github
              - gitlab
              - git_url
              - managed_github
              - manual_config
            state:
              type: integer
              default: 1
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: "\n    This class represents a git provider integration the\
            \ user\n    has setup and will interact with via the dbt Cloud IDE.\n\
            \    "
        GroupPermission:
          type: object
          required:
          - account_id
          - group_id
          - all_projects
          - permission_set
          properties:
            account_id:
              type: integer
            group_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            all_projects:
              type: boolean
            permission_set:
              type: string
              enum:
              - owner
              - member
              - account_admin
              - security_admin
              - billing_admin
              - admin
              - database_admin
              - git_admin
              - team_admin
              - job_admin
              - job_viewer
              - analyst
              - developer
              - stakeholder
              - readonly
              - project_creator
              - account_viewer
              - metadata_only
              - semantic_layer_only
              - webhooks_only
            permission_level:
              oneOf:
              - type: integer
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'GroupPermission(account_id: int, group_id: int, project_id:
            Union[int, NoneType], all_projects: bool, permission_set: models.permissions.sets.PredefinedPermissionSet,
            permission_level: Union[int, NoneType] = None, id: Union[int, NoneType]
            = None, state: int = 1, created_at: Union[datetime.datetime, NoneType]
            = None, updated_at: Union[datetime.datetime, NoneType] = None)'
        JobDefinitionV2:
          type: object
          required:
          - environment_id
          - account_id
          - project_id
          - name
          - generate_docs
          - run_generate_sources
          - state
          properties:
            environment_id:
              type: integer
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            generate_docs:
              type: boolean
            run_generate_sources:
              type: boolean
            state:
              type: integer
            dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            raw_dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            deactivated:
              type: boolean
              default: false
            run_failure_count:
              type: integer
              default: 0
            triggers:
              oneOf:
              - $ref: '#/definitions/JobDefinitionTriggers'
              - type: 'null'
            settings:
              oneOf:
              - $ref: '#/definitions/JobDefinitionSettings'
              - type: 'null'
            execution:
              oneOf:
              - $ref: '#/definitions/JobDefinitionExecution'
              - type: 'null'
            schedule:
              oneOf:
              - $ref: '#/definitions/JobDefinitionSchedule'
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            execute_steps:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            environment:
              oneOf:
              - $ref: '#/definitions/EnvironmentV3'
              - type: 'null'
            most_recent_run:
              oneOf:
              - $ref: '#/definitions/Run'
              - type: 'null'
            most_recent_completed_run:
              oneOf:
              - $ref: '#/definitions/Run'
              - type: 'null'
            custom_environment_variables:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/CustomEnvironmentVariable'
              - type: 'null'
            job_type:
              oneOf:
              - type: string
                enum:
                - ci
                - scheduled
                - other
              - type: 'null'
          additionalProperties: false
          description: 'JobDefinitionV2(environment_id: int, account_id: int, project_id:
            int, name: str, generate_docs: bool, run_generate_sources: bool, state:
            int, dbt_version: Union[str, NoneType], raw_dbt_version: Union[str, NoneType]
            = None, id: Union[int, NoneType] = None, deactivated: bool = False, run_failure_count:
            int = 0, triggers: Union[models.job_definition.JobDefinitionTriggers,
            NoneType] = None, settings: Union[models.job_definition.JobDefinitionSettings,
            NoneType] = None, execution: Union[models.job_definition.JobDefinitionExecution,
            NoneType] = None, schedule: Union[models.job_definition.JobDefinitionSchedule,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None, execute_steps:
            Union[List[str], NoneType] = None, environment: ''Optional[models.environment.EnvironmentV3]''
            = None, most_recent_run: Union[models.run.Run, NoneType] = None, most_recent_completed_run:
            Union[models.run.Run, NoneType] = None, custom_environment_variables:
            Union[List[models.custom_environment_variable.CustomEnvironmentVariable],
            NoneType] = None, job_type: Union[common.constants.JobType, NoneType]
            = None)'
        JobDefinitionTriggers:
          type: object
          required:
          - github_webhook
          - schedule
          properties:
            github_webhook:
              type: boolean
            schedule:
              type: boolean
            git_provider_webhook:
              oneOf:
              - type: boolean
              - type: 'null'
            custom_branch_only:
              oneOf:
              - type: boolean
              - type: 'null'
          additionalProperties: false
          description: 'JobDefinitionTriggers(github_webhook: bool, schedule: bool,
            git_provider_webhook: Union[bool, NoneType] = None, custom_branch_only:
            Union[bool, NoneType] = None)'
        JobDefinitionSettings:
          type: object
          required:
          - threads
          - target_name
          properties:
            threads:
              type: integer
            target_name:
              type: string
          additionalProperties: false
          description: 'JobDefinitionSettings(threads: int, target_name: str)'
        JobDefinitionExecution:
          type: object
          required:
          - timeout_seconds
          properties:
            timeout_seconds:
              type: integer
          additionalProperties: false
          description: 'JobDefinitionExecution(timeout_seconds: int)'
        JobDefinitionSchedule:
          type: object
          required:
          - cron
          - date
          - time
          properties:
            cron:
              type: string
            date:
              type: string
              enum:
              - every_day
              - days_of_week
              - custom_cron
            time:
              type: string
              enum:
              - every_hour
              - at_exact_hours
          additionalProperties: false
          description: 'JobDefinitionSchedule(cron: str, date: models.job_definition.DateStrategy,
            time: models.job_definition.TimeStrategy)'
        EnvironmentV3:
          type: object
          required:
          - account_id
          - project_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            credentials_id:
              oneOf:
              - type: integer
              - type: 'null'
            name:
              type: string
              default: New Environment
            dbt_version:
              type: string
              default: 1.5.0-latest
            raw_dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            type:
              type: string
              enum:
              - development
              - deployment
              default: deployment
            use_custom_branch:
              type: boolean
              default: false
            custom_branch:
              oneOf:
              - type: string
              - type: 'null'
            supports_docs:
              type: boolean
              default: false
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            project:
              oneOf:
              - $ref: '#/definitions/Project'
              - type: 'null'
            jobs:
              oneOf:
              - type: array
                items:
                  type: object
                  additionalProperties:
                    oneOf:
                    - $ref: '#/definitions/Run'
                    - type: 'null'
              - type: 'null'
            credentials:
              oneOf:
              - $ref: '#/definitions/PostgresCredentials'
              - $ref: '#/definitions/RedshiftCredentials'
              - $ref: '#/definitions/SnowflakeCredentials'
              - $ref: '#/definitions/BigqueryCredentials'
              - $ref: '#/definitions/DbtAdapterCredentials'
              - type: 'null'
            custom_environment_variables:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/CustomEnvironmentVariable'
              - type: 'null'
            deployment_type:
              oneOf:
              - type: string
                enum:
                - production
              - type: 'null'
          additionalProperties: false
          description: "\n    An environment is a collection of settings within a\
            \ project that defines how dbt is run.\n    Use it to define the version\
            \ controlled branch and warehouse connection that dbt will run on.\n \
            \   "
        Project:
          type: object
          required:
          - name
          - account_id
          properties:
            name:
              type: string
            account_id:
              type: integer
            connection_id:
              oneOf:
              - type: integer
              - type: 'null'
            repository_id:
              oneOf:
              - type: integer
              - type: 'null'
            semantic_layer_config_id:
              oneOf:
              - type: integer
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            skipped_setup:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            state:
              type: integer
              default: 1
            dbt_project_subdirectory:
              oneOf:
              - type: string
              - type: 'null'
            connection:
              oneOf:
              - $ref: '#/definitions/BaseConnectionV3'
              - type: 'null'
            repository:
              oneOf:
              - $ref: '#/definitions/RepositoryV3'
              - type: 'null'
            group_permissions:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/GroupPermission'
              - type: 'null'
            docs_job_id:
              oneOf:
              - type: integer
              - type: 'null'
            freshness_job_id:
              oneOf:
              - type: integer
              - type: 'null'
            docs_job:
              oneOf:
              - $ref: '#/definitions/JobDefinitionV2'
              - type: 'null'
            freshness_job:
              oneOf:
              - $ref: '#/definitions/JobDefinitionV2'
              - type: 'null'
          additionalProperties: false
          description: 'Project(name: str, account_id: int, connection_id: Union[int,
            NoneType], repository_id: Union[int, NoneType] = None, semantic_layer_config_id:
            Union[int, NoneType] = None, id: Union[int, NoneType] = None, created_at:
            Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None, skipped_setup: Union[bool, NoneType] = False, state:
            int = 1, dbt_project_subdirectory: Union[str, NoneType] = None, connection:
            Union[models.connection.common.BaseConnectionV3, NoneType] = None, repository:
            Union[models.repository.RepositoryV3, NoneType] = None, group_permissions:
            Union[List[models.permissions.group_permission.GroupPermission], NoneType]
            = None, docs_job_id: Union[int, NoneType] = None, freshness_job_id: Union[int,
            NoneType] = None, docs_job: Union[models.job_definition.JobDefinitionV2,
            NoneType] = None, freshness_job: Union[models.job_definition.JobDefinitionV2,
            NoneType] = None)'
        Run:
          type: object
          required:
          - account_id
          - environment_id
          - project_id
          - job_definition_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            trigger_id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            environment_id:
              type: integer
            project_id:
              type: integer
            job_definition_id:
              type: integer
            status:
              type: integer
              default: 1
            dbt_version:
              type: string
              default: 1.5.0-latest
            git_branch:
              oneOf:
              - type: string
              - type: 'null'
            git_sha:
              oneOf:
              - type: string
              - type: 'null'
            status_message:
              oneOf:
              - type: string
              - type: 'null'
            owner_thread_id:
              oneOf:
              - type: string
              - type: 'null'
            executed_by_thread_id:
              oneOf:
              - type: string
              - type: 'null'
            deferring_run_id:
              oneOf:
              - type: integer
              - type: 'null'
            artifacts_saved:
              type: boolean
              default: false
            artifact_s3_path:
              oneOf:
              - type: string
              - type: 'null'
            has_docs_generated:
              type: boolean
              default: false
            has_sources_generated:
              type: boolean
              default: false
            notifications_sent:
              type: boolean
              default: false
            blocked_by:
              type: array
              items:
                type: integer
              default: []
            scribe_enabled:
              type: boolean
              default: false
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            dequeued_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            started_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            finished_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            last_checked_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            last_heartbeat_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            should_start_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            trigger:
              oneOf:
              - $ref: '#/definitions/RunTrigger'
              - type: 'null'
            job:
              oneOf:
              - type: object
              - type: 'null'
            environment:
              oneOf:
              - type: object
              - type: 'null'
            run_steps:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/RunStep'
              - type: 'null'
              default: []
            status_humanized:
              oneOf:
              - type: string
              - type: 'null'
            in_progress:
              oneOf:
              - type: boolean
              - type: 'null'
            is_complete:
              oneOf:
              - type: boolean
              - type: 'null'
            is_success:
              oneOf:
              - type: boolean
              - type: 'null'
            is_error:
              oneOf:
              - type: boolean
              - type: 'null'
            is_cancelled:
              oneOf:
              - type: boolean
              - type: 'null'
            duration:
              oneOf:
              - type: string
              - type: 'null'
            queued_duration:
              oneOf:
              - type: string
              - type: 'null'
            run_duration:
              oneOf:
              - type: string
              - type: 'null'
            duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            queued_duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            run_duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            created_at_humanized:
              oneOf:
              - type: string
              - type: 'null'
            finished_at_humanized:
              oneOf:
              - type: string
              - type: 'null'
            job_id:
              oneOf:
              - type: integer
              - type: 'null'
            is_running:
              oneOf:
              - type: boolean
              - type: 'null'
          additionalProperties: false
          description: "\n    Represents a run of a job definition.\n    "
        RunTrigger:
          type: object
          required:
          - cause
          - job_definition_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            cause:
              type: string
            job_definition_id:
              type: integer
            git_branch:
              oneOf:
              - type: string
              - type: 'null'
            git_sha:
              oneOf:
              - type: string
              - type: 'null'
            azure_pull_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            github_pull_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab_merge_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            schema_override:
              oneOf:
              - type: string
              - type: 'null'
            dbt_version_override:
              oneOf:
              - type: string
              - type: 'null'
            threads_override:
              oneOf:
              - type: integer
              - type: 'null'
            target_name_override:
              oneOf:
              - type: string
              - type: 'null'
            generate_docs_override:
              oneOf:
              - type: boolean
              - type: 'null'
            timeout_seconds_override:
              oneOf:
              - type: integer
              - type: 'null'
            steps_override:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            cause_humanized:
              oneOf:
              - type: string
              - type: 'null'
            job:
              oneOf:
              - type: object
              - type: 'null'
          additionalProperties: false
          description: 'RunTrigger(id: Union[int, NoneType], cause: str, job_definition_id:
            int, git_branch: Union[str, NoneType] = None, git_sha: Union[str, NoneType]
            = None, azure_pull_request_id: Union[int, NoneType] = None, github_pull_request_id:
            Union[int, NoneType] = None, gitlab_merge_request_id: Union[int, NoneType]
            = None, schema_override: Union[str, NoneType] = None, dbt_version_override:
            Union[str, NoneType] = None, threads_override: Union[int, NoneType] =
            None, target_name_override: Union[str, NoneType] = None, generate_docs_override:
            Union[bool, NoneType] = None, timeout_seconds_override: Union[int, NoneType]
            = None, steps_override: Union[List[str], NoneType] = None, created_at:
            Union[datetime.datetime, NoneType] = None, cause_humanized: Union[str,
            NoneType] = None, job: Union[Dict[str, Any], NoneType] = None)'
        RunStep:
          type: object
          required:
          - run_id
          - account_id
          - index
          - status
          - name
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            run_id:
              type: integer
            account_id:
              type: integer
            index:
              type: integer
            status:
              type: integer
            name:
              type: string
            logs:
              oneOf:
              - type: string
              - type: 'null'
            debug_logs:
              oneOf:
              - type: string
              - type: 'null'
            log_location:
              oneOf:
              - type: string
                enum:
                - legacy
                - s3
                - db
                - empty
              - type: 'null'
              default: db
            log_path:
              oneOf:
              - type: string
              - type: 'null'
            debug_log_path:
              oneOf:
              - type: string
              - type: 'null'
            log_archive_type:
              oneOf:
              - type: string
              - type: 'null'
              default: db_flushed
            truncated_debug_logs:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            started_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            finished_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            status_color:
              oneOf:
              - type: string
              - type: 'null'
            status_humanized:
              oneOf:
              - type: string
              - type: 'null'
            duration:
              oneOf:
              - type: string
              - type: 'null'
            duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'RunStep(id: Union[int, NoneType], run_id: int, account_id:
            int, index: int, status: int, name: str, logs: Union[str, NoneType] =
            None, debug_logs: Union[str, NoneType] = None, log_location: Union[models.run_step.RunStepLogLocation,
            NoneType] = <RunStepLogLocation.db: ''db''>, log_path: Union[str, NoneType]
            = None, debug_log_path: Union[str, NoneType] = None, log_archive_type:
            Union[str, NoneType] = <RunStepLogArchiveType.db: ''db_flushed''>, truncated_debug_logs:
            Union[str, NoneType] = None, created_at: Union[datetime.datetime, NoneType]
            = None, updated_at: Union[datetime.datetime, NoneType] = None, started_at:
            Union[datetime.datetime, NoneType] = None, finished_at: Union[datetime.datetime,
            NoneType] = None, status_color: Union[str, NoneType] = None, status_humanized:
            Union[str, NoneType] = None, duration: Union[str, NoneType] = None, duration_humanized:
            Union[str, NoneType] = None)'
        PostgresCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - username
          - default_schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - postgres
            state:
              type: integer
            threads:
              type: integer
            username:
              type: string
            default_schema:
              type: string
            target_name:
              type: string
              default: default
            password:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'PostgresCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, username: str = None, default_schema: str =
            None, target_name: str = ''default'', password: Union[str, NoneType] =
            None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        RedshiftCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - username
          - default_schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - redshift
            state:
              type: integer
            threads:
              type: integer
            username:
              type: string
            default_schema:
              type: string
            target_name:
              type: string
              default: default
            password:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'RedshiftCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, username: str, default_schema: str, target_name:
            str = ''default'', password: Union[str, NoneType] = None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        SnowflakeCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - auth_type
          - schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - snowflake
            state:
              type: integer
            threads:
              type: integer
            auth_type:
              type: string
              enum:
              - password
              - sso
              - keypair
            schema:
              type: string
            user:
              oneOf:
              - type: string
              - type: 'null'
            target_name:
              type: string
              default: default
            role:
              oneOf:
              - type: string
              - type: 'null'
            database:
              oneOf:
              - type: string
              - type: 'null'
            warehouse:
              oneOf:
              - type: string
              - type: 'null'
            password:
              oneOf:
              - type: string
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
            private_key_passphrase:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'SnowflakeCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, auth_type: models.credentials.snowflake.SnowflakeAuthenticationType,
            schema: str, user: Union[str, NoneType] = None, target_name: str = ''default'',
            role: Union[str, NoneType] = None, database: Union[str, NoneType] = None,
            warehouse: Union[str, NoneType] = None, _refresh_token: Union[str, NoneType]
            = None, password: Union[str, NoneType] = None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, private_key: Union[str, NoneType] = None, _private_key:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            private_key_passphrase: Union[str, NoneType] = None, _private_key_passphrase:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            created_at: Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None)'
        BigqueryCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - bigquery
            state:
              type: integer
            threads:
              type: integer
            schema:
              type: string
            target_name:
              type: string
              default: default
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            username:
              oneOf:
              - type: string
              - type: 'null'
            has_refresh_token:
              oneOf:
              - type: boolean
              - type: 'null'
          additionalProperties: false
          description: 'BigqueryCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, schema: str, target_name: str = ''default'',
            created_at: Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None, username: Union[str, NoneType] = None, _refresh_token:
            Union[str, NoneType] = None, has_refresh_token: Union[bool, NoneType]
            = None)'
        DbtAdapterCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - adapter
            state:
              type: integer
            threads:
              type: integer
            adapter_id:
              oneOf:
              - type: integer
              - type: 'null'
            credential_details:
              oneOf:
              - $ref: '#/definitions/BaseSparkAdapterCredentialsSchema'
              - $ref: '#/definitions/DatabricksCredentialsSchema'
              - $ref: '#/definitions/TrinoCredentialsSchema'
              - type: 'null'
            unencrypted_credential_details:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: integer
              - type: 'null'
            target_name:
              type: string
              default: default
            adapter:
              oneOf:
              - $ref: '#/definitions/DbtAdapter'
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapterCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, adapter_id: Union[int, NoneType], credential_details:
            Union[schemas.adapters.base_spark.BaseSparkAdapterCredentialsSchema, schemas.adapters.databricks.credentials_schema.DatabricksCredentialsSchema,
            schemas.adapters.trino.credentials_schema.TrinoCredentialsSchema, NoneType]
            = None, _credential_details: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, unencrypted_credential_details: Union[Dict[str, Union[str,
            int]], NoneType] = None, target_name: str = ''default'', adapter: ''Optional[models.dbt_adapter.DbtAdapter]''
            = None, created_at: Union[datetime.datetime, NoneType] = None, updated_at:
            Union[datetime.datetime, NoneType] = None)'
        BaseSparkAdapterCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/BaseSparkAdapterCredentialFields'
              default:
                token:
                  metadata:
                    label: Token
                    description: Personalized user token.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                threads:
                  metadata:
                    label: Threads
                    description: The number of threads to use for your jobs.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 6
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'BaseSparkAdapterCredentialsSchema(fields: schemas.adapters.base_spark.BaseSparkAdapterCredentialFields
            = BaseSparkAdapterCredentialFields(token=TextField(metadata=TextFieldMetadata(label=''Token'',
            description=''Personalized user token.'', field_type=''text'', encrypt=True,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), threads=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for your jobs.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6)), field_order: Union[List[str], NoneType] = None)'
        BaseSparkAdapterCredentialFields:
          type: object
          required: []
          properties:
            token:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Token
                  description: Personalized user token.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            threads:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Threads
                  description: The number of threads to use for your jobs.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 6
          additionalProperties: false
          description: 'BaseSparkAdapterCredentialFields(token: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Token'', description=''Personalized
            user token.'', field_type=''text'', encrypt=True, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), threads: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for your jobs.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6))'
        DatabricksCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksCredentialFields'
              default:
                token:
                  metadata:
                    label: Token
                    description: Personalized user token.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                catalog:
                  metadata:
                    label: Catalog
                    description: Catalog name if Unity Catalog is enabled in your
                      Databricks workspace.  Only available in dbt version 1.1 and
                      later.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'DatabricksCredentialsSchema(fields: schemas.adapters.databricks.credentials_schema.DatabricksCredentialFields
            = DatabricksCredentialFields(token=TextField(metadata=TextFieldMetadata(label=''Token'',
            description=''Personalized user token.'', field_type=''text'', encrypt=True,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), catalog=TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''Catalog name if Unity Catalog is enabled in your Databricks
            workspace.  Only available in dbt version 1.1 and later.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            Union[List[str], NoneType] = None)'
        DatabricksCredentialFields:
          type: object
          required: []
          properties:
            token:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Token
                  description: Personalized user token.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            catalog:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Catalog
                  description: Catalog name if Unity Catalog is enabled in your Databricks
                    workspace.  Only available in dbt version 1.1 and later.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksCredentialFields(token: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Token'', description=''Personalized
            user token.'', field_type=''text'', encrypt=True, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), catalog: Union[schemas.fields.TextField.TextField,
            NoneType] = TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''))'
        TrinoCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/TrinoCredentialFields'
              default:
                user:
                  metadata:
                    label: User
                    description: The username of the account to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                password:
                  metadata:
                    label: Password
                    description: The password for the account to connect to.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                database:
                  metadata:
                    label: Catalog
                    description: The catalog to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                threads:
                  metadata:
                    label: Threads
                    description: The number of threads to use for dbt operations.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 6
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'TrinoCredentialsSchema(fields: schemas.adapters.trino.credentials_schema.TrinoCredentialFields
            = TrinoCredentialFields(user=TextField(metadata=TextFieldMetadata(label=''User'',
            description=''The username of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), password=TextField(metadata=TextFieldMetadata(label=''Password'',
            description=''The password for the account to connect to.'', field_type=''text'',
            encrypt=True, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), database=TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''The catalog to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), threads=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for dbt operations.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6)), field_order: Union[List[str], NoneType] = None)'
        TrinoCredentialFields:
          type: object
          required: []
          properties:
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: The username of the account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            password:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Password
                  description: The password for the account to connect to.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            database:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Catalog
                  description: The catalog to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            threads:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Threads
                  description: The number of threads to use for dbt operations.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 6
          additionalProperties: false
          description: 'TrinoCredentialFields(user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description=''The
            username of the account to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), password:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Password'',
            description=''The password for the account to connect to.'', field_type=''text'',
            encrypt=True, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), database:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''The catalog to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), threads: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for dbt operations.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6))'
        DbtAdapter:
          type: object
          required:
          - account_id
          - project_id
          - created_by_id
          - adapter_version
          - metadata_json
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            created_by_id:
              type: integer
            adapter_version:
              type: string
              enum:
              - apache_spark_v0
              - databricks_spark_v0
              - databricks_v0
              - trino_v0
              - snowflake_v0
              - bigquery_v0
              - postgres_v0
              - redshift_v0
            metadata_json:
              type: object
              additionalProperties:
                type: string
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapter(id: Union[int, NoneType], account_id: int, project_id:
            int, created_by_id: int, adapter_version: schemas.adapter.DbtAdapterVersion,
            metadata_json: Dict[str, str], state: int = 1, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None)'
        CustomEnvironmentVariable:
          type: object
          required:
          - account_id
          - project_id
          - name
          - type
          properties:
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            type:
              type: string
              enum:
              - project
              - environment
              - job
              - user
            state:
              oneOf:
              - type: integer
              - type: 'null'
              default: 1
            user_id:
              oneOf:
              - type: integer
              - type: 'null'
            environment_id:
              oneOf:
              - type: integer
              - type: 'null'
            job_definition_id:
              oneOf:
              - type: integer
              - type: 'null'
            environment:
              oneOf:
              - $ref: '#/definitions/EnvironmentV3'
              - type: 'null'
            raw_value:
              oneOf:
              - type: string
              - type: 'null'
            display_value:
              oneOf:
              - type: string
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: "\n    This model represents a user-defined environment variable,\
            \ which can be\n    set on the account, job or user-level and leveraged\
            \ in both the IDE and\n    scheduled Runs.\n    "
      $schema: http://json-schema.org/draft-07/schema#
    ProjectEnveloped:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Project'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    ProjectRequest:
      type: object
      required:
      - name
      - account_id
      properties:
        name:
          type: string
        account_id:
          type: integer
        connection_id:
          oneOf:
          - type: integer
          - type: 'null'
        repository_id:
          oneOf:
          - type: integer
          - type: 'null'
        semantic_layer_config_id:
          oneOf:
          - type: integer
          - type: 'null'
        id:
          oneOf:
          - type: integer
          - type: 'null'
        skipped_setup:
          oneOf:
          - type: boolean
          - type: 'null'
          default: false
        state:
          type: integer
          default: 1
        dbt_project_subdirectory:
          oneOf:
          - type: string
          - type: 'null'
        docs_job_id:
          oneOf:
          - type: integer
          - type: 'null'
        freshness_job_id:
          oneOf:
          - type: integer
          - type: 'null'
      additionalProperties: false
      description: 'Project(name: str, account_id: int, connection_id: Union[int,
        NoneType], repository_id: Union[int, NoneType] = None, semantic_layer_config_id:
        Union[int, NoneType] = None, id: Union[int, NoneType] = None, created_at:
        Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
        NoneType] = None, skipped_setup: Union[bool, NoneType] = False, state: int
        = 1, dbt_project_subdirectory: Union[str, NoneType] = None, connection: Union[models.connection.common.BaseConnectionV3,
        NoneType] = None, repository: Union[models.repository.RepositoryV3, NoneType]
        = None, group_permissions: Union[List[models.permissions.group_permission.GroupPermission],
        NoneType] = None, docs_job_id: Union[int, NoneType] = None, freshness_job_id:
        Union[int, NoneType] = None, docs_job: Union[models.job_definition.JobDefinitionV2,
        NoneType] = None, freshness_job: Union[models.job_definition.JobDefinitionV2,
        NoneType] = None)'
      definitions:
        BaseConnectionV3:
          type: object
          required:
          - account_id
          - project_id
          - name
          - type
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            type:
              type: string
              enum:
              - postgres
              - redshift
              - snowflake
              - bigquery
              - adapter
            created_by_id:
              oneOf:
              - type: integer
              - type: 'null'
            created_by_service_token_id:
              oneOf:
              - type: integer
              - type: 'null'
            details:
              oneOf:
              - oneOf:
                - $ref: '#/definitions/PostgresConnectionV3'
                - $ref: '#/definitions/SnowflakeConnectionV3'
                - $ref: '#/definitions/BigqueryConnectionV3'
                - $ref: '#/definitions/DbtAdapterConnection'
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            private_link_endpoint_id:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'BaseConnectionV3(id: Union[int, NoneType], account_id: int,
            project_id: int, name: str, type: models.connection.common.ConnectionType,
            created_by_id: Union[int, NoneType] = None, created_by_service_token_id:
            Union[int, NoneType] = None, details: Union[ForwardRef(''AnyConnection''),
            NoneType] = None, state: int = 1, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None,
            private_link_endpoint_id: Union[str, NoneType] = None)'
        PostgresConnectionV3:
          type: object
          required:
          - hostname
          - dbname
          - port
          - tunnel_enabled
          properties:
            hostname:
              type: string
            dbname:
              type: string
            port:
              type: integer
            tunnel_enabled:
              type: boolean
            encryption:
              oneOf:
              - $ref: '#/definitions/ConnectionEncryption'
              - type: 'null'
          additionalProperties: false
          description: 'PostgresConnectionV3(hostname: str, dbname: str, port: int,
            tunnel_enabled: bool, encryption: Union[models.connection.encryption.ConnectionEncryption,
            NoneType] = None)'
        ConnectionEncryption:
          type: object
          required:
          - account_id
          - connection_id
          - username
          - port
          - hostname
          properties:
            account_id:
              type: integer
            connection_id:
              type: integer
            username:
              type: string
            port:
              type: integer
            hostname:
              type: string
            public_key:
              oneOf:
              - type: string
              - type: 'null'
            state:
              type: integer
              default: 1
            id:
              oneOf:
              - type: integer
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'ConnectionEncryption(account_id: int, connection_id: int,
            username: str, port: int, hostname: str, public_key: Union[str, NoneType]
            = None, state: int = 1, id: Union[int, NoneType] = None, private_key:
            Union[str, NoneType] = None, _private_key: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None)'
        SnowflakeConnectionV3:
          type: object
          required:
          - account
          - database
          - warehouse
          - allow_sso
          - client_session_keep_alive
          properties:
            account:
              type: string
            database:
              type: string
            warehouse:
              type: string
            allow_sso:
              type: boolean
            client_session_keep_alive:
              type: boolean
            role:
              oneOf:
              - type: string
              - type: 'null'
            oauth_client_id:
              oneOf:
              - type: string
              - type: 'null'
            oauth_client_secret:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'SnowflakeConnectionV3(account: str, database: str, warehouse:
            str, allow_sso: bool, client_session_keep_alive: bool, role: Union[str,
            NoneType] = None, oauth_client_id: Union[str, NoneType] = None, _oauth_client_id:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            oauth_client_secret: Union[str, NoneType] = None, _oauth_client_secret:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None)'
        BigqueryConnectionV3:
          type: object
          required:
          - project_id
          - timeout_seconds
          - private_key_id
          - client_email
          - client_id
          - auth_uri
          - token_uri
          - auth_provider_x509_cert_url
          - client_x509_cert_url
          properties:
            project_id:
              type: string
            timeout_seconds:
              type: integer
            private_key_id:
              type: string
            client_email:
              type: string
            client_id:
              type: string
            auth_uri:
              type: string
            token_uri:
              type: string
            auth_provider_x509_cert_url:
              type: string
            client_x509_cert_url:
              type: string
            priority:
              oneOf:
              - type: string
              - type: 'null'
            retries:
              type: integer
              default: 1
            scopes:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            location:
              oneOf:
              - type: string
              - type: 'null'
            maximum_bytes_billed:
              oneOf:
              - type: integer
              - type: 'null'
            execution_project:
              oneOf:
              - type: string
              - type: 'null'
            impersonate_service_account:
              oneOf:
              - type: string
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
            job_retry_deadline_seconds:
              oneOf:
              - type: integer
              - type: 'null'
            job_creation_timeout_seconds:
              oneOf:
              - type: integer
              - type: 'null'
            application_id:
              oneOf:
              - type: string
              - type: 'null'
            application_secret:
              oneOf:
              - type: string
              - type: 'null'
            is_configured_for_oauth:
              type: boolean
              default: false
            gcs_bucket:
              oneOf:
              - type: string
              - type: 'null'
            dataproc_region:
              oneOf:
              - type: string
              - type: 'null'
            dataproc_cluster_name:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'BigqueryConnectionV3(project_id: str, timeout_seconds: int,
            private_key_id: str, client_email: str, client_id: str, auth_uri: str,
            token_uri: str, auth_provider_x509_cert_url: str, client_x509_cert_url:
            str, priority: Union[str, NoneType] = None, retries: int = 1, scopes:
            Union[List[str], NoneType] = None, location: Union[str, NoneType] = None,
            maximum_bytes_billed: Union[int, NoneType] = None, execution_project:
            Union[str, NoneType] = None, impersonate_service_account: Union[str, NoneType]
            = None, private_key: Union[str, NoneType] = None, job_retry_deadline_seconds:
            Union[int, NoneType] = None, job_creation_timeout_seconds: Union[int,
            NoneType] = None, _private_key: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, application_id: Union[str, NoneType] = None, application_secret:
            Union[str, NoneType] = None, is_configured_for_oauth: bool = False, _application_id:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            _application_secret: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, gcs_bucket: Union[str, NoneType] = None, dataproc_region:
            Union[str, NoneType] = None, dataproc_cluster_name: Union[str, NoneType]
            = None)'
        DbtAdapterConnection:
          type: object
          required:
          - connection_details
          properties:
            adapter_id:
              oneOf:
              - type: integer
              - type: 'null'
            connection_details:
              oneOf:
              - $ref: '#/definitions/ApacheSparkConnectionSchema'
              - $ref: '#/definitions/DatabricksSparkConnectionSchema'
              - $ref: '#/definitions/DatabricksConnectionSchema'
              - $ref: '#/definitions/TrinoConnectionSchema'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapterConnection(adapter_id: Union[int, NoneType], connection_details:
            Union[schemas.adapters.apache_spark.connection_schema.ApacheSparkConnectionSchema,
            schemas.adapters.databricks_spark.connection_schema.DatabricksSparkConnectionSchema,
            schemas.adapters.databricks.connection_schema.DatabricksConnectionSchema,
            schemas.adapters.trino.connection_schema.TrinoConnectionSchema], created_at:
            Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None)'
        ApacheSparkConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/ApacheSparkConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: spark
                method:
                  metadata:
                    label: Method
                    description: ''
                    field_type: select
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    options:
                    - label: HTTP
                      value: http
                    - label: Thrift
                      value: thrift
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: http
                host:
                  metadata:
                    label: Hostname
                    description: Host name of connection.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: Port number of host.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
                cluster:
                  metadata:
                    label: Cluster
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: ''
                connect_timeout:
                  metadata:
                    label: Connection Timeout
                    description: Connection timeout in seconds
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: false
                  value: 10
                connect_retries:
                  metadata:
                    label: Connection Retries
                    description: Connection retries in integer
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: false
                  value: 0
                organization:
                  metadata:
                    label: Organization
                    description: Organization id
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                user:
                  metadata:
                    label: User
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                auth:
                  metadata:
                    label: Auth
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                kerberos_service_name:
                  metadata:
                    label: Kerberos Service Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'ApacheSparkConnectionSchema(fields: schemas.adapters.apache_spark.connection_schema.ApacheSparkConnectionFields
            = ApacheSparkConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''spark''), method=SelectField(metadata=SelectFieldMetadata(label=''Method'',
            description='''', field_type=''select'', encrypt=False, depends_on=None,
            overrideable=False, options=[SelectOption(label=''HTTP'', value=''http''),
            SelectOption(label=''Thrift'', value=''thrift'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''http''), host=TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''Host name of connection.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''Port number of host.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster=TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=''''), connect_timeout=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Timeout'', description=''Connection timeout in seconds'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=10), connect_retries=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Retries'', description=''Connection retries in integer'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=0), organization=TextField(metadata=TextFieldMetadata(label=''Organization'',
            description=''Organization id'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user=TextField(metadata=TextFieldMetadata(label=''User'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), auth=TextField(metadata=TextFieldMetadata(label=''Auth'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), kerberos_service_name=TextField(metadata=TextFieldMetadata(label=''Kerberos
            Service Name'', description='''', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            List[str] = <factory>)'
        ApacheSparkConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: spark
            method:
              $ref: '#/definitions/SelectField'
              default:
                metadata:
                  label: Method
                  description: ''
                  field_type: select
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  options:
                  - label: HTTP
                    value: http
                  - label: Thrift
                    value: thrift
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: http
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Hostname
                  description: Host name of connection.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: Port number of host.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
            cluster:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Cluster
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: ''
            connect_timeout:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Connection Timeout
                  description: Connection timeout in seconds
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: false
                value: 10
            connect_retries:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Connection Retries
                  description: Connection retries in integer
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: false
                value: 0
            organization:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Organization
                  description: Organization id
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            auth:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Auth
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            kerberos_service_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Kerberos Service Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'ApacheSparkConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''spark''), method: schemas.fields.SelectField.SelectField
            = SelectField(metadata=SelectFieldMetadata(label=''Method'', description='''',
            field_type=''select'', encrypt=False, depends_on=None, overrideable=False,
            options=[SelectOption(label=''HTTP'', value=''http''), SelectOption(label=''Thrift'',
            value=''thrift'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''http''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''Host name of connection.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''Port
            number of host.'', field_type=''number'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=''''), connect_timeout: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Timeout'', description=''Connection timeout in seconds'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=10), connect_retries: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Connection
            Retries'', description=''Connection retries in integer'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=False)),
            value=0), organization: Union[schemas.fields.TextField.TextField, NoneType]
            = TextField(metadata=TextFieldMetadata(label=''Organization'', description=''Organization
            id'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), auth: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Auth'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), kerberos_service_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Kerberos Service Name'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''))'
        TextField:
          type: object
          required:
          - metadata
          - value
          properties:
            metadata:
              $ref: '#/definitions/TextFieldMetadata'
            value:
              type: string
          additionalProperties: false
          description: 'TextField(metadata: schemas.fields.TextField.TextFieldMetadata,
            value: str = None)'
        TextFieldMetadata:
          type: object
          required:
          - label
          - description
          properties:
            label:
              type: string
            description:
              type: string
            field_type:
              type: string
              default: text
            encrypt:
              type: boolean
              default: false
            depends_on:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: array
                    items:
                      type: string
              - type: 'null'
            overrideable:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            validation:
              $ref: '#/definitions/GenericTextValidation'
              default:
                min_length: null
                max_length: null
                required: false
                pattern: null
          additionalProperties: false
          description: 'TextFieldMetadata(label: str, description: str, field_type:
            str = ''text'', encrypt: bool = False, depends_on: Union[Dict[str, Union[str,
            List[str]]], NoneType] = None, overrideable: Union[bool, NoneType] = False,
            validation: schemas.fields.TextField.GenericTextValidation = GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None))'
        GenericTextValidation:
          type: object
          required: []
          properties:
            min_length:
              oneOf:
              - type: integer
              - type: 'null'
            max_length:
              oneOf:
              - type: integer
              - type: 'null'
            required:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            pattern:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'GenericTextValidation(min_length: Union[int, NoneType] = None,
            max_length: Union[int, NoneType] = None, required: Union[bool, NoneType]
            = False, pattern: Union[str, NoneType] = None)'
        SelectField:
          type: object
          required:
          - metadata
          properties:
            metadata:
              $ref: '#/definitions/SelectFieldMetadata'
            value:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'SelectField(metadata: schemas.fields.SelectField.SelectFieldMetadata,
            value: Union[str, NoneType] = None)'
        SelectFieldMetadata:
          type: object
          required:
          - label
          - description
          - options
          properties:
            label:
              type: string
            description:
              type: string
            field_type:
              type: string
              default: select
            encrypt:
              type: boolean
              default: false
            depends_on:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: array
                    items:
                      type: string
              - type: 'null'
            overrideable:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            options:
              type: array
              items:
                $ref: '#/definitions/SelectOption'
            validation:
              $ref: '#/definitions/GenericTextValidation'
              default:
                min_length: null
                max_length: null
                required: false
                pattern: null
          additionalProperties: false
          description: 'SelectFieldMetadata(label: str, description: str, field_type:
            str = ''select'', encrypt: bool = False, depends_on: Union[Dict[str, Union[str,
            List[str]]], NoneType] = None, overrideable: Union[bool, NoneType] = False,
            options: List[schemas.fields.SelectField.SelectOption] = None, validation:
            schemas.fields.TextField.GenericTextValidation = GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None))'
        SelectOption:
          type: object
          required:
          - label
          - value
          properties:
            label:
              type: string
            value:
              oneOf:
              - type: string
              - type: integer
          additionalProperties: false
          description: 'SelectOption(label: str, value: Union[str, int])'
        LegacyIntegerField:
          type: object
          required:
          - metadata
          - value
          properties:
            metadata:
              $ref: '#/definitions/TextFieldMetadata'
            value:
              type: integer
          additionalProperties: false
          description: 'LegacyIntegerField(metadata: schemas.fields.TextField.TextFieldMetadata,
            value: int = None)'
        DatabricksSparkConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksSparkConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: spark
                method:
                  metadata:
                    label: Method
                    description: ''
                    field_type: select
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    options:
                    - label: ODBC
                      value: odbc
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: odbc
                host:
                  metadata:
                    label: Hostname
                    description: The hostname of the Databricks account to connect
                      to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_hostname
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: The port to connect to Databricks for this connection.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
                cluster:
                  metadata:
                    label: Cluster
                    description: The ID of the cluster to connect to (required if
                      using a cluster)
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                endpoint:
                  metadata:
                    label: Endpoint
                    description: The ID of the endpoint to connect to (required if
                      using Databricks SQL Analytics)
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                driver:
                  metadata:
                    label: Driver
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: /opt/simba/spark/lib/64/libsparkodbc_sb64.so
                organization:
                  metadata:
                    label: Organization
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
                user:
                  metadata:
                    label: User
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'DatabricksSparkConnectionSchema(fields: schemas.adapters.databricks_spark.connection_schema.DatabricksSparkConnectionFields
            = DatabricksSparkConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''spark''), method=SelectField(metadata=SelectFieldMetadata(label=''Method'',
            description='''', field_type=''select'', encrypt=False, depends_on=None,
            overrideable=False, options=[SelectOption(label=''ODBC'', value=''odbc'')],
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''odbc''), host=TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''The hostname of the Databricks account to connect to.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_hostname'')), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''The port to connect to Databricks for this connection.'',
            field_type=''number'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericIntegerValidation(required=True)), value=443), cluster=TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description=''The ID of the cluster to connect to (required if using a
            cluster)'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), endpoint=TextField(metadata=TextFieldMetadata(label=''Endpoint'',
            description=''The ID of the endpoint to connect to (required if using
            Databricks SQL Analytics)'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), driver=TextField(metadata=TextFieldMetadata(label=''Driver'',
            description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''/opt/simba/spark/lib/64/libsparkodbc_sb64.so''),
            organization=TextField(metadata=TextFieldMetadata(label=''Organization'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user=TextField(metadata=TextFieldMetadata(label=''User'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            List[str] = <factory>)'
        DatabricksSparkConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: spark
            method:
              $ref: '#/definitions/SelectField'
              default:
                metadata:
                  label: Method
                  description: ''
                  field_type: select
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  options:
                  - label: ODBC
                    value: odbc
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: odbc
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Hostname
                  description: The hostname of the Databricks account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_hostname
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: The port to connect to Databricks for this connection.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
            cluster:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Cluster
                  description: The ID of the cluster to connect to (required if using
                    a cluster)
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            endpoint:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Endpoint
                  description: The ID of the endpoint to connect to (required if using
                    Databricks SQL Analytics)
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            driver:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Driver
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: /opt/simba/spark/lib/64/libsparkodbc_sb64.so
            organization:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Organization
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksSparkConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''spark''), method: schemas.fields.SelectField.SelectField
            = SelectField(metadata=SelectFieldMetadata(label=''Method'', description='''',
            field_type=''select'', encrypt=False, depends_on=None, overrideable=False,
            options=[SelectOption(label=''ODBC'', value=''odbc'')], validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''odbc''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Hostname'',
            description=''The hostname of the Databricks account to connect to.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_hostname'')), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''The
            port to connect to Databricks for this connection.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443), cluster: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Cluster'',
            description=''The ID of the cluster to connect to (required if using a
            cluster)'', field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), endpoint: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Endpoint'', description=''The
            ID of the endpoint to connect to (required if using Databricks SQL Analytics)'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''), driver: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Driver'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''/opt/simba/spark/lib/64/libsparkodbc_sb64.so''),
            organization: Union[schemas.fields.TextField.TextField, NoneType] = TextField(metadata=TextFieldMetadata(label=''Organization'',
            description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''), user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''''))'
        DatabricksConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: databricks
                host:
                  metadata:
                    label: Server Hostname
                    description: The hostname of the Databricks cluster or SQL warehouse.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_hostname
                  value: ''
                http_path:
                  metadata:
                    label: HTTP Path
                    description: The HTTP path of the Databricks cluster or SQL warehouse.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: databricks_http_path
                  value: ''
                catalog:
                  metadata:
                    label: Catalog
                    description: Catalog name if Unity Catalog is enabled in your
                      Databricks workspace.  Only available in dbt version 1.1 and
                      later.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: true
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'DatabricksConnectionSchema(fields: schemas.adapters.databricks.connection_schema.DatabricksConnectionFields
            = DatabricksConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''databricks''),
            host=TextField(metadata=TextFieldMetadata(label=''Server Hostname'', description=''The
            hostname of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_hostname'')), value=''''),
            http_path=TextField(metadata=TextFieldMetadata(label=''HTTP Path'', description=''The
            HTTP path of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_http_path'')), value=''''),
            catalog=TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=True, validation=GenericTextValidation(min_length=None, max_length=None,
            required=False, pattern=None)), value='''')), field_order: List[str] =
            <factory>)'
        DatabricksConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: databricks
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Server Hostname
                  description: The hostname of the Databricks cluster or SQL warehouse.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_hostname
                value: ''
            http_path:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: HTTP Path
                  description: The HTTP path of the Databricks cluster or SQL warehouse.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: databricks_http_path
                value: ''
            catalog:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Catalog
                  description: Catalog name if Unity Catalog is enabled in your Databricks
                    workspace.  Only available in dbt version 1.1 and later.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: true
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''databricks''), host: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Server Hostname'', description=''The
            hostname of the Databricks cluster or SQL warehouse.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=''databricks_hostname'')), value=''''),
            http_path: schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''HTTP
            Path'', description=''The HTTP path of the Databricks cluster or SQL warehouse.'',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=''databricks_http_path'')), value=''''), catalog: Union[schemas.fields.TextField.TextField,
            NoneType] = TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=True, validation=GenericTextValidation(min_length=None, max_length=None,
            required=False, pattern=None)), value=''''))'
        TrinoConnectionSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/TrinoConnectionFields'
              default:
                type:
                  metadata:
                    label: Connection type
                    description: ''
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: trino
                method:
                  metadata:
                    label: Method
                    description: The auth method to use.
                    field_type: hidden
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ldap
                host:
                  metadata:
                    label: Host
                    description: The hostname of the account to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                port:
                  metadata:
                    label: Port
                    description: The port to connect to for this connection.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 443
            field_order:
              type: array
              items:
                type: string
              default: []
          additionalProperties: false
          description: 'TrinoConnectionSchema(fields: schemas.adapters.trino.connection_schema.TrinoConnectionFields
            = TrinoConnectionFields(type=TextField(metadata=TextFieldMetadata(label=''Connection
            type'', description='''', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''trino''), method=TextField(metadata=TextFieldMetadata(label=''Method'',
            description=''The auth method to use.'', field_type=''hidden'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''ldap''), host=TextField(metadata=TextFieldMetadata(label=''Host'',
            description=''The hostname of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'',
            description=''The port to connect to for this connection.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443)), field_order: List[str] = <factory>)'
        TrinoConnectionFields:
          type: object
          required: []
          properties:
            type:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Connection type
                  description: ''
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: trino
            method:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Method
                  description: The auth method to use.
                  field_type: hidden
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ldap
            host:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Host
                  description: The hostname of the account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            port:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Port
                  description: The port to connect to for this connection.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 443
          additionalProperties: false
          description: 'TrinoConnectionFields(type: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Connection type'', description='''',
            field_type=''hidden'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''trino''), method: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Method'', description=''The
            auth method to use.'', field_type=''hidden'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''ldap''), host:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Host'',
            description=''The hostname of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), port: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Port'', description=''The
            port to connect to for this connection.'', field_type=''number'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=443))'
        RepositoryV3:
          type: object
          required:
          - account_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            full_name:
              oneOf:
              - type: string
              - type: 'null'
            remote_url:
              oneOf:
              - type: string
                pattern: ^\S+[/:](?P<repo>[^\s/]+?)(?:\.git)?$
              - type: 'null'
            remote_backend:
              oneOf:
              - type: string
                enum:
                - azure_active_directory
                - github
                - managed
                - gitlab
                - manual_config
              - type: 'null'
            git_clone_strategy:
              oneOf:
              - type: string
                enum:
                - azure_active_directory_app
                - deploy_key
                - deploy_token
                - github_app
                - git_token
              - type: 'null'
            deploy_key_id:
              oneOf:
              - type: integer
              - type: 'null'
            repository_credentials_id:
              oneOf:
              - type: integer
              - type: 'null'
            github_installation_id:
              oneOf:
              - type: integer
              - type: 'null'
            github_webhook_id:
              oneOf:
              - type: integer
              - type: 'null'
            github_webhook_secret:
              oneOf:
              - type: string
              - type: 'null'
            pull_request_url_template:
              oneOf:
              - type: string
                pattern: ^(http|https)://(.*)
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            deploy_key:
              oneOf:
              - type: object
              - type: 'null'
            github_repo:
              oneOf:
              - type: string
              - type: 'null'
            name:
              oneOf:
              - type: string
              - type: 'null'
            git_provider_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab:
              oneOf:
              - $ref: '#/definitions/RepositoryGitlab'
              - type: 'null'
            git_provider:
              oneOf:
              - $ref: '#/definitions/GitProvider'
              - type: 'null'
          additionalProperties: false
          description: 'RepositoryV3(id: Union[int, NoneType], account_id: int, project_id:
            Union[int, NoneType] = None, full_name: Union[str, NoneType] = None, remote_url:
            Union[RemoteUrl, NoneType] = None, remote_backend: Union[models.repository.GitRemoteBackend,
            NoneType] = None, git_clone_strategy: Union[models.repository.GitCloneStrategy,
            NoneType] = None, deploy_key_id: Union[int, NoneType] = None, repository_credentials_id:
            Union[int, NoneType] = None, github_installation_id: Union[int, NoneType]
            = None, github_webhook_id: Union[int, NoneType] = None, github_webhook_secret:
            Union[str, NoneType] = None, _github_webhook_secret: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, pull_request_url_template: Union[PullRequestUrl, NoneType]
            = None, state: int = 1, created_at: Union[datetime.datetime, NoneType]
            = None, updated_at: Union[datetime.datetime, NoneType] = None, deploy_key:
            Union[Dict[Any, Any], NoneType] = None, github_repo: Union[str, NoneType]
            = None, name: Union[str, NoneType] = None, git_provider_id: Union[int,
            NoneType] = None, gitlab: Union[models.repository_gitlab.RepositoryGitlab,
            NoneType] = None, git_provider: Union[models.git_provider.GitProvider,
            NoneType] = None)'
        RepositoryGitlab:
          type: object
          required:
          - account_id
          - gitlab_project_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            repository_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab_project_id:
              type: integer
            state:
              type: integer
              default: 1
            project_access_token_id:
              oneOf:
              - type: integer
              - type: 'null'
            project_access_token:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'RepositoryGitlab(id: Union[int, NoneType], account_id: int,
            repository_id: Union[int, NoneType], gitlab_project_id: int, state: int
            = 1, project_access_token_id: Union[int, NoneType] = None, project_access_token:
            Union[str, NoneType] = None, _project_access_token: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        GitProvider:
          type: object
          required:
          - account_id
          - provider_type
          properties:
            account_id:
              type: integer
            provider_type:
              type: string
              enum:
              - azure_active_directory
              - github
              - gitlab
              - git_url
              - managed_github
              - manual_config
            state:
              type: integer
              default: 1
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: "\n    This class represents a git provider integration the\
            \ user\n    has setup and will interact with via the dbt Cloud IDE.\n\
            \    "
        GroupPermission:
          type: object
          required:
          - account_id
          - group_id
          - all_projects
          - permission_set
          properties:
            account_id:
              type: integer
            group_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            all_projects:
              type: boolean
            permission_set:
              type: string
              enum:
              - owner
              - member
              - account_admin
              - security_admin
              - billing_admin
              - admin
              - database_admin
              - git_admin
              - team_admin
              - job_admin
              - job_viewer
              - analyst
              - developer
              - stakeholder
              - readonly
              - project_creator
              - account_viewer
              - metadata_only
              - semantic_layer_only
              - webhooks_only
            permission_level:
              oneOf:
              - type: integer
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'GroupPermission(account_id: int, group_id: int, project_id:
            Union[int, NoneType], all_projects: bool, permission_set: models.permissions.sets.PredefinedPermissionSet,
            permission_level: Union[int, NoneType] = None, id: Union[int, NoneType]
            = None, state: int = 1, created_at: Union[datetime.datetime, NoneType]
            = None, updated_at: Union[datetime.datetime, NoneType] = None)'
        JobDefinitionV2:
          type: object
          required:
          - environment_id
          - account_id
          - project_id
          - name
          - generate_docs
          - run_generate_sources
          - state
          properties:
            environment_id:
              type: integer
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            generate_docs:
              type: boolean
            run_generate_sources:
              type: boolean
            state:
              type: integer
            dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            raw_dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            deactivated:
              type: boolean
              default: false
            run_failure_count:
              type: integer
              default: 0
            triggers:
              oneOf:
              - $ref: '#/definitions/JobDefinitionTriggers'
              - type: 'null'
            settings:
              oneOf:
              - $ref: '#/definitions/JobDefinitionSettings'
              - type: 'null'
            execution:
              oneOf:
              - $ref: '#/definitions/JobDefinitionExecution'
              - type: 'null'
            schedule:
              oneOf:
              - $ref: '#/definitions/JobDefinitionSchedule'
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            execute_steps:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            environment:
              oneOf:
              - $ref: '#/definitions/EnvironmentV3'
              - type: 'null'
            most_recent_run:
              oneOf:
              - $ref: '#/definitions/Run'
              - type: 'null'
            most_recent_completed_run:
              oneOf:
              - $ref: '#/definitions/Run'
              - type: 'null'
            custom_environment_variables:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/CustomEnvironmentVariable'
              - type: 'null'
            job_type:
              oneOf:
              - type: string
                enum:
                - ci
                - scheduled
                - other
              - type: 'null'
          additionalProperties: false
          description: 'JobDefinitionV2(environment_id: int, account_id: int, project_id:
            int, name: str, generate_docs: bool, run_generate_sources: bool, state:
            int, dbt_version: Union[str, NoneType], raw_dbt_version: Union[str, NoneType]
            = None, id: Union[int, NoneType] = None, deactivated: bool = False, run_failure_count:
            int = 0, triggers: Union[models.job_definition.JobDefinitionTriggers,
            NoneType] = None, settings: Union[models.job_definition.JobDefinitionSettings,
            NoneType] = None, execution: Union[models.job_definition.JobDefinitionExecution,
            NoneType] = None, schedule: Union[models.job_definition.JobDefinitionSchedule,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None, execute_steps:
            Union[List[str], NoneType] = None, environment: ''Optional[models.environment.EnvironmentV3]''
            = None, most_recent_run: Union[models.run.Run, NoneType] = None, most_recent_completed_run:
            Union[models.run.Run, NoneType] = None, custom_environment_variables:
            Union[List[models.custom_environment_variable.CustomEnvironmentVariable],
            NoneType] = None, job_type: Union[common.constants.JobType, NoneType]
            = None)'
        JobDefinitionTriggers:
          type: object
          required:
          - github_webhook
          - schedule
          properties:
            github_webhook:
              type: boolean
            schedule:
              type: boolean
            git_provider_webhook:
              oneOf:
              - type: boolean
              - type: 'null'
            custom_branch_only:
              oneOf:
              - type: boolean
              - type: 'null'
          additionalProperties: false
          description: 'JobDefinitionTriggers(github_webhook: bool, schedule: bool,
            git_provider_webhook: Union[bool, NoneType] = None, custom_branch_only:
            Union[bool, NoneType] = None)'
        JobDefinitionSettings:
          type: object
          required:
          - threads
          - target_name
          properties:
            threads:
              type: integer
            target_name:
              type: string
          additionalProperties: false
          description: 'JobDefinitionSettings(threads: int, target_name: str)'
        JobDefinitionExecution:
          type: object
          required:
          - timeout_seconds
          properties:
            timeout_seconds:
              type: integer
          additionalProperties: false
          description: 'JobDefinitionExecution(timeout_seconds: int)'
        JobDefinitionSchedule:
          type: object
          required:
          - cron
          - date
          - time
          properties:
            cron:
              type: string
            date:
              type: string
              enum:
              - every_day
              - days_of_week
              - custom_cron
            time:
              type: string
              enum:
              - every_hour
              - at_exact_hours
          additionalProperties: false
          description: 'JobDefinitionSchedule(cron: str, date: models.job_definition.DateStrategy,
            time: models.job_definition.TimeStrategy)'
        EnvironmentV3:
          type: object
          required:
          - account_id
          - project_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            credentials_id:
              oneOf:
              - type: integer
              - type: 'null'
            name:
              type: string
              default: New Environment
            dbt_version:
              type: string
              default: 1.5.0-latest
            raw_dbt_version:
              oneOf:
              - type: string
              - type: 'null'
            type:
              type: string
              enum:
              - development
              - deployment
              default: deployment
            use_custom_branch:
              type: boolean
              default: false
            custom_branch:
              oneOf:
              - type: string
              - type: 'null'
            supports_docs:
              type: boolean
              default: false
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            project:
              oneOf:
              - $ref: '#/definitions/Project'
              - type: 'null'
            jobs:
              oneOf:
              - type: array
                items:
                  type: object
                  additionalProperties:
                    oneOf:
                    - $ref: '#/definitions/Run'
                    - type: 'null'
              - type: 'null'
            credentials:
              oneOf:
              - $ref: '#/definitions/PostgresCredentials'
              - $ref: '#/definitions/RedshiftCredentials'
              - $ref: '#/definitions/SnowflakeCredentials'
              - $ref: '#/definitions/BigqueryCredentials'
              - $ref: '#/definitions/DbtAdapterCredentials'
              - type: 'null'
            custom_environment_variables:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/CustomEnvironmentVariable'
              - type: 'null'
            deployment_type:
              oneOf:
              - type: string
                enum:
                - production
              - type: 'null'
          additionalProperties: false
          description: "\n    An environment is a collection of settings within a\
            \ project that defines how dbt is run.\n    Use it to define the version\
            \ controlled branch and warehouse connection that dbt will run on.\n \
            \   "
        Project:
          type: object
          required:
          - name
          - account_id
          properties:
            name:
              type: string
            account_id:
              type: integer
            connection_id:
              oneOf:
              - type: integer
              - type: 'null'
            repository_id:
              oneOf:
              - type: integer
              - type: 'null'
            semantic_layer_config_id:
              oneOf:
              - type: integer
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            skipped_setup:
              oneOf:
              - type: boolean
              - type: 'null'
              default: false
            state:
              type: integer
              default: 1
            dbt_project_subdirectory:
              oneOf:
              - type: string
              - type: 'null'
            connection:
              oneOf:
              - $ref: '#/definitions/BaseConnectionV3'
              - type: 'null'
            repository:
              oneOf:
              - $ref: '#/definitions/RepositoryV3'
              - type: 'null'
            group_permissions:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/GroupPermission'
              - type: 'null'
            docs_job_id:
              oneOf:
              - type: integer
              - type: 'null'
            freshness_job_id:
              oneOf:
              - type: integer
              - type: 'null'
            docs_job:
              oneOf:
              - $ref: '#/definitions/JobDefinitionV2'
              - type: 'null'
            freshness_job:
              oneOf:
              - $ref: '#/definitions/JobDefinitionV2'
              - type: 'null'
          additionalProperties: false
          description: 'Project(name: str, account_id: int, connection_id: Union[int,
            NoneType], repository_id: Union[int, NoneType] = None, semantic_layer_config_id:
            Union[int, NoneType] = None, id: Union[int, NoneType] = None, created_at:
            Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None, skipped_setup: Union[bool, NoneType] = False, state:
            int = 1, dbt_project_subdirectory: Union[str, NoneType] = None, connection:
            Union[models.connection.common.BaseConnectionV3, NoneType] = None, repository:
            Union[models.repository.RepositoryV3, NoneType] = None, group_permissions:
            Union[List[models.permissions.group_permission.GroupPermission], NoneType]
            = None, docs_job_id: Union[int, NoneType] = None, freshness_job_id: Union[int,
            NoneType] = None, docs_job: Union[models.job_definition.JobDefinitionV2,
            NoneType] = None, freshness_job: Union[models.job_definition.JobDefinitionV2,
            NoneType] = None)'
        Run:
          type: object
          required:
          - account_id
          - environment_id
          - project_id
          - job_definition_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            trigger_id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            environment_id:
              type: integer
            project_id:
              type: integer
            job_definition_id:
              type: integer
            status:
              type: integer
              default: 1
            dbt_version:
              type: string
              default: 1.5.0-latest
            git_branch:
              oneOf:
              - type: string
              - type: 'null'
            git_sha:
              oneOf:
              - type: string
              - type: 'null'
            status_message:
              oneOf:
              - type: string
              - type: 'null'
            owner_thread_id:
              oneOf:
              - type: string
              - type: 'null'
            executed_by_thread_id:
              oneOf:
              - type: string
              - type: 'null'
            deferring_run_id:
              oneOf:
              - type: integer
              - type: 'null'
            artifacts_saved:
              type: boolean
              default: false
            artifact_s3_path:
              oneOf:
              - type: string
              - type: 'null'
            has_docs_generated:
              type: boolean
              default: false
            has_sources_generated:
              type: boolean
              default: false
            notifications_sent:
              type: boolean
              default: false
            blocked_by:
              type: array
              items:
                type: integer
              default: []
            scribe_enabled:
              type: boolean
              default: false
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            dequeued_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            started_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            finished_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            last_checked_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            last_heartbeat_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            should_start_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            trigger:
              oneOf:
              - $ref: '#/definitions/RunTrigger'
              - type: 'null'
            job:
              oneOf:
              - type: object
              - type: 'null'
            environment:
              oneOf:
              - type: object
              - type: 'null'
            run_steps:
              oneOf:
              - type: array
                items:
                  $ref: '#/definitions/RunStep'
              - type: 'null'
              default: []
            status_humanized:
              oneOf:
              - type: string
              - type: 'null'
            in_progress:
              oneOf:
              - type: boolean
              - type: 'null'
            is_complete:
              oneOf:
              - type: boolean
              - type: 'null'
            is_success:
              oneOf:
              - type: boolean
              - type: 'null'
            is_error:
              oneOf:
              - type: boolean
              - type: 'null'
            is_cancelled:
              oneOf:
              - type: boolean
              - type: 'null'
            duration:
              oneOf:
              - type: string
              - type: 'null'
            queued_duration:
              oneOf:
              - type: string
              - type: 'null'
            run_duration:
              oneOf:
              - type: string
              - type: 'null'
            duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            queued_duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            run_duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
            created_at_humanized:
              oneOf:
              - type: string
              - type: 'null'
            finished_at_humanized:
              oneOf:
              - type: string
              - type: 'null'
            job_id:
              oneOf:
              - type: integer
              - type: 'null'
            is_running:
              oneOf:
              - type: boolean
              - type: 'null'
          additionalProperties: false
          description: "\n    Represents a run of a job definition.\n    "
        RunTrigger:
          type: object
          required:
          - cause
          - job_definition_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            cause:
              type: string
            job_definition_id:
              type: integer
            git_branch:
              oneOf:
              - type: string
              - type: 'null'
            git_sha:
              oneOf:
              - type: string
              - type: 'null'
            azure_pull_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            github_pull_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab_merge_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            schema_override:
              oneOf:
              - type: string
              - type: 'null'
            dbt_version_override:
              oneOf:
              - type: string
              - type: 'null'
            threads_override:
              oneOf:
              - type: integer
              - type: 'null'
            target_name_override:
              oneOf:
              - type: string
              - type: 'null'
            generate_docs_override:
              oneOf:
              - type: boolean
              - type: 'null'
            timeout_seconds_override:
              oneOf:
              - type: integer
              - type: 'null'
            steps_override:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            cause_humanized:
              oneOf:
              - type: string
              - type: 'null'
            job:
              oneOf:
              - type: object
              - type: 'null'
          additionalProperties: false
          description: 'RunTrigger(id: Union[int, NoneType], cause: str, job_definition_id:
            int, git_branch: Union[str, NoneType] = None, git_sha: Union[str, NoneType]
            = None, azure_pull_request_id: Union[int, NoneType] = None, github_pull_request_id:
            Union[int, NoneType] = None, gitlab_merge_request_id: Union[int, NoneType]
            = None, schema_override: Union[str, NoneType] = None, dbt_version_override:
            Union[str, NoneType] = None, threads_override: Union[int, NoneType] =
            None, target_name_override: Union[str, NoneType] = None, generate_docs_override:
            Union[bool, NoneType] = None, timeout_seconds_override: Union[int, NoneType]
            = None, steps_override: Union[List[str], NoneType] = None, created_at:
            Union[datetime.datetime, NoneType] = None, cause_humanized: Union[str,
            NoneType] = None, job: Union[Dict[str, Any], NoneType] = None)'
        RunStep:
          type: object
          required:
          - run_id
          - account_id
          - index
          - status
          - name
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            run_id:
              type: integer
            account_id:
              type: integer
            index:
              type: integer
            status:
              type: integer
            name:
              type: string
            logs:
              oneOf:
              - type: string
              - type: 'null'
            debug_logs:
              oneOf:
              - type: string
              - type: 'null'
            log_location:
              oneOf:
              - type: string
                enum:
                - legacy
                - s3
                - db
                - empty
              - type: 'null'
              default: db
            log_path:
              oneOf:
              - type: string
              - type: 'null'
            debug_log_path:
              oneOf:
              - type: string
              - type: 'null'
            log_archive_type:
              oneOf:
              - type: string
              - type: 'null'
              default: db_flushed
            truncated_debug_logs:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            started_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            finished_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            status_color:
              oneOf:
              - type: string
              - type: 'null'
            status_humanized:
              oneOf:
              - type: string
              - type: 'null'
            duration:
              oneOf:
              - type: string
              - type: 'null'
            duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'RunStep(id: Union[int, NoneType], run_id: int, account_id:
            int, index: int, status: int, name: str, logs: Union[str, NoneType] =
            None, debug_logs: Union[str, NoneType] = None, log_location: Union[models.run_step.RunStepLogLocation,
            NoneType] = <RunStepLogLocation.db: ''db''>, log_path: Union[str, NoneType]
            = None, debug_log_path: Union[str, NoneType] = None, log_archive_type:
            Union[str, NoneType] = <RunStepLogArchiveType.db: ''db_flushed''>, truncated_debug_logs:
            Union[str, NoneType] = None, created_at: Union[datetime.datetime, NoneType]
            = None, updated_at: Union[datetime.datetime, NoneType] = None, started_at:
            Union[datetime.datetime, NoneType] = None, finished_at: Union[datetime.datetime,
            NoneType] = None, status_color: Union[str, NoneType] = None, status_humanized:
            Union[str, NoneType] = None, duration: Union[str, NoneType] = None, duration_humanized:
            Union[str, NoneType] = None)'
        PostgresCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - username
          - default_schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - postgres
            state:
              type: integer
            threads:
              type: integer
            username:
              type: string
            default_schema:
              type: string
            target_name:
              type: string
              default: default
            password:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'PostgresCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, username: str = None, default_schema: str =
            None, target_name: str = ''default'', password: Union[str, NoneType] =
            None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        RedshiftCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - username
          - default_schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - redshift
            state:
              type: integer
            threads:
              type: integer
            username:
              type: string
            default_schema:
              type: string
            target_name:
              type: string
              default: default
            password:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'RedshiftCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, username: str, default_schema: str, target_name:
            str = ''default'', password: Union[str, NoneType] = None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, created_at: Union[datetime.datetime, NoneType] = None,
            updated_at: Union[datetime.datetime, NoneType] = None)'
        SnowflakeCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - auth_type
          - schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - snowflake
            state:
              type: integer
            threads:
              type: integer
            auth_type:
              type: string
              enum:
              - password
              - sso
              - keypair
            schema:
              type: string
            user:
              oneOf:
              - type: string
              - type: 'null'
            target_name:
              type: string
              default: default
            role:
              oneOf:
              - type: string
              - type: 'null'
            database:
              oneOf:
              - type: string
              - type: 'null'
            warehouse:
              oneOf:
              - type: string
              - type: 'null'
            password:
              oneOf:
              - type: string
              - type: 'null'
            private_key:
              oneOf:
              - type: string
              - type: 'null'
            private_key_passphrase:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'SnowflakeCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, auth_type: models.credentials.snowflake.SnowflakeAuthenticationType,
            schema: str, user: Union[str, NoneType] = None, target_name: str = ''default'',
            role: Union[str, NoneType] = None, database: Union[str, NoneType] = None,
            warehouse: Union[str, NoneType] = None, _refresh_token: Union[str, NoneType]
            = None, password: Union[str, NoneType] = None, _password: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, private_key: Union[str, NoneType] = None, _private_key:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            private_key_passphrase: Union[str, NoneType] = None, _private_key_passphrase:
            Union[models.encrypted_field.DataclassEncryptedField, NoneType] = None,
            created_at: Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None)'
        BigqueryCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          - schema
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - bigquery
            state:
              type: integer
            threads:
              type: integer
            schema:
              type: string
            target_name:
              type: string
              default: default
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            username:
              oneOf:
              - type: string
              - type: 'null'
            has_refresh_token:
              oneOf:
              - type: boolean
              - type: 'null'
          additionalProperties: false
          description: 'BigqueryCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, schema: str, target_name: str = ''default'',
            created_at: Union[datetime.datetime, NoneType] = None, updated_at: Union[datetime.datetime,
            NoneType] = None, username: Union[str, NoneType] = None, _refresh_token:
            Union[str, NoneType] = None, has_refresh_token: Union[bool, NoneType]
            = None)'
        DbtAdapterCredentials:
          type: object
          required:
          - account_id
          - type
          - state
          - threads
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              oneOf:
              - type: integer
              - type: 'null'
            type:
              type: string
              enum:
              - adapter
            state:
              type: integer
            threads:
              type: integer
            adapter_id:
              oneOf:
              - type: integer
              - type: 'null'
            credential_details:
              oneOf:
              - $ref: '#/definitions/BaseSparkAdapterCredentialsSchema'
              - $ref: '#/definitions/DatabricksCredentialsSchema'
              - $ref: '#/definitions/TrinoCredentialsSchema'
              - type: 'null'
            unencrypted_credential_details:
              oneOf:
              - type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: integer
              - type: 'null'
            target_name:
              type: string
              default: default
            adapter:
              oneOf:
              - $ref: '#/definitions/DbtAdapter'
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapterCredentials(id: Union[int, NoneType], account_id:
            int, project_id: Union[int, NoneType], type: models.connection.common.ConnectionType,
            state: int, threads: int, adapter_id: Union[int, NoneType], credential_details:
            Union[schemas.adapters.base_spark.BaseSparkAdapterCredentialsSchema, schemas.adapters.databricks.credentials_schema.DatabricksCredentialsSchema,
            schemas.adapters.trino.credentials_schema.TrinoCredentialsSchema, NoneType]
            = None, _credential_details: Union[models.encrypted_field.DataclassEncryptedField,
            NoneType] = None, unencrypted_credential_details: Union[Dict[str, Union[str,
            int]], NoneType] = None, target_name: str = ''default'', adapter: ''Optional[models.dbt_adapter.DbtAdapter]''
            = None, created_at: Union[datetime.datetime, NoneType] = None, updated_at:
            Union[datetime.datetime, NoneType] = None)'
        BaseSparkAdapterCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/BaseSparkAdapterCredentialFields'
              default:
                token:
                  metadata:
                    label: Token
                    description: Personalized user token.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                threads:
                  metadata:
                    label: Threads
                    description: The number of threads to use for your jobs.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 6
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'BaseSparkAdapterCredentialsSchema(fields: schemas.adapters.base_spark.BaseSparkAdapterCredentialFields
            = BaseSparkAdapterCredentialFields(token=TextField(metadata=TextFieldMetadata(label=''Token'',
            description=''Personalized user token.'', field_type=''text'', encrypt=True,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), threads=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for your jobs.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6)), field_order: Union[List[str], NoneType] = None)'
        BaseSparkAdapterCredentialFields:
          type: object
          required: []
          properties:
            token:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Token
                  description: Personalized user token.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            threads:
              oneOf:
              - $ref: '#/definitions/LegacyIntegerField'
              - type: 'null'
              default:
                metadata:
                  label: Threads
                  description: The number of threads to use for your jobs.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 6
          additionalProperties: false
          description: 'BaseSparkAdapterCredentialFields(token: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Token'', description=''Personalized
            user token.'', field_type=''text'', encrypt=True, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), threads: Union[schemas.fields.IntegerField.LegacyIntegerField,
            NoneType] = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for your jobs.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6))'
        DatabricksCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/DatabricksCredentialFields'
              default:
                token:
                  metadata:
                    label: Token
                    description: Personalized user token.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                catalog:
                  metadata:
                    label: Catalog
                    description: Catalog name if Unity Catalog is enabled in your
                      Databricks workspace.  Only available in dbt version 1.1 and
                      later.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: ''
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'DatabricksCredentialsSchema(fields: schemas.adapters.databricks.credentials_schema.DatabricksCredentialFields
            = DatabricksCredentialFields(token=TextField(metadata=TextFieldMetadata(label=''Token'',
            description=''Personalized user token.'', field_type=''text'', encrypt=True,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), catalog=TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''Catalog name if Unity Catalog is enabled in your Databricks
            workspace.  Only available in dbt version 1.1 and later.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value='''')), field_order:
            Union[List[str], NoneType] = None)'
        DatabricksCredentialFields:
          type: object
          required: []
          properties:
            token:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Token
                  description: Personalized user token.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            catalog:
              oneOf:
              - $ref: '#/definitions/TextField'
              - type: 'null'
              default:
                metadata:
                  label: Catalog
                  description: Catalog name if Unity Catalog is enabled in your Databricks
                    workspace.  Only available in dbt version 1.1 and later.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: ''
          additionalProperties: false
          description: 'DatabricksCredentialFields(token: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Token'', description=''Personalized
            user token.'', field_type=''text'', encrypt=True, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), catalog: Union[schemas.fields.TextField.TextField,
            NoneType] = TextField(metadata=TextFieldMetadata(label=''Catalog'', description=''Catalog
            name if Unity Catalog is enabled in your Databricks workspace.  Only available
            in dbt version 1.1 and later.'', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''''))'
        TrinoCredentialsSchema:
          type: object
          required: []
          properties:
            fields:
              $ref: '#/definitions/TrinoCredentialFields'
              default:
                user:
                  metadata:
                    label: User
                    description: The username of the account to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                password:
                  metadata:
                    label: Password
                    description: The password for the account to connect to.
                    field_type: text
                    encrypt: true
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                database:
                  metadata:
                    label: Catalog
                    description: The catalog to connect to.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                schema:
                  metadata:
                    label: Schema
                    description: User's schema.
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: true
                      pattern: null
                  value: ''
                target_name:
                  metadata:
                    label: Target Name
                    description: ''
                    field_type: text
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      min_length: null
                      max_length: null
                      required: false
                      pattern: null
                  value: default
                threads:
                  metadata:
                    label: Threads
                    description: The number of threads to use for dbt operations.
                    field_type: number
                    encrypt: false
                    depends_on: null
                    overrideable: false
                    validation:
                      required: true
                  value: 6
            field_order:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
          additionalProperties: false
          description: 'TrinoCredentialsSchema(fields: schemas.adapters.trino.credentials_schema.TrinoCredentialFields
            = TrinoCredentialFields(user=TextField(metadata=TextFieldMetadata(label=''User'',
            description=''The username of the account to connect to.'', field_type=''text'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), password=TextField(metadata=TextFieldMetadata(label=''Password'',
            description=''The password for the account to connect to.'', field_type=''text'',
            encrypt=True, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), database=TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''The catalog to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema=TextField(metadata=TextFieldMetadata(label=''Schema'',
            description="User''s schema.", field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), target_name=TextField(metadata=TextFieldMetadata(label=''Target
            Name'', description='''', field_type=''text'', encrypt=False, depends_on=None,
            overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=False, pattern=None)), value=''default''), threads=LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for dbt operations.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6)), field_order: Union[List[str], NoneType] = None)'
        TrinoCredentialFields:
          type: object
          required: []
          properties:
            user:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: User
                  description: The username of the account to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            password:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Password
                  description: The password for the account to connect to.
                  field_type: text
                  encrypt: true
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            database:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Catalog
                  description: The catalog to connect to.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            schema:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Schema
                  description: User's schema.
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: true
                    pattern: null
                value: ''
            target_name:
              $ref: '#/definitions/TextField'
              default:
                metadata:
                  label: Target Name
                  description: ''
                  field_type: text
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    min_length: null
                    max_length: null
                    required: false
                    pattern: null
                value: default
            threads:
              $ref: '#/definitions/LegacyIntegerField'
              default:
                metadata:
                  label: Threads
                  description: The number of threads to use for dbt operations.
                  field_type: number
                  encrypt: false
                  depends_on: null
                  overrideable: false
                  validation:
                    required: true
                value: 6
          additionalProperties: false
          description: 'TrinoCredentialFields(user: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''User'', description=''The
            username of the account to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), password:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Password'',
            description=''The password for the account to connect to.'', field_type=''text'',
            encrypt=True, depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), database:
            schemas.fields.TextField.TextField = TextField(metadata=TextFieldMetadata(label=''Catalog'',
            description=''The catalog to connect to.'', field_type=''text'', encrypt=False,
            depends_on=None, overrideable=False, validation=GenericTextValidation(min_length=None,
            max_length=None, required=True, pattern=None)), value=''''), schema: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Schema'', description="User''s
            schema.", field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=True,
            pattern=None)), value=''''), target_name: schemas.fields.TextField.TextField
            = TextField(metadata=TextFieldMetadata(label=''Target Name'', description='''',
            field_type=''text'', encrypt=False, depends_on=None, overrideable=False,
            validation=GenericTextValidation(min_length=None, max_length=None, required=False,
            pattern=None)), value=''default''), threads: schemas.fields.IntegerField.LegacyIntegerField
            = LegacyIntegerField(metadata=IntegerFieldMetadata(label=''Threads'',
            description=''The number of threads to use for dbt operations.'', field_type=''number'',
            encrypt=False, depends_on=None, overrideable=False, validation=GenericIntegerValidation(required=True)),
            value=6))'
        DbtAdapter:
          type: object
          required:
          - account_id
          - project_id
          - created_by_id
          - adapter_version
          - metadata_json
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            account_id:
              type: integer
            project_id:
              type: integer
            created_by_id:
              type: integer
            adapter_version:
              type: string
              enum:
              - apache_spark_v0
              - databricks_spark_v0
              - databricks_v0
              - trino_v0
              - snowflake_v0
              - bigquery_v0
              - postgres_v0
              - redshift_v0
            metadata_json:
              type: object
              additionalProperties:
                type: string
            state:
              type: integer
              default: 1
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: 'DbtAdapter(id: Union[int, NoneType], account_id: int, project_id:
            int, created_by_id: int, adapter_version: schemas.adapter.DbtAdapterVersion,
            metadata_json: Dict[str, str], state: int = 1, created_at: Union[datetime.datetime,
            NoneType] = None, updated_at: Union[datetime.datetime, NoneType] = None)'
        CustomEnvironmentVariable:
          type: object
          required:
          - account_id
          - project_id
          - name
          - type
          properties:
            account_id:
              type: integer
            project_id:
              type: integer
            name:
              type: string
            type:
              type: string
              enum:
              - project
              - environment
              - job
              - user
            state:
              oneOf:
              - type: integer
              - type: 'null'
              default: 1
            user_id:
              oneOf:
              - type: integer
              - type: 'null'
            environment_id:
              oneOf:
              - type: integer
              - type: 'null'
            job_definition_id:
              oneOf:
              - type: integer
              - type: 'null'
            environment:
              oneOf:
              - $ref: '#/definitions/EnvironmentV3'
              - type: 'null'
            raw_value:
              oneOf:
              - type: string
              - type: 'null'
            display_value:
              oneOf:
              - type: string
              - type: 'null'
            id:
              oneOf:
              - type: integer
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
          additionalProperties: false
          description: "\n    This model represents a user-defined environment variable,\
            \ which can be\n    set on the account, job or user-level and leveraged\
            \ in both the IDE and\n    scheduled Runs.\n    "
      $schema: http://json-schema.org/draft-07/schema#
    RepositoryV2:
      type: object
      required:
      - id
      - account_id
      - full_name
      - remote_url
      - remote_backend
      - git_clone_strategy
      - deploy_key_id
      - github_installation_id
      - pull_request_url_template
      - state
      properties:
        id:
          oneOf:
          - type: 'null'
          - type: integer
        account_id:
          type: integer
        project_id:
          oneOf:
          - type: 'null'
          - type: integer
        full_name:
          oneOf:
          - type: 'null'
          - type: string
        remote_url:
          oneOf:
          - type: 'null'
          - allOf:
            - type: string
            - pattern: ^\S+[/:](?P<repo>[^\s/]+?)(?:\.git)?$
        remote_backend:
          oneOf:
          - {}
          - {}
          - {}
          - {}
          - type: 'null'
        git_clone_strategy:
          oneOf:
          - {}
          - {}
          - {}
          - {}
        deploy_key: {}
        deploy_key_id:
          oneOf:
          - type: 'null'
          - type: integer
        repository_credentials_id:
          oneOf:
          - type: 'null'
          - type: integer
        github_installation_id:
          oneOf:
          - type: 'null'
          - type: integer
        github_webhook_id:
          oneOf:
          - type: 'null'
          - type: integer
        pull_request_url_template:
          oneOf:
          - type: 'null'
          - type: string
        state:
          type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        git_provider_id:
          oneOf:
          - type: 'null'
          - type: integer
      additionalProperties: false
      definitions: {}
      $schema: http://json-schema.org/draft-07/schema#
    RepositoryV2Enveloped:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/RepositoryV2'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    RepositoryV2Request:
      type: object
      required:
      - id
      - account_id
      - full_name
      - remote_url
      - remote_backend
      - git_clone_strategy
      - deploy_key_id
      - github_installation_id
      - pull_request_url_template
      - state
      properties:
        id:
          oneOf:
          - type: 'null'
          - type: integer
        account_id:
          type: integer
        project_id:
          oneOf:
          - type: 'null'
          - type: integer
        full_name:
          oneOf:
          - type: 'null'
          - type: string
        remote_url:
          oneOf:
          - type: 'null'
          - allOf:
            - type: string
            - pattern: ^\S+[/:](?P<repo>[^\s/]+?)(?:\.git)?$
        remote_backend:
          oneOf:
          - {}
          - {}
          - {}
          - {}
          - type: 'null'
        git_clone_strategy:
          oneOf:
          - {}
          - {}
          - {}
          - {}
        deploy_key: {}
        deploy_key_id:
          oneOf:
          - type: 'null'
          - type: integer
        repository_credentials_id:
          oneOf:
          - type: 'null'
          - type: integer
        github_installation_id:
          oneOf:
          - type: 'null'
          - type: integer
        github_webhook_id:
          oneOf:
          - type: 'null'
          - type: integer
        pull_request_url_template:
          oneOf:
          - type: 'null'
          - type: string
        state:
          type: integer
        git_provider_id:
          oneOf:
          - type: 'null'
          - type: integer
      additionalProperties: false
      definitions: {}
      $schema: http://json-schema.org/draft-07/schema#
    Run:
      type: object
      required:
      - account_id
      - environment_id
      - project_id
      - job_definition_id
      properties:
        id:
          oneOf:
          - type: integer
          - type: 'null'
        trigger_id:
          oneOf:
          - type: integer
          - type: 'null'
        account_id:
          type: integer
        environment_id:
          type: integer
        project_id:
          type: integer
        job_definition_id:
          type: integer
        status:
          type: integer
          default: 1
        dbt_version:
          type: string
          default: 1.5.0-latest
        git_branch:
          oneOf:
          - type: string
          - type: 'null'
        git_sha:
          oneOf:
          - type: string
          - type: 'null'
        status_message:
          oneOf:
          - type: string
          - type: 'null'
        owner_thread_id:
          oneOf:
          - type: string
          - type: 'null'
        executed_by_thread_id:
          oneOf:
          - type: string
          - type: 'null'
        deferring_run_id:
          oneOf:
          - type: integer
          - type: 'null'
        artifacts_saved:
          type: boolean
          default: false
        artifact_s3_path:
          oneOf:
          - type: string
          - type: 'null'
        has_docs_generated:
          type: boolean
          default: false
        has_sources_generated:
          type: boolean
          default: false
        notifications_sent:
          type: boolean
          default: false
        blocked_by:
          type: array
          items:
            type: integer
          default: []
        scribe_enabled:
          type: boolean
          default: false
        created_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
          readOnly: true
        updated_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
          readOnly: true
        dequeued_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
          readOnly: true
        started_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
          readOnly: true
        finished_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
          readOnly: true
        last_checked_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
          readOnly: true
        last_heartbeat_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
          readOnly: true
        should_start_at:
          oneOf:
          - type: string
            format: date-time
          - type: 'null'
          readOnly: true
        trigger:
          oneOf:
          - $ref: '#/definitions/RunTrigger'
          - type: 'null'
          readOnly: true
        job:
          oneOf:
          - type: object
          - type: 'null'
          readOnly: true
        environment:
          oneOf:
          - type: object
          - type: 'null'
          readOnly: true
        run_steps:
          oneOf:
          - type: array
            items:
              $ref: '#/definitions/RunStep'
          - type: 'null'
          default: []
          readOnly: true
        status_humanized:
          oneOf:
          - type: string
          - type: 'null'
          readOnly: true
        in_progress:
          oneOf:
          - type: boolean
          - type: 'null'
          readOnly: true
        is_complete:
          oneOf:
          - type: boolean
          - type: 'null'
          readOnly: true
        is_success:
          oneOf:
          - type: boolean
          - type: 'null'
          readOnly: true
        is_error:
          oneOf:
          - type: boolean
          - type: 'null'
          readOnly: true
        is_cancelled:
          oneOf:
          - type: boolean
          - type: 'null'
          readOnly: true
        duration:
          oneOf:
          - type: string
          - type: 'null'
          readOnly: true
        queued_duration:
          oneOf:
          - type: string
          - type: 'null'
          readOnly: true
        run_duration:
          oneOf:
          - type: string
          - type: 'null'
          readOnly: true
        duration_humanized:
          oneOf:
          - type: string
          - type: 'null'
          readOnly: true
        queued_duration_humanized:
          oneOf:
          - type: string
          - type: 'null'
          readOnly: true
        run_duration_humanized:
          oneOf:
          - type: string
          - type: 'null'
          readOnly: true
        created_at_humanized:
          oneOf:
          - type: string
          - type: 'null'
          readOnly: true
        finished_at_humanized:
          oneOf:
          - type: string
          - type: 'null'
          readOnly: true
        job_id:
          oneOf:
          - type: integer
          - type: 'null'
          readOnly: true
        is_running:
          oneOf:
          - type: boolean
          - type: 'null'
      additionalProperties: false
      description: "\n    Represents a run of a job definition.\n    "
      definitions:
        RunTrigger:
          type: object
          required:
          - cause
          - job_definition_id
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            cause:
              type: string
            job_definition_id:
              type: integer
            git_branch:
              oneOf:
              - type: string
              - type: 'null'
            git_sha:
              oneOf:
              - type: string
              - type: 'null'
            azure_pull_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            github_pull_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            gitlab_merge_request_id:
              oneOf:
              - type: integer
              - type: 'null'
            schema_override:
              oneOf:
              - type: string
              - type: 'null'
            dbt_version_override:
              oneOf:
              - type: string
              - type: 'null'
            threads_override:
              oneOf:
              - type: integer
              - type: 'null'
            target_name_override:
              oneOf:
              - type: string
              - type: 'null'
            generate_docs_override:
              oneOf:
              - type: boolean
              - type: 'null'
            timeout_seconds_override:
              oneOf:
              - type: integer
              - type: 'null'
            steps_override:
              oneOf:
              - type: array
                items:
                  type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            cause_humanized:
              oneOf:
              - type: string
              - type: 'null'
            job:
              oneOf:
              - type: object
              - type: 'null'
          additionalProperties: false
          description: 'RunTrigger(id: Union[int, NoneType], cause: str, job_definition_id:
            int, git_branch: Union[str, NoneType] = None, git_sha: Union[str, NoneType]
            = None, azure_pull_request_id: Union[int, NoneType] = None, github_pull_request_id:
            Union[int, NoneType] = None, gitlab_merge_request_id: Union[int, NoneType]
            = None, schema_override: Union[str, NoneType] = None, dbt_version_override:
            Union[str, NoneType] = None, threads_override: Union[int, NoneType] =
            None, target_name_override: Union[str, NoneType] = None, generate_docs_override:
            Union[bool, NoneType] = None, timeout_seconds_override: Union[int, NoneType]
            = None, steps_override: Union[List[str], NoneType] = None, created_at:
            Union[datetime.datetime, NoneType] = None, cause_humanized: Union[str,
            NoneType] = None, job: Union[Dict[str, Any], NoneType] = None)'
        RunStep:
          type: object
          required:
          - run_id
          - account_id
          - index
          - status
          - name
          properties:
            id:
              oneOf:
              - type: integer
              - type: 'null'
            run_id:
              type: integer
            account_id:
              type: integer
            index:
              type: integer
            status:
              type: integer
            name:
              type: string
            logs:
              oneOf:
              - type: string
              - type: 'null'
            debug_logs:
              oneOf:
              - type: string
              - type: 'null'
            log_location:
              oneOf:
              - type: string
                enum:
                - legacy
                - s3
                - db
                - empty
              - type: 'null'
              default: db
            log_path:
              oneOf:
              - type: string
              - type: 'null'
            debug_log_path:
              oneOf:
              - type: string
              - type: 'null'
            log_archive_type:
              oneOf:
              - type: string
              - type: 'null'
              default: db_flushed
            truncated_debug_logs:
              oneOf:
              - type: string
              - type: 'null'
            created_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            updated_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            started_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            finished_at:
              oneOf:
              - type: string
                format: date-time
              - type: 'null'
            status_color:
              oneOf:
              - type: string
              - type: 'null'
            status_humanized:
              oneOf:
              - type: string
              - type: 'null'
            duration:
              oneOf:
              - type: string
              - type: 'null'
            duration_humanized:
              oneOf:
              - type: string
              - type: 'null'
          additionalProperties: false
          description: 'RunStep(id: Union[int, NoneType], run_id: int, account_id:
            int, index: int, status: int, name: str, logs: Union[str, NoneType] =
            None, debug_logs: Union[str, NoneType] = None, log_location: Union[models.run_step.RunStepLogLocation,
            NoneType] = <RunStepLogLocation.db: ''db''>, log_path: Union[str, NoneType]
            = None, debug_log_path: Union[str, NoneType] = None, log_archive_type:
            Union[str, NoneType] = <RunStepLogArchiveType.db: ''db_flushed''>, truncated_debug_logs:
            Union[str, NoneType] = None, created_at: Union[datetime.datetime, NoneType]
            = None, updated_at: Union[datetime.datetime, NoneType] = None, started_at:
            Union[datetime.datetime, NoneType] = None, finished_at: Union[datetime.datetime,
            NoneType] = None, status_color: Union[str, NoneType] = None, status_humanized:
            Union[str, NoneType] = None, duration: Union[str, NoneType] = None, duration_humanized:
            Union[str, NoneType] = None)'
      $schema: http://json-schema.org/draft-07/schema#
    RunEnveloped:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Run'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    Status:
      type: object
      properties:
        code:
          type: integer
          default: 200
        is_success:
          type: boolean
        user_message:
          type: string
        developer_message:
          type: string
      required:
      - developer_message
      - is_success
      - user_message
    TriggerRunRequestRequest:
      type: object
      required:
      - cause
      properties:
        cause:
          type: string
        git_sha:
          oneOf:
          - type: string
          - type: 'null'
        git_branch:
          oneOf:
          - type: string
          - type: 'null'
        github_pull_request_id:
          oneOf:
          - type: integer
          - type: 'null'
        schema_override:
          oneOf:
          - type: string
          - type: 'null'
        dbt_version_override:
          oneOf:
          - type: string
          - type: 'null'
        threads_override:
          oneOf:
          - type: integer
          - type: 'null'
        target_name_override:
          oneOf:
          - type: string
          - type: 'null'
        generate_docs_override:
          oneOf:
          - type: boolean
          - type: 'null'
        timeout_seconds_override:
          oneOf:
          - type: integer
          - type: 'null'
        steps_override:
          oneOf:
          - type: array
            items:
              type: string
          - type: 'null'
      additionalProperties: true
      description: "\n    Represents a request to trigger a run of a job definition.\n\
        \    "
      definitions: {}
      $schema: http://json-schema.org/draft-07/schema#
    User:
      type: object
      required:
      - id
      - first_name
      - last_name
      - email
      - is_staff
      - github_connected
      - github_username
      - gitlab_connected
      - gitlab_username
      - azure_active_directory_connected
      - azure_active_directory_username
      - email_connected
      - email_verified
      - slack_connected
      - enterprise_connected
      properties:
        id:
          oneOf:
          - type: 'null'
          - type: integer
        auth0_user_id:
          oneOf:
          - type: 'null'
          - type: string
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        is_staff:
          type: boolean
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        last_login:
          oneOf:
          - type: 'null'
          - type: string
            format: date-time
        github_connected:
          oneOf:
          - type: 'null'
          - type: boolean
        github_token_retrieval_failure:
          oneOf:
          - type: 'null'
          - type: boolean
        github_access_token:
          oneOf:
          - type: 'null'
          - type: string
        github_username:
          oneOf:
          - type: 'null'
          - type: string
        gitlab_connected:
          oneOf:
          - type: 'null'
          - type: boolean
        gitlab_token_retrieval_failure:
          oneOf:
          - type: 'null'
          - type: boolean
        gitlab_access_token:
          oneOf:
          - type: 'null'
          - type: string
        gitlab_username:
          oneOf:
          - type: 'null'
          - type: string
        azure_active_directory_connected:
          oneOf:
          - type: 'null'
          - type: boolean
        azure_active_directory_access_token:
          oneOf:
          - type: 'null'
          - type: string
        azure_active_directory_username:
          oneOf:
          - type: 'null'
          - type: string
        azure_active_directory_token_retrieval_failure:
          oneOf:
          - type: 'null'
          - type: boolean
        email_connected:
          oneOf:
          - type: 'null'
          - type: boolean
        email_verified:
          type: boolean
        slack_connected:
          oneOf:
          - type: 'null'
          - type: boolean
        slack_team_name:
          oneOf:
          - type: 'null'
          - type: string
        slack_avatar_url:
          oneOf:
          - type: 'null'
          - type: string
        slack_access_token:
          oneOf:
          - type: 'null'
          - type: string
        enterprise_connected:
          oneOf:
          - type: 'null'
          - type: boolean
        enterprise_authentication_method:
          oneOf:
          - type: 'null'
          - type: string
        enterprise_idp_attributes:
          oneOf:
          - type: 'null'
          - {}
        auth_provider_infos:
          oneOf:
          - type: 'null'
          - {}
        api_key:
          type: string
        password:
          allOf:
          - minLength: 9
          - type: string
        confirm_password:
          type: string
        permissions: {}
        licenses: {}
        user_feature_flags: {}
      additionalProperties: false
      definitions: {}
      $schema: http://json-schema.org/draft-07/schema#
    UserEnveloped:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/User'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    UserRequest:
      type: object
      required:
      - id
      - first_name
      - last_name
      - email
      - is_staff
      - github_connected
      - github_username
      - gitlab_connected
      - gitlab_username
      - azure_active_directory_connected
      - azure_active_directory_username
      - email_connected
      - email_verified
      - slack_connected
      - enterprise_connected
      properties:
        id:
          oneOf:
          - type: 'null'
          - type: integer
        auth0_user_id:
          oneOf:
          - type: 'null'
          - type: string
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        is_staff:
          type: boolean
        is_active:
          type: boolean
        last_login:
          oneOf:
          - type: 'null'
          - type: string
            format: date-time
        github_connected:
          oneOf:
          - type: 'null'
          - type: boolean
        github_token_retrieval_failure:
          oneOf:
          - type: 'null'
          - type: boolean
        github_access_token:
          oneOf:
          - type: 'null'
          - type: string
        github_username:
          oneOf:
          - type: 'null'
          - type: string
        gitlab_connected:
          oneOf:
          - type: 'null'
          - type: boolean
        gitlab_token_retrieval_failure:
          oneOf:
          - type: 'null'
          - type: boolean
        gitlab_access_token:
          oneOf:
          - type: 'null'
          - type: string
        gitlab_username:
          oneOf:
          - type: 'null'
          - type: string
        azure_active_directory_connected:
          oneOf:
          - type: 'null'
          - type: boolean
        azure_active_directory_access_token:
          oneOf:
          - type: 'null'
          - type: string
        azure_active_directory_username:
          oneOf:
          - type: 'null'
          - type: string
        azure_active_directory_token_retrieval_failure:
          oneOf:
          - type: 'null'
          - type: boolean
        email_connected:
          oneOf:
          - type: 'null'
          - type: boolean
        email_verified:
          type: boolean
        slack_connected:
          oneOf:
          - type: 'null'
          - type: boolean
        slack_team_name:
          oneOf:
          - type: 'null'
          - type: string
        slack_avatar_url:
          oneOf:
          - type: 'null'
          - type: string
        slack_access_token:
          oneOf:
          - type: 'null'
          - type: string
        enterprise_connected:
          oneOf:
          - type: 'null'
          - type: boolean
        enterprise_authentication_method:
          oneOf:
          - type: 'null'
          - type: string
        enterprise_idp_attributes:
          oneOf:
          - type: 'null'
          - {}
        auth_provider_infos:
          oneOf:
          - type: 'null'
          - {}
        api_key:
          type: string
        password:
          allOf:
          - minLength: 9
          - type: string
        confirm_password:
          type: string
        permissions: {}
        licenses: {}
        user_feature_flags: {}
      additionalProperties: false
      definitions: {}
      $schema: http://json-schema.org/draft-07/schema#
  securitySchemes:
    BearerAuthentication:
      type: http
      scheme: bearer
      bearerFormat: Bearer
servers:
- url: https://cloud.getdbt.com/
  description: Production (US)
- url: https://emea.dbt.com/
  description: Production (Europe)
- url: https://au.dbt.com/
  description: Production (AU)
