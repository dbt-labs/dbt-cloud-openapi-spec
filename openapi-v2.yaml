openapi: 3.0.3
info:
  title: dbt Cloud API v2
  version: 2.0.0
  description: "# How to use this API\n\nThe dbt Cloud API v2 contains endpoints for\
    \ enqueuing runs from a job, polling for run progress,\nand downloading artifacts\
    \ after jobs have completed running. For operational endpoints to\ncreate, modify,\
    \ and delete _objects_ in dbt Cloud, consider using [API v3](/dbt-cloud/api-v3#/)\n\
    \nThe API docs are generated from an openapi spec defined in the\n[dbt-cloud-openapi-spec](https://github.com/dbt-labs/dbt-cloud-openapi-spec/blob/master/openapi-v2.yaml)\n\
    repository. If you find issues in these docs or have questions about using the\
    \ dbt Cloud\nAPI, please open an issue in the dbt-cloud-openapi-spec repo or contact\
    \ support@getdbt.com.\n\n# Authentication\n\nTo authenticate an application with\
    \ the dbt Cloud API, navigate to the\nAPI Settings page in your [dbt Cloud profile](https://cloud.getdbt.com/#/profile/api/).\n\
    If you cannot access this page, confirm that your dbt Cloud account has access\
    \ to the API,\nand that you are using the hosted version of dbt Cloud. If dbt\
    \ Cloud is running inside of a VPC\nin an Enterprise account, contact your account\
    \ manager for help finding your API key.\n\n## Token Auth\n\nOnce you've found\
    \ your API key, use it in the Authorization header of requests to the dbt Cloud\
    \ API.\nBe sure to include the `Token` prefix in the Authorization header, or\
    \ the request will fail with a\n\"401 Unauthorized\" error. Note: `Bearer` can\
    \ be used in place of `Token` in the Authorization header.\nBoth syntaxes are\
    \ equivalent.\n\n**Headers**\n```\nAccept: application/json\nAuthorization: Token\
    \ <your token>\n```\n\n## Example request\n\nThe following example will list the\
    \ Accounts that your token is authorized to access.\nBe sure to replace `<your\
    \ token>` in the Authorization header with your actual API token.\n\n```bash\n\
    curl --request GET \\\n  --url https://cloud.getdbt.com/api/v2/accounts/ \\\n\
    \  --header 'Content-Type: application/json' \\\n  --header 'Authorization: Token\
    \ <your token>'\n```\n\n&nbsp;  \n\n# Pagination\n\nAll top-level API resources\
    \ have support for bulk fetches via \"list\" API methods. These list\nAPI methods\
    \ accept `limit` and `offset` query parameters which can be used together to paginate\
    \ results.\n\nOffsets begin at 0.\n\nThe maximum limit for a single request is\
    \ 100.\n"
  termsOfService: https://www.getdbt.com/terms-of-service
  contact:
    email: support@getdbt.com
paths:
  /api/v2/accounts/{account_id}/billing/cards/:
    get:
      operationId: Retrieve Billing Card
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Billing
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
  /api/v2/accounts/{account_id}/connections/:
    get:
      operationId: List Connections
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Connections
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BaseConnectionEnveloped'
          description: ''
    post:
      operationId: Create Connection
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Connections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseConnectionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BaseConnectionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BaseConnectionRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BaseConnectionEnveloped'
          description: ''
  /api/v2/accounts/{account_id}/connections/{id}/:
    get:
      operationId: Retrieve Connection
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Connections
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseConnectionEnveloped'
          description: ''
    post:
      operationId: Update Connection
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Connections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseConnectionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BaseConnectionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BaseConnectionRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseConnectionEnveloped'
          description: ''
    delete:
      operationId: Destroy Connection
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Connections
      security:
      - BearerAuthentication: []
      responses:
        '204':
          description: No response body
  /api/v2/accounts/{account_id}/encryptions/:
    get:
      operationId: List Connection Encryptions
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: connection_id
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Connection Encryptions
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConnectionEncryptionEnveloped'
          description: ''
    post:
      operationId: Create Connection Encryption
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Connection Encryptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionEncryptionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConnectionEncryptionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConnectionEncryptionRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConnectionEncryptionEnveloped'
          description: ''
  /api/v2/accounts/{account_id}/encryptions/{id}/:
    get:
      operationId: Retrieve Connection Encryption
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: connection_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Connection Encryptions
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionEncryptionEnveloped'
          description: ''
    post:
      operationId: Update Connection Encryption
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Connection Encryptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionEncryptionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConnectionEncryptionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConnectionEncryptionRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionEncryptionEnveloped'
          description: ''
    delete:
      operationId: Destroy Connection Encryption
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: connection_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Connection Encryptions
      security:
      - BearerAuthentication: []
      responses:
        '204':
          description: No response body
  /api/v2/accounts/{account_id}/environments/:
    get:
      operationId: List Environments
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: dbt_version
        schema:
          type: string
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Environments
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnvironmentV2Enveloped'
          description: ''
    post:
      operationId: Create Environment
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Environments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentV2Request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EnvironmentV2Request'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EnvironmentV2Request'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnvironmentV2Enveloped'
          description: ''
  /api/v2/accounts/{account_id}/environments/{environment_id}/develop/:
    get:
      operationId: Retrieve Environments Develop
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: environment_id
        schema:
          type: integer
        required: true
      tags:
      - Environments
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
  /api/v2/accounts/{account_id}/environments/{id}/:
    get:
      operationId: Retrieve Environment
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: dbt_version
        schema:
          type: string
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Environments
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentV2Enveloped'
          description: ''
    post:
      operationId: Update Environment
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Environments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentV2Request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EnvironmentV2Request'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EnvironmentV2Request'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentV2Enveloped'
          description: ''
    delete:
      operationId: Destroy Environment
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: dbt_version
        schema:
          type: string
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Environments
      security:
      - BearerAuthentication: []
      responses:
        '204':
          description: No response body
  /api/v2/accounts/{account_id}/invites/:
    get:
      operationId: List Invites
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Invites
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
  /api/v2/accounts/{account_id}/invites/{id}/:
    get:
      operationId: Retrieve Invite
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Invites
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
    post:
      operationId: Create Invite
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Invites
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
  /api/v2/accounts/{account_id}/jobs/:
    get:
      operationId: List Jobs
      parameters:
      - in: query
        name: account__locked
        schema:
          type: boolean
      - in: query
        name: account__state
        schema:
          type: integer
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: deactivated
        schema:
          type: boolean
      - in: query
        name: environment__state
        schema:
          type: integer
      - in: query
        name: environment_id
        schema:
          type: integer
      - in: query
        name: id__gt
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: name__icontains
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: project__state
        schema:
          type: integer
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      - in: query
        name: triggers_schedule
        schema:
          type: boolean
      tags:
      - Jobs
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InternalJobDefinitionEnveloped'
          description: ''
    post:
      operationId: Create Job
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InternalJobDefinitionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InternalJobDefinitionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InternalJobDefinitionRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InternalJobDefinitionEnveloped'
          description: ''
  /api/v2/accounts/{account_id}/jobs/{job_id}/artifacts/{remainder}:
    get:
      operationId: Retrieve Job Artifact
      description: Given a job id and *a set of Run filters* return the latest matching
        artifact for that job.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: job_id
        schema:
          type: integer
        required: true
      - in: path
        name: remainder
        schema:
          type: string
        required: true
      tags:
      - Jobs
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
  /api/v2/accounts/{account_id}/jobs/{job_id}/run/:
    post:
      operationId: Trigger Job Run
      description: Use this endpoint to kick off a run for a job. When this endpoint
        returns a successful response, a new run will be enqueued for the account.
        Users can poll the Get run endpoint to poll the run until it completes. After
        the run has completed, users can use the Get run artifact endpoint to download
        artifacts generated by the run.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: job_id
        schema:
          type: integer
        required: true
      tags:
      - Jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TriggerRunRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TriggerRunRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TriggerRunRequestRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunEnveloped'
          description: ''
  /api/v2/accounts/{account_id}/jobs/{id}/:
    get:
      operationId: Retrieve Job
      parameters:
      - in: query
        name: account__locked
        schema:
          type: boolean
      - in: query
        name: account__state
        schema:
          type: integer
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: deactivated
        schema:
          type: boolean
      - in: query
        name: environment__state
        schema:
          type: integer
      - in: query
        name: environment_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: id__gt
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: name__icontains
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: project__state
        schema:
          type: integer
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      - in: query
        name: triggers_schedule
        schema:
          type: boolean
      tags:
      - Jobs
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalJobDefinitionEnveloped'
          description: ''
    post:
      operationId: Update Job
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InternalJobDefinitionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InternalJobDefinitionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InternalJobDefinitionRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalJobDefinitionEnveloped'
          description: ''
    delete:
      operationId: Destroy Job
      parameters:
      - in: query
        name: account__locked
        schema:
          type: boolean
      - in: query
        name: account__state
        schema:
          type: integer
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: deactivated
        schema:
          type: boolean
      - in: query
        name: environment__state
        schema:
          type: integer
      - in: query
        name: environment_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: id__gt
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: name__icontains
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: project__state
        schema:
          type: integer
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      - in: query
        name: triggers_schedule
        schema:
          type: boolean
      tags:
      - Jobs
      security:
      - BearerAuthentication: []
      responses:
        '204':
          description: No response body
  /api/v2/accounts/{account_id}/licenses/:
    get:
      operationId: List Account Licenses
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Licenses
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
  /api/v2/accounts/{account_id}/notifications/:
    get:
      operationId: List Notifications
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Notifications
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobNotificationSettingsEnveloped'
          description: ''
    post:
      operationId: Create Notification
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobNotificationSettingsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobNotificationSettingsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobNotificationSettingsRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobNotificationSettingsEnveloped'
          description: ''
  /api/v2/accounts/{account_id}/notifications/{id}/:
    get:
      operationId: Retrieve Notification
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Notifications
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobNotificationSettingsEnveloped'
          description: ''
    post:
      operationId: Update Notification
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobNotificationSettingsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobNotificationSettingsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobNotificationSettingsRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobNotificationSettingsEnveloped'
          description: ''
    delete:
      operationId: Destroy Notification
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Notifications
      security:
      - BearerAuthentication: []
      responses:
        '204':
          description: No response body
  /api/v2/accounts/{account_id}/permissions/{id}/:
    post:
      operationId: Create Permission
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Permissions
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
  /api/v2/accounts/{account_id}/projects/:
    get:
      operationId: List Projects
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: name__icontains
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: pk__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Projects
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectEnveloped'
          description: ''
    post:
      operationId: Create Project
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProjectEnveloped'
          description: ''
  /api/v2/accounts/{account_id}/projects/{id}/:
    get:
      operationId: Retrieve Project
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: name__icontains
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: pk__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Projects
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectEnveloped'
          description: ''
    post:
      operationId: Update Project
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectEnveloped'
          description: ''
    delete:
      operationId: Destroy Project
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: name__icontains
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: pk__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Projects
      security:
      - BearerAuthentication: []
      responses:
        '204':
          description: No response body
  /api/v2/accounts/{account_id}/repositories/:
    get:
      operationId: List Repositories
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: remote_url
        schema:
          type: string
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Repositories
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RepositoryV2Enveloped'
          description: ''
    post:
      operationId: Create Repository
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Repositories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepositoryV2Request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RepositoryV2Request'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RepositoryV2Request'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RepositoryV2Enveloped'
          description: ''
  /api/v2/accounts/{account_id}/repositories/{id}/:
    get:
      operationId: Retrieve Repository
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: remote_url
        schema:
          type: string
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Repositories
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoryV2Enveloped'
          description: ''
    delete:
      operationId: Destroy Repository
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: remote_url
        schema:
          type: string
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Repositories
      security:
      - BearerAuthentication: []
      responses:
        '204':
          description: No response body
  /api/v2/accounts/{account_id}/runs/:
    get:
      operationId: List Runs
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: created_at__range
        schema:
          type: array
      - in: query
        name: dbt_version
        schema:
          type: string
      - in: query
        name: dbt_version__in
        schema:
          type: array
      - in: query
        name: deferring_run_id
        schema:
          type: integer
      - in: query
        name: environment_id
        schema:
          type: integer
      - in: query
        name: finished_at__range
        schema:
          type: array
      - in: query
        name: has_docs_generated
        schema:
          type: boolean
      - in: query
        name: has_sources_generated
        schema:
          type: boolean
      - in: query
        name: id__gt
        schema:
          type: integer
      - in: query
        name: job_definition_id
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      - in: query
        name: status
        schema:
          type: integer
      - in: query
        name: status__in
        schema:
          type: array
      tags:
      - Runs
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RunEnveloped'
          description: ''
  /api/v2/accounts/{account_id}/runs/{id}/:
    get:
      operationId: Retrieve Run
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: created_at__range
        schema:
          type: array
      - in: query
        name: dbt_version
        schema:
          type: string
      - in: query
        name: dbt_version__in
        schema:
          type: array
      - in: query
        name: deferring_run_id
        schema:
          type: integer
      - in: query
        name: environment_id
        schema:
          type: integer
      - in: query
        name: finished_at__range
        schema:
          type: array
      - in: query
        name: has_docs_generated
        schema:
          type: boolean
      - in: query
        name: has_sources_generated
        schema:
          type: boolean
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: id__gt
        schema:
          type: integer
      - in: query
        name: job_definition_id
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      - in: query
        name: status
        schema:
          type: integer
      - in: query
        name: status__in
        schema:
          type: array
      tags:
      - Runs
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunEnveloped'
          description: ''
  /api/v2/accounts/{account_id}/runs/{run_id}/artifacts/:
    get:
      operationId: List Run Artifacts
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: run_id
        schema:
          type: integer
        required: true
      tags:
      - Runs
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
  /api/v2/accounts/{account_id}/runs/{run_id}/artifacts/{remainder}:
    get:
      operationId: Retrieve Run Artifact
      description: Use this endpoint to fetch artifacts from a completed run. Once
        a run has completed, you can use this endpoint to download the `manifest.json`,
        run `results.json` or `catalog.json` files from dbt Cloud. These artifacts
        contain information about the models in your dbt project, timing information
        around their execution, and a status message indicating the result of the
        model build. By default, this endpoint returns artifacts from the last step
        in the run. To list artifacts from other steps in the run, use the step query
        parameter described below.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: remainder
        schema:
          type: string
        required: true
      - in: path
        name: run_id
        schema:
          type: integer
        required: true
      - in: query
        name: step
        schema:
          type: integer
        description: The index of the Step in the Run to query for artifacts. The
          first step in the run has the index `1`. If the `step` parameter is omitted,
          then this endpoint will return the artifacts compiled for the last step
          in the run.
      tags:
      - Runs
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
  /api/v2/accounts/{account_id}/runs/{run_id}/cancel/:
    post:
      operationId: Cancel Run
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: run_id
        schema:
          type: integer
        required: true
      tags:
      - Runs
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
  /api/v2/accounts/{account_id}/steps/{id}/:
    get:
      operationId: Retrieve Run Step
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Runs
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
  /api/v2/accounts/{account_id}/users/:
    get:
      operationId: List Users
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Users
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
  /api/v2/notifications/unsubscribe/:
    post:
      operationId: Unsubscribe from Notifications
      tags:
      - Notifications
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Defaults'
          description: ''
  /api/v2/users/{id}/:
    get:
      operationId: Retrieve User
      parameters:
      - in: query
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Users
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserEnveloped'
          description: ''
    post:
      operationId: Update User
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserEnveloped'
          description: ''
components:
  schemas:
    BaseConnection:
      type: object
      required:
      - id
      - account_id
      - name
      - type
      - state
      properties:
        id:
          oneOf:
          - type: 'null'
          - type: integer
        account_id:
          type: integer
        dbt_project_id:
          type: integer
        created_by_id:
          oneOf:
          - type: 'null'
          - type: integer
        created_by_service_token_id:
          oneOf:
          - type: 'null'
          - type: integer
        name:
          allOf:
          - type: string
          - minLength: 1
            maxLength: 255
        type:
          type: string
        state:
          type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      additionalProperties: false
      definitions: {}
      $schema: http://json-schema.org/draft-07/schema#
    BaseConnectionEnveloped:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/BaseConnection'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    BaseConnectionRequest:
      type: object
      required:
      - id
      - account_id
      - name
      - type
      - state
      properties:
        id:
          oneOf:
          - type: 'null'
          - type: integer
        account_id:
          type: integer
        dbt_project_id:
          type: integer
        created_by_id:
          oneOf:
          - type: 'null'
          - type: integer
        created_by_service_token_id:
          oneOf:
          - type: 'null'
          - type: integer
        name:
          allOf:
          - type: string
          - minLength: 1
            maxLength: 255
        type:
          type: string
        state:
          type: integer
      additionalProperties: false
      definitions: {}
      $schema: http://json-schema.org/draft-07/schema#
    BaseConnectionV3:
      type: object
      properties:
        id:
          type: integer
        account_id:
          type: integer
        project_id:
          type: integer
        name:
          type: string
        created_by_id:
          type: integer
        created_by_service_token_id:
          type: integer
        state:
          type: integer
        private_link_endpoint_id:
          type: string
      required:
      - account_id
      - name
      - project_id
      - state
    BaseConnectionV3Request:
      type: object
      properties:
        id:
          type: integer
        account_id:
          type: integer
        project_id:
          type: integer
        name:
          type: string
          minLength: 1
        created_by_id:
          type: integer
        created_by_service_token_id:
          type: integer
        state:
          type: integer
        private_link_endpoint_id:
          type: string
          minLength: 1
      required:
      - account_id
      - name
      - project_id
      - state
    ConnectionEncryption:
      type: object
      properties:
        account_id:
          type: integer
        connection_id:
          type: integer
        username:
          type: string
        port:
          type: integer
        hostname:
          type: string
        public_key:
          type: string
        state:
          type: integer
        id:
          type: integer
        private_key:
          type: string
        _private_key:
          allOf:
          - $ref: '#/components/schemas/DataclassEncryptedField'
          title: ' private key'
      required:
      - account_id
      - connection_id
      - hostname
      - port
      - state
      - username
    ConnectionEncryptionEnveloped:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ConnectionEncryption'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    ConnectionEncryptionRequest:
      type: object
      properties:
        account_id:
          type: integer
        connection_id:
          type: integer
        username:
          type: string
          minLength: 1
        port:
          type: integer
        hostname:
          type: string
          minLength: 1
        public_key:
          type: string
          minLength: 1
        state:
          type: integer
        id:
          type: integer
        private_key:
          type: string
          minLength: 1
        _private_key:
          allOf:
          - $ref: '#/components/schemas/DataclassEncryptedFieldRequest'
          title: ' private key'
      required:
      - account_id
      - connection_id
      - hostname
      - port
      - state
      - username
    CustomEnvironmentVariable:
      type: object
      properties:
        account_id:
          type: integer
        project_id:
          type: integer
        name:
          type: string
        state:
          type: integer
        user_id:
          type: integer
        environment_id:
          type: integer
        job_definition_id:
          type: integer
        raw_value:
          type: string
        _raw_value:
          allOf:
          - $ref: '#/components/schemas/DataclassEncryptedField'
          title: ' raw value'
        display_value:
          type: string
        id:
          type: integer
      required:
      - account_id
      - name
      - project_id
    CustomEnvironmentVariableRequest:
      type: object
      properties:
        account_id:
          type: integer
        project_id:
          type: integer
        name:
          type: string
          minLength: 1
        state:
          type: integer
        user_id:
          type: integer
        environment_id:
          type: integer
        job_definition_id:
          type: integer
        raw_value:
          type: string
          minLength: 1
        _raw_value:
          allOf:
          - $ref: '#/components/schemas/DataclassEncryptedFieldRequest'
          title: ' raw value'
        display_value:
          type: string
          minLength: 1
        id:
          type: integer
      required:
      - account_id
      - name
      - project_id
    DataclassEncryptedField:
      type: object
      properties:
        plaintext:
          type: string
        ciphertext:
          type: string
    DataclassEncryptedFieldRequest:
      type: object
      properties:
        plaintext:
          type: string
          minLength: 1
        ciphertext:
          type: string
          minLength: 1
    Defaults:
      type: object
      properties:
        data:
          type: object
          additionalProperties: {}
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    EnvironmentV2:
      type: object
      required:
      - id
      - account_id
      - connection_id
      - created_by_id
      - name
      - dbt_project_subdirectory
      - use_custom_branch
      - custom_branch
      - dbt_version
      - supports_docs
      - repository_id
      - state
      properties:
        id:
          oneOf:
          - type: 'null'
          - type: integer
        account_id:
          type: integer
        connection_id:
          oneOf:
          - type: 'null'
          - type: integer
        project_id:
          oneOf:
          - type: 'null'
          - type: integer
        credentials_id:
          oneOf:
          - type: 'null'
          - type: integer
        created_by_id:
          oneOf:
          - type: 'null'
          - type: integer
        name:
          allOf:
          - type: string
          - minLength: 1
            maxLength: 255
        dbt_project_subdirectory:
          oneOf:
          - type: 'null'
          - type: string
        use_custom_branch:
          type: boolean
        custom_branch:
          oneOf:
          - type: 'null'
          - type: string
        dbt_version:
          oneOf:
          - type: 'null'
          - type: string
        raw_dbt_version:
          oneOf:
          - type: 'null'
          - type: string
        supports_docs:
          type: boolean
        repository_id:
          oneOf:
          - type: 'null'
          - type: integer
        state:
          type: integer
        repository:
          oneOf:
          - type: 'null'
          - {}
        jobs: {}
        connection:
          oneOf:
          - type: 'null'
          - {}
        custom_environment_variables:
          oneOf:
          - type: 'null'
          - {}
        updated_at:
          oneOf:
          - type: 'null'
          - type: string
            format: date-time
          readOnly: true
        extended_attributes_id:
          oneOf:
          - type: 'null'
          - type: integer
      additionalProperties: false
      definitions: {}
      $schema: http://json-schema.org/draft-07/schema#
    EnvironmentV2Enveloped:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentV2'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    EnvironmentV2Request:
      type: object
      required:
      - id
      - account_id
      - connection_id
      - created_by_id
      - name
      - dbt_project_subdirectory
      - use_custom_branch
      - custom_branch
      - dbt_version
      - supports_docs
      - repository_id
      - state
      properties:
        id:
          oneOf:
          - type: 'null'
          - type: integer
        account_id:
          type: integer
        connection_id:
          oneOf:
          - type: 'null'
          - type: integer
        project_id:
          oneOf:
          - type: 'null'
          - type: integer
        credentials_id:
          oneOf:
          - type: 'null'
          - type: integer
        created_by_id:
          oneOf:
          - type: 'null'
          - type: integer
        name:
          allOf:
          - type: string
          - minLength: 1
            maxLength: 255
        dbt_project_subdirectory:
          oneOf:
          - type: 'null'
          - type: string
        use_custom_branch:
          type: boolean
        custom_branch:
          oneOf:
          - type: 'null'
          - type: string
        dbt_version:
          oneOf:
          - type: 'null'
          - type: string
        raw_dbt_version:
          oneOf:
          - type: 'null'
          - type: string
        supports_docs:
          type: boolean
        repository_id:
          oneOf:
          - type: 'null'
          - type: integer
        state:
          type: integer
        repository:
          oneOf:
          - type: 'null'
          - {}
        jobs: {}
        connection:
          oneOf:
          - type: 'null'
          - {}
        custom_environment_variables:
          oneOf:
          - type: 'null'
          - {}
        extended_attributes_id:
          oneOf:
          - type: 'null'
          - type: integer
      additionalProperties: false
      definitions: {}
      $schema: http://json-schema.org/draft-07/schema#
    GitProvider:
      type: object
      properties:
        account_id:
          type: integer
        state:
          type: integer
        id:
          type: integer
      required:
      - account_id
      - state
    GitProviderRequest:
      type: object
      properties:
        account_id:
          type: integer
        state:
          type: integer
        id:
          type: integer
      required:
      - account_id
      - state
    GroupPermission:
      type: object
      properties:
        account_id:
          type: integer
        group_id:
          type: integer
        project_id:
          type: integer
        permission_level:
          type: integer
        id:
          type: integer
        state:
          type: integer
      required:
      - account_id
      - group_id
      - state
    GroupPermissionRequest:
      type: object
      properties:
        account_id:
          type: integer
        group_id:
          type: integer
        project_id:
          type: integer
        permission_level:
          type: integer
        id:
          type: integer
        state:
          type: integer
      required:
      - account_id
      - group_id
      - state
    InternalJobDefinition:
      type: object
      required:
      - id
      - environment_id
      - account_id
      - project_id
      - name
      - dbt_version
      - triggers
      - schedule
      - settings
      - execution
      - state
      - generate_docs
      - run_generate_sources
      properties:
        id:
          oneOf:
          - type: 'null'
          - type: integer
        environment_id:
          type: integer
        deferring_job_definition_id:
          oneOf:
          - type: 'null'
          - type: integer
        deferring_environment_id:
          oneOf:
          - type: 'null'
          - type: integer
        lifecycle_webhooks:
          oneOf:
          - type: boolean
          - type: 'null'
        lifecycle_webhooks_url:
          oneOf:
          - type: string
          - type: 'null'
        account_id:
          type: integer
        project_id:
          type: integer
        name:
          allOf:
          - type: string
          - minLength: 1
            maxLength: 255
        description:
          allOf:
          - type: string
          - minLength: 0
            maxLength: 255
        dbt_version:
          oneOf:
          - type: string
          - type: 'null'
        raw_dbt_version:
          oneOf:
          - type: string
          - type: 'null'
        triggers:
          description: 'only one of the following fields can be true: triggers.github_webhook,
            triggers.schedule, & triggers.git_provider_webhook'
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        execute_steps:
          allOf:
          - {}
          - minLength: 1
            maxLength: 100
          - {}
        schedule:
          description: schedule is only required if triggers.schedule is true
        settings: {}
        execution: {}
        state:
          oneOf:
          - {}
          - {}
        generate_docs:
          type: boolean
        run_generate_sources:
          type: boolean
        environment: {}
        account:
          oneOf:
          - {}
          - type: 'null'
        project:
          oneOf:
          - {}
          - type: 'null'
        most_recent_completed_run:
          oneOf:
          - {}
          - type: 'null'
        most_recent_run:
          oneOf:
          - {}
          - type: 'null'
        is_deferrable:
          type: boolean
        deactivated:
          type: boolean
        run_failure_count:
          type: integer
        job_type:
          oneOf:
          - {}
          - {}
          - {}
          - type: 'null'
        triggers_on_draft_pr:
          type: boolean
      additionalProperties: false
      definitions: {}
      $schema: http://json-schema.org/draft-07/schema#
    InternalJobDefinitionEnveloped:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/InternalJobDefinition'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    InternalJobDefinitionRequest:
      type: object
      required:
      - id
      - environment_id
      - account_id
      - project_id
      - name
      - dbt_version
      - triggers
      - schedule
      - settings
      - execution
      - state
      - generate_docs
      - run_generate_sources
      properties:
        id:
          oneOf:
          - type: 'null'
          - type: integer
        environment_id:
          type: integer
        deferring_job_definition_id:
          oneOf:
          - type: 'null'
          - type: integer
        deferring_environment_id:
          oneOf:
          - type: 'null'
          - type: integer
        lifecycle_webhooks:
          oneOf:
          - type: boolean
          - type: 'null'
        lifecycle_webhooks_url:
          oneOf:
          - type: string
          - type: 'null'
        account_id:
          type: integer
        project_id:
          type: integer
        name:
          allOf:
          - type: string
          - minLength: 1
            maxLength: 255
        description:
          allOf:
          - type: string
          - minLength: 0
            maxLength: 255
        dbt_version:
          oneOf:
          - type: string
          - type: 'null'
        raw_dbt_version:
          oneOf:
          - type: string
          - type: 'null'
        triggers:
          description: 'only one of the following fields can be true: triggers.github_webhook,
            triggers.schedule, & triggers.git_provider_webhook'
        execute_steps:
          allOf:
          - {}
          - minLength: 1
            maxLength: 100
          - {}
        schedule:
          description: schedule is only required if triggers.schedule is true
        settings: {}
        execution: {}
        state:
          oneOf:
          - {}
          - {}
        generate_docs:
          type: boolean
        run_generate_sources:
          type: boolean
        environment: {}
        account:
          oneOf:
          - {}
          - type: 'null'
        project:
          oneOf:
          - {}
          - type: 'null'
        most_recent_completed_run:
          oneOf:
          - {}
          - type: 'null'
        most_recent_run:
          oneOf:
          - {}
          - type: 'null'
        is_deferrable:
          type: boolean
        deactivated:
          type: boolean
        run_failure_count:
          type: integer
        job_type:
          oneOf:
          - {}
          - {}
          - {}
          - type: 'null'
        triggers_on_draft_pr:
          type: boolean
      additionalProperties: false
      definitions: {}
      $schema: http://json-schema.org/draft-07/schema#
    JobDefinitionExecution:
      type: object
      properties:
        timeout_seconds:
          type: integer
      required:
      - timeout_seconds
    JobDefinitionExecutionRequest:
      type: object
      properties:
        timeout_seconds:
          type: integer
      required:
      - timeout_seconds
    JobDefinitionSchedule:
      type: object
      properties:
        cron:
          type: string
      required:
      - cron
    JobDefinitionScheduleRequest:
      type: object
      properties:
        cron:
          type: string
          minLength: 1
      required:
      - cron
    JobDefinitionSettings:
      type: object
      properties:
        threads:
          type: integer
        target_name:
          type: string
      required:
      - target_name
      - threads
    JobDefinitionSettingsRequest:
      type: object
      properties:
        threads:
          type: integer
        target_name:
          type: string
          minLength: 1
      required:
      - target_name
      - threads
    JobDefinitionV2:
      type: object
      properties:
        environment_id:
          type: integer
        account_id:
          type: integer
        project_id:
          type: integer
        name:
          type: string
        description:
          type: string
        state:
          type: integer
        dbt_version:
          type: string
        raw_dbt_version:
          type: string
        id:
          type: integer
        run_failure_count:
          type: integer
        settings:
          $ref: '#/components/schemas/JobDefinitionSettings'
        execution:
          $ref: '#/components/schemas/JobDefinitionExecution'
        schedule:
          $ref: '#/components/schemas/JobDefinitionSchedule'
        execute_steps:
          type: array
          items: {}
        most_recent_run:
          $ref: '#/components/schemas/Run'
        most_recent_completed_run:
          $ref: '#/components/schemas/Run'
        custom_environment_variables:
          type: array
          items:
            $ref: '#/components/schemas/CustomEnvironmentVariable'
      required:
      - account_id
      - environment_id
      - name
      - project_id
      - run_failure_count
      - state
    JobDefinitionV2Request:
      type: object
      properties:
        environment_id:
          type: integer
        account_id:
          type: integer
        project_id:
          type: integer
        name:
          type: string
          minLength: 1
        description:
          type: string
          minLength: 1
        state:
          type: integer
        dbt_version:
          type: string
          minLength: 1
        raw_dbt_version:
          type: string
          minLength: 1
        id:
          type: integer
        run_failure_count:
          type: integer
        settings:
          $ref: '#/components/schemas/JobDefinitionSettingsRequest'
        execution:
          $ref: '#/components/schemas/JobDefinitionExecutionRequest'
        schedule:
          $ref: '#/components/schemas/JobDefinitionScheduleRequest'
        execute_steps:
          type: array
          items: {}
        most_recent_run:
          $ref: '#/components/schemas/RunRequest'
        most_recent_completed_run:
          $ref: '#/components/schemas/RunRequest'
        custom_environment_variables:
          type: array
          items:
            $ref: '#/components/schemas/CustomEnvironmentVariableRequest'
      required:
      - account_id
      - environment_id
      - name
      - project_id
      - run_failure_count
      - state
    JobNotificationSettings:
      type: object
      required:
      - id
      - account_id
      - type
      - state
      - on_cancel
      - on_failure
      - on_success
      properties:
        id:
          oneOf:
          - type: 'null'
          - type: integer
        account_id:
          type: integer
        type:
          oneOf:
          - {}
          - {}
          - {}
          - {}
        state:
          type: integer
        on_cancel: {}
        on_failure: {}
        on_success: {}
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        user_id:
          type: integer
        external_email:
          oneOf:
          - type: string
          - type: 'null'
        user: {}
        slack_channel_id:
          oneOf:
          - type: string
          - type: 'null'
        slack_channel_name:
          oneOf:
          - type: string
          - type: 'null'
      additionalProperties: false
      definitions: {}
      $schema: http://json-schema.org/draft-07/schema#
    JobNotificationSettingsEnveloped:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/JobNotificationSettings'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    JobNotificationSettingsRequest:
      type: object
      required:
      - id
      - account_id
      - type
      - state
      - on_cancel
      - on_failure
      - on_success
      properties:
        id:
          oneOf:
          - type: 'null'
          - type: integer
        account_id:
          type: integer
        type:
          oneOf:
          - {}
          - {}
          - {}
          - {}
        state:
          type: integer
        on_cancel: {}
        on_failure: {}
        on_success: {}
        user_id:
          type: integer
        external_email:
          oneOf:
          - type: string
          - type: 'null'
        user: {}
        slack_channel_id:
          oneOf:
          - type: string
          - type: 'null'
        slack_channel_name:
          oneOf:
          - type: string
          - type: 'null'
      additionalProperties: false
      definitions: {}
      $schema: http://json-schema.org/draft-07/schema#
    Project:
      type: object
      properties:
        name:
          type: string
        account_id:
          type: integer
          description: id of account this project belongs to
        connection_id:
          type: integer
        repository_id:
          type: integer
        semantic_layer_config_id:
          type: integer
        id:
          type: integer
        state:
          type: integer
        dbt_project_subdirectory:
          type: string
        connection:
          $ref: '#/components/schemas/BaseConnectionV3'
        repository:
          $ref: '#/components/schemas/RepositoryV3'
        group_permissions:
          type: array
          items:
            $ref: '#/components/schemas/GroupPermission'
        docs_job_id:
          type: integer
        freshness_job_id:
          type: integer
        docs_job:
          $ref: '#/components/schemas/JobDefinitionV2'
        freshness_job:
          $ref: '#/components/schemas/JobDefinitionV2'
      required:
      - account_id
      - name
      - state
    ProjectEnveloped:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Project'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    ProjectRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
        account_id:
          type: integer
          description: id of account this project belongs to
        connection_id:
          type: integer
        repository_id:
          type: integer
        semantic_layer_config_id:
          type: integer
        id:
          type: integer
        state:
          type: integer
        dbt_project_subdirectory:
          type: string
          minLength: 1
        connection:
          $ref: '#/components/schemas/BaseConnectionV3Request'
        repository:
          $ref: '#/components/schemas/RepositoryV3Request'
        group_permissions:
          type: array
          items:
            $ref: '#/components/schemas/GroupPermissionRequest'
        docs_job_id:
          type: integer
        freshness_job_id:
          type: integer
        docs_job:
          $ref: '#/components/schemas/JobDefinitionV2Request'
        freshness_job:
          $ref: '#/components/schemas/JobDefinitionV2Request'
      required:
      - account_id
      - name
      - state
    RepositoryGitlab:
      type: object
      properties:
        id:
          type: integer
        account_id:
          type: integer
        repository_id:
          type: integer
        gitlab_project_id:
          type: integer
        state:
          type: integer
        project_access_token_id:
          type: integer
        project_access_token:
          type: string
        _project_access_token:
          allOf:
          - $ref: '#/components/schemas/DataclassEncryptedField'
          title: ' project access token'
      required:
      - account_id
      - gitlab_project_id
      - state
    RepositoryGitlabRequest:
      type: object
      properties:
        id:
          type: integer
        account_id:
          type: integer
        repository_id:
          type: integer
        gitlab_project_id:
          type: integer
        state:
          type: integer
        project_access_token_id:
          type: integer
        project_access_token:
          type: string
          minLength: 1
        _project_access_token:
          allOf:
          - $ref: '#/components/schemas/DataclassEncryptedFieldRequest'
          title: ' project access token'
      required:
      - account_id
      - gitlab_project_id
      - state
    RepositoryV2:
      type: object
      required:
      - id
      - account_id
      - full_name
      - remote_url
      - remote_backend
      - git_clone_strategy
      - deploy_key_id
      - github_installation_id
      - pull_request_url_template
      - state
      properties:
        id:
          oneOf:
          - type: 'null'
          - type: integer
        account_id:
          type: integer
        project_id:
          oneOf:
          - type: 'null'
          - type: integer
        full_name:
          oneOf:
          - type: 'null'
          - type: string
        remote_url:
          oneOf:
          - type: 'null'
          - allOf:
            - type: string
            - pattern: ^\S+[/:](?P<repo>[^\s/]+?)(?:\.git)?$
        remote_backend:
          oneOf:
          - {}
          - {}
          - {}
          - {}
          - type: 'null'
        git_clone_strategy:
          oneOf:
          - {}
          - {}
          - {}
          - {}
        deploy_key: {}
        deploy_key_id:
          oneOf:
          - type: 'null'
          - type: integer
        repository_credentials_id:
          oneOf:
          - type: 'null'
          - type: integer
        github_installation_id:
          oneOf:
          - type: 'null'
          - type: integer
        github_webhook_id:
          oneOf:
          - type: 'null'
          - type: integer
        pull_request_url_template:
          oneOf:
          - type: 'null'
          - type: string
        state:
          type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        git_provider_id:
          oneOf:
          - type: 'null'
          - type: integer
      additionalProperties: false
      definitions: {}
      $schema: http://json-schema.org/draft-07/schema#
    RepositoryV2Enveloped:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/RepositoryV2'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    RepositoryV2Request:
      type: object
      required:
      - id
      - account_id
      - full_name
      - remote_url
      - remote_backend
      - git_clone_strategy
      - deploy_key_id
      - github_installation_id
      - pull_request_url_template
      - state
      properties:
        id:
          oneOf:
          - type: 'null'
          - type: integer
        account_id:
          type: integer
        project_id:
          oneOf:
          - type: 'null'
          - type: integer
        full_name:
          oneOf:
          - type: 'null'
          - type: string
        remote_url:
          oneOf:
          - type: 'null'
          - allOf:
            - type: string
            - pattern: ^\S+[/:](?P<repo>[^\s/]+?)(?:\.git)?$
        remote_backend:
          oneOf:
          - {}
          - {}
          - {}
          - {}
          - type: 'null'
        git_clone_strategy:
          oneOf:
          - {}
          - {}
          - {}
          - {}
        deploy_key: {}
        deploy_key_id:
          oneOf:
          - type: 'null'
          - type: integer
        repository_credentials_id:
          oneOf:
          - type: 'null'
          - type: integer
        github_installation_id:
          oneOf:
          - type: 'null'
          - type: integer
        github_webhook_id:
          oneOf:
          - type: 'null'
          - type: integer
        pull_request_url_template:
          oneOf:
          - type: 'null'
          - type: string
        state:
          type: integer
        git_provider_id:
          oneOf:
          - type: 'null'
          - type: integer
      additionalProperties: false
      definitions: {}
      $schema: http://json-schema.org/draft-07/schema#
    RepositoryV3:
      type: object
      properties:
        id:
          type: integer
        account_id:
          type: integer
        project_id:
          type: integer
        full_name:
          type: string
        deploy_key_id:
          type: integer
        repository_credentials_id:
          type: integer
        github_installation_id:
          type: integer
        github_webhook_id:
          type: integer
        github_webhook_secret:
          type: string
        _github_webhook_secret:
          allOf:
          - $ref: '#/components/schemas/DataclassEncryptedField'
          title: ' github webhook secret'
        state:
          type: integer
        github_repo:
          type: string
        name:
          type: string
        git_provider_id:
          type: integer
        gitlab:
          $ref: '#/components/schemas/RepositoryGitlab'
        git_provider:
          $ref: '#/components/schemas/GitProvider'
      required:
      - account_id
      - state
    RepositoryV3Request:
      type: object
      properties:
        id:
          type: integer
        account_id:
          type: integer
        project_id:
          type: integer
        full_name:
          type: string
          minLength: 1
        deploy_key_id:
          type: integer
        repository_credentials_id:
          type: integer
        github_installation_id:
          type: integer
        github_webhook_id:
          type: integer
        github_webhook_secret:
          type: string
          minLength: 1
        _github_webhook_secret:
          allOf:
          - $ref: '#/components/schemas/DataclassEncryptedFieldRequest'
          title: ' github webhook secret'
        state:
          type: integer
        github_repo:
          type: string
          minLength: 1
        name:
          type: string
          minLength: 1
        git_provider_id:
          type: integer
        gitlab:
          $ref: '#/components/schemas/RepositoryGitlabRequest'
        git_provider:
          $ref: '#/components/schemas/GitProviderRequest'
      required:
      - account_id
      - state
    Run:
      type: object
      properties:
        id:
          type: integer
        trigger_id:
          type: integer
        account_id:
          type: integer
        environment_id:
          type: integer
        project_id:
          type: integer
        job_definition_id:
          type: integer
        status:
          type: integer
        dbt_version:
          type: string
        git_branch:
          type: string
        git_sha:
          type: string
        status_message:
          type: string
        owner_thread_id:
          type: string
        executed_by_thread_id:
          type: string
        deferring_run_id:
          type: integer
        artifact_s3_path:
          type: string
        blocked_by:
          type: array
          items: {}
        status_humanized:
          type: string
        duration:
          type: string
        queued_duration:
          type: string
        run_duration:
          type: string
        duration_humanized:
          type: string
        queued_duration_humanized:
          type: string
        run_duration_humanized:
          type: string
        created_at_humanized:
          type: string
        finished_at_humanized:
          type: string
        job_id:
          type: integer
      required:
      - account_id
      - blocked_by
      - dbt_version
      - environment_id
      - job_definition_id
      - project_id
      - status
    RunEnveloped:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Run'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    RunRequest:
      type: object
      properties:
        id:
          type: integer
        trigger_id:
          type: integer
        account_id:
          type: integer
        environment_id:
          type: integer
        project_id:
          type: integer
        job_definition_id:
          type: integer
        status:
          type: integer
        dbt_version:
          type: string
          minLength: 1
        git_branch:
          type: string
          minLength: 1
        git_sha:
          type: string
          minLength: 1
        status_message:
          type: string
          minLength: 1
        owner_thread_id:
          type: string
          minLength: 1
        executed_by_thread_id:
          type: string
          minLength: 1
        deferring_run_id:
          type: integer
        artifact_s3_path:
          type: string
          minLength: 1
        blocked_by:
          type: array
          items: {}
        status_humanized:
          type: string
          minLength: 1
        duration:
          type: string
          minLength: 1
        queued_duration:
          type: string
          minLength: 1
        run_duration:
          type: string
          minLength: 1
        duration_humanized:
          type: string
          minLength: 1
        queued_duration_humanized:
          type: string
          minLength: 1
        run_duration_humanized:
          type: string
          minLength: 1
        created_at_humanized:
          type: string
          minLength: 1
        finished_at_humanized:
          type: string
          minLength: 1
        job_id:
          type: integer
      required:
      - account_id
      - blocked_by
      - dbt_version
      - environment_id
      - job_definition_id
      - project_id
      - status
    Status:
      type: object
      properties:
        code:
          type: integer
          default: 200
        is_success:
          type: boolean
        user_message:
          type: string
        developer_message:
          type: string
      required:
      - developer_message
      - is_success
      - user_message
    TriggerRunRequestRequest:
      type: object
      properties:
        cause:
          type: string
          minLength: 1
        git_sha:
          type: string
          minLength: 1
        git_branch:
          type: string
          minLength: 1
        azure_pull_request_id:
          type: integer
        github_pull_request_id:
          type: integer
        gitlab_merge_request_id:
          type: integer
        schema_override:
          type: string
          minLength: 1
        dbt_version_override:
          type: string
          minLength: 1
        threads_override:
          type: integer
        target_name_override:
          type: string
          minLength: 1
        timeout_seconds_override:
          type: integer
        steps_override:
          type: array
          items: {}
      required:
      - cause
    User:
      type: object
      required:
      - id
      - first_name
      - last_name
      - email
      - is_staff
      - github_connected
      - github_username
      - gitlab_connected
      - gitlab_username
      - azure_active_directory_connected
      - azure_active_directory_username
      - email_connected
      - email_verified
      - slack_connected
      - enterprise_connected
      properties:
        id:
          oneOf:
          - type: 'null'
          - type: integer
        auth0_user_id:
          oneOf:
          - type: 'null'
          - type: string
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        is_staff:
          type: boolean
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        last_login:
          oneOf:
          - type: 'null'
          - type: string
            format: date-time
        github_connected:
          oneOf:
          - type: 'null'
          - type: boolean
        github_token_retrieval_failure:
          oneOf:
          - type: 'null'
          - type: boolean
        github_access_token:
          oneOf:
          - type: 'null'
          - type: string
        github_username:
          oneOf:
          - type: 'null'
          - type: string
        gitlab_connected:
          oneOf:
          - type: 'null'
          - type: boolean
        gitlab_token_retrieval_failure:
          oneOf:
          - type: 'null'
          - type: boolean
        gitlab_access_token:
          oneOf:
          - type: 'null'
          - type: string
        gitlab_username:
          oneOf:
          - type: 'null'
          - type: string
        azure_active_directory_connected:
          oneOf:
          - type: 'null'
          - type: boolean
        azure_active_directory_access_token:
          oneOf:
          - type: 'null'
          - type: string
        azure_active_directory_username:
          oneOf:
          - type: 'null'
          - type: string
        azure_active_directory_token_retrieval_failure:
          oneOf:
          - type: 'null'
          - type: boolean
        email_connected:
          oneOf:
          - type: 'null'
          - type: boolean
        email_verified:
          type: boolean
        slack_connected:
          oneOf:
          - type: 'null'
          - type: boolean
        slack_team_name:
          oneOf:
          - type: 'null'
          - type: string
        slack_avatar_url:
          oneOf:
          - type: 'null'
          - type: string
        slack_access_token:
          oneOf:
          - type: 'null'
          - type: string
        enterprise_connected:
          oneOf:
          - type: 'null'
          - type: boolean
        enterprise_authentication_method:
          oneOf:
          - type: 'null'
          - type: string
        enterprise_idp_attributes:
          oneOf:
          - type: 'null'
          - {}
        auth_provider_infos:
          oneOf:
          - type: 'null'
          - {}
        api_key:
          type: string
        password:
          allOf:
          - minLength: 9
          - type: string
        confirm_password:
          type: string
        permissions: {}
        licenses: {}
        user_feature_flags: {}
      additionalProperties: false
      definitions: {}
      $schema: http://json-schema.org/draft-07/schema#
    UserEnveloped:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/User'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    UserRequest:
      type: object
      required:
      - id
      - first_name
      - last_name
      - email
      - is_staff
      - github_connected
      - github_username
      - gitlab_connected
      - gitlab_username
      - azure_active_directory_connected
      - azure_active_directory_username
      - email_connected
      - email_verified
      - slack_connected
      - enterprise_connected
      properties:
        id:
          oneOf:
          - type: 'null'
          - type: integer
        auth0_user_id:
          oneOf:
          - type: 'null'
          - type: string
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        is_staff:
          type: boolean
        is_active:
          type: boolean
        last_login:
          oneOf:
          - type: 'null'
          - type: string
            format: date-time
        github_connected:
          oneOf:
          - type: 'null'
          - type: boolean
        github_token_retrieval_failure:
          oneOf:
          - type: 'null'
          - type: boolean
        github_access_token:
          oneOf:
          - type: 'null'
          - type: string
        github_username:
          oneOf:
          - type: 'null'
          - type: string
        gitlab_connected:
          oneOf:
          - type: 'null'
          - type: boolean
        gitlab_token_retrieval_failure:
          oneOf:
          - type: 'null'
          - type: boolean
        gitlab_access_token:
          oneOf:
          - type: 'null'
          - type: string
        gitlab_username:
          oneOf:
          - type: 'null'
          - type: string
        azure_active_directory_connected:
          oneOf:
          - type: 'null'
          - type: boolean
        azure_active_directory_access_token:
          oneOf:
          - type: 'null'
          - type: string
        azure_active_directory_username:
          oneOf:
          - type: 'null'
          - type: string
        azure_active_directory_token_retrieval_failure:
          oneOf:
          - type: 'null'
          - type: boolean
        email_connected:
          oneOf:
          - type: 'null'
          - type: boolean
        email_verified:
          type: boolean
        slack_connected:
          oneOf:
          - type: 'null'
          - type: boolean
        slack_team_name:
          oneOf:
          - type: 'null'
          - type: string
        slack_avatar_url:
          oneOf:
          - type: 'null'
          - type: string
        slack_access_token:
          oneOf:
          - type: 'null'
          - type: string
        enterprise_connected:
          oneOf:
          - type: 'null'
          - type: boolean
        enterprise_authentication_method:
          oneOf:
          - type: 'null'
          - type: string
        enterprise_idp_attributes:
          oneOf:
          - type: 'null'
          - {}
        auth_provider_infos:
          oneOf:
          - type: 'null'
          - {}
        api_key:
          type: string
        password:
          allOf:
          - minLength: 9
          - type: string
        confirm_password:
          type: string
        permissions: {}
        licenses: {}
        user_feature_flags: {}
      additionalProperties: false
      definitions: {}
      $schema: http://json-schema.org/draft-07/schema#
  securitySchemes:
    BearerAuthentication:
      type: http
      scheme: bearer
      bearerFormat: Bearer
servers:
- url: https://cloud.getdbt.com/
  description: Production (US)
- url: https://emea.dbt.com/
  description: Production (Europe)
- url: https://au.dbt.com/
  description: Production (AU)
