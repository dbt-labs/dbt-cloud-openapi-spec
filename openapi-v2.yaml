openapi: 3.0.3
info:
  title: dbt Cloud API v2
  version: 2.0.0
  description: "# How to use this API\n\nThe dbt Cloud API v2 contains endpoints for\
    \ enqueuing runs from a job, polling for run progress,\nand downloading artifacts\
    \ after jobs have completed running. For operational endpoints to\ncreate, modify,\
    \ and delete _objects_ in dbt Cloud, consider using [API v3](https://docs.getdbt.com/dbt-cloud/api-v3#/)\n\
    \nThe API docs are generated from an openapi spec defined in the\n[dbt-cloud-openapi-spec](https://github.com/dbt-labs/dbt-cloud-openapi-spec/blob/master/openapi-v2.yaml)\n\
    repository. If you find issues in these docs or have questions about using the\
    \ dbt Cloud\nAPI, please open an issue in the dbt-cloud-openapi-spec repo or contact\
    \ support@getdbt.com.\n\n## Authentication\n\nTo authenticate an application with\
    \ the dbt Cloud API, navigate to the\nAccount Settings page and go to Personal\
    \ Tokens from the left sidebar. Create one if you don't have one already.\nIf\
    \ you cannot access this page, confirm that your dbt Cloud account has access\
    \ to the API,\nand that you are using the hosted version of dbt Cloud. If dbt\
    \ Cloud is running inside of a VPC\nin an Enterprise account, contact your account\
    \ manager for help finding your account-scoped Personal Access Token.\n\nOnce\
    \ you've found your Personal Access Token (PAT) for your account, use it in the\
    \ Authorization header of requests to the dbt Cloud API.\nBe sure to include the\
    \ `Token` prefix in the Authorization header, or the request will fail with a\n\
    \"401 Unauthorized\" error.\n\n*Note: `Bearer` can be used in place of `Token`\
    \ in the Authorization header. Both syntaxes are equivalent.*\n\n**Headers**\n\
    ```\nAccept: application/json\nAuthorization: Token <your token>\n```  \n\n##\
    \ Pagination\n\nAll top-level API resources support bulk fetches using the \"\
    list\" or `GET` API methods. These API methods accept `limit` and `offset` query\
    \ parameters that you can use together to paginate results and return a subset\
    \ of those results.\n\n* Offset: Specifies how many records to skip. Can be an\
    \ integer 0 and higher.\n* Limit: Specifies the maximum records you want to retrieve\
    \ in a single request. Can be an integer up to 100. This limit makes responses\
    \ easier to handle for servers and people.\n\n\n## Example request\n\nThe following\
    \ example uses the list projects endpoint to list the projects that your token\
    \ is authorized to access.\nThis request skips the first 10 projects and lists\
    \ the next 10 projects.\nBe sure to replace `<YOUR_TOKEN>` in the Authorization\
    \ header with your actual API token and `<YOUR_ACCOUNT_ID>` with your actual account\
    \ ID.\n\n```bash\ncurl --request GET \\\n  --url 'https://cloud.getdbt.com/api/v3/accounts/<YOUR_ACCOUNT_ID>/projects/?limit=10&offset=5'\
    \ \\\n  --header 'Content-Type: application/json' \\\n  --header 'Authorization:\
    \ Token <YOUR_TOKEN>'\n```\n"
  termsOfService: https://www.getdbt.com/terms-of-service
  contact:
    email: support@getdbt.com
paths:
  /api/v2/accounts/:
    get:
      operationId: List Accounts
      description: Deprecated. Consider using the v3 API instead.
      tags:
      - Accounts
      security:
      - BearerAuthentication: []
      deprecated: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /api/v2/accounts/{account_id}/:
    get:
      operationId: Retrieve Account
      description: Retrieve an Account
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Accounts
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
    post:
      operationId: Update Account
      description: Update an account
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AccountRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AccountRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /api/v2/accounts/{account_id}/encryptions/:
    get:
      operationId: List SSH Tunnels
      description: List SSH tunnels
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: connection_id
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Connections
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionEncryptionListEnveloped'
          description: ''
    post:
      operationId: Create SSH Tunnel
      description: Create a new SSH tunnel to encrypt traffic for a given connection
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Connections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionEncryptionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConnectionEncryptionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConnectionEncryptionRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionEncryptionListEnveloped'
          description: ''
  /api/v2/accounts/{account_id}/encryptions/{id}/:
    get:
      operationId: Retrieve SSH Tunnel
      description: Retrieve an SSH tunnel
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Connections
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionEncryptionEnveloped'
          description: ''
    post:
      operationId: Update SSH Tunnel
      description: Update an SSH tunnel
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Connections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionEncryptionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConnectionEncryptionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConnectionEncryptionRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionEncryptionEnveloped'
          description: ''
    delete:
      operationId: Destroy SSH Tunnel
      description: Delete an SSH tunnel
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Connections
      security:
      - BearerAuthentication: []
      responses:
        '204':
          description: No response body
  /api/v2/accounts/{account_id}/environments/:
    get:
      operationId: List Environments
      description: Deprecated. Consider using the v3 API instead.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: dbt_version
        schema:
          type: string
      - in: query
        name: dbt_version__in
        schema:
          type: array
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Environments
      security:
      - BearerAuthentication: []
      deprecated: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentV2ListEnveloped'
          description: ''
    post:
      operationId: Create Environment
      description: Deprecated. Consider using the v3 API instead.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Environments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentV2Request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EnvironmentV2Request'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EnvironmentV2Request'
        required: true
      security:
      - BearerAuthentication: []
      deprecated: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentV2ListEnveloped'
          description: ''
  /api/v2/accounts/{account_id}/environments/{id}/:
    get:
      operationId: Retrieve Environment
      description: Deprecated. Consider using the v3 API instead.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Environments
      security:
      - BearerAuthentication: []
      deprecated: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentV2Enveloped'
          description: ''
    post:
      operationId: Update Environment
      description: Deprecated. Consider using the v3 API instead.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Environments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentV2Request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EnvironmentV2Request'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EnvironmentV2Request'
        required: true
      security:
      - BearerAuthentication: []
      deprecated: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentV2Enveloped'
          description: ''
    delete:
      operationId: Destroy Environment
      description: Deprecated. Consider using the v3 API instead.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Environments
      security:
      - BearerAuthentication: []
      deprecated: true
      responses:
        '204':
          description: No response body
  /api/v2/accounts/{account_id}/invites/:
    get:
      operationId: List Invites
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Invites
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InviteEnveloped'
          description: ''
  /api/v2/accounts/{account_id}/invites/{id}/:
    get:
      operationId: Retrieve Invite
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Invites
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InviteEnveloped'
          description: ''
  /api/v2/accounts/{account_id}/jobs/:
    get:
      operationId: List Jobs
      description: Use this endpoint to list jobs for an account.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: dbt_version__in
        schema:
          type: array
      - in: query
        name: environment_id
        schema:
          type: integer
      - in: query
        name: is_system
        schema:
          type: boolean
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: name__icontains
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      - in: query
        name: triggers_schedule
        schema:
          type: boolean
      tags:
      - Jobs
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HumanReadableJobDefinitionEnveloped'
          description: ''
    post:
      operationId: Create Job
      description: Use this endpoint to create a new job.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HumanReadableJobDefinitionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HumanReadableJobDefinitionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HumanReadableJobDefinitionRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HumanReadableJobDefinitionEnveloped'
          description: ''
  /api/v2/accounts/{account_id}/jobs/{job_id}/artifacts/{remainder}:
    get:
      operationId: Retrieve Job Artifact
      description: Given a job id and *a set of Run filters* return the latest matching
        artifact for that job.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: job_id
        schema:
          type: integer
        required: true
      - in: path
        name: remainder
        schema:
          type: string
        required: true
      tags:
      - Jobs
      security:
      - BearerAuthentication: []
      responses:
        '200':
          description: No response body
  /api/v2/accounts/{account_id}/jobs/{job_id}/rerun/:
    post:
      operationId: Retry Failed Job
      description: Use this endpoint to retry a failed run for a job from the point
        of failure, if the run failed. Otherwise trigger a new run. When this endpoint
        returns a successful response, a new run will be enqueued for the account.
        Users can poll the Get run endpoint to poll the run until it completes. After
        the run has completed, users can use the Get run artifact endpoint to download
        artifacts generated by the run.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: job_id
        schema:
          type: integer
        required: true
      tags:
      - Jobs
      security:
      - BearerAuthentication: []
      responses:
        '200':
          description: No response body
  /api/v2/accounts/{account_id}/jobs/{job_id}/run/:
    post:
      operationId: Trigger Job Run
      description: Use this endpoint to kick off a run for a job. When this endpoint
        returns a successful response, a new run will be enqueued for the account.
        Users can poll the Get run endpoint to poll the run until it completes. After
        the run has completed, users can use the Get run artifact endpoint to download
        artifacts generated by the run.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: job_id
        schema:
          type: integer
        required: true
      tags:
      - Jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TriggerRunRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TriggerRunRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TriggerRunRequestRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunResponseEnveloped'
          description: ''
  /api/v2/accounts/{account_id}/jobs/{id}/:
    get:
      operationId: Retrieve Job
      description: Use this endpoint to retrieve the details of a job.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Jobs
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HumanReadableJobDefinitionEnveloped'
          description: ''
    post:
      operationId: Update Job
      description: Use this endpoint to update a job.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HumanReadableJobDefinitionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HumanReadableJobDefinitionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HumanReadableJobDefinitionRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HumanReadableJobDefinitionEnveloped'
          description: ''
    delete:
      operationId: Destroy Job
      description: Use this endpoint to delete a job.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Jobs
      security:
      - BearerAuthentication: []
      responses:
        '204':
          description: No response body
  /api/v2/accounts/{account_id}/licenses/:
    get:
      operationId: List Account Licenses
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Licenses
      security:
      - BearerAuthentication: []
      responses:
        '200':
          description: No response body
  /api/v2/accounts/{account_id}/notifications/:
    get:
      operationId: List Notifications
      description: List notification configurations
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: external_email
        schema:
          type: string
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: slack_channel_id
        schema:
          type: string
      - in: query
        name: state
        schema:
          type: integer
      - in: query
        name: type
        schema:
          type: integer
      - in: query
        name: user_id
        schema:
          type: integer
      tags:
      - Notifications
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobNotificationSettingsListEnveloped'
          description: ''
    post:
      operationId: Create Notification
      description: Create a new Job Notification configuration to trigger notifications
        for job successes, failures, or cancelations. Notifications can be sent to
        a dbt Cloud user, an external email address, or a Slack channel.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobNotificationSettingsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobNotificationSettingsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobNotificationSettingsRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobNotificationSettingsListEnveloped'
          description: ''
  /api/v2/accounts/{account_id}/notifications/{id}/:
    get:
      operationId: Retrieve Notification
      description: Fetch notification configurations
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Notifications
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobNotificationSettingsEnveloped'
          description: ''
    post:
      operationId: Update Notification
      description: Update an existing Job Notification configuration.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobNotificationSettingsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobNotificationSettingsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobNotificationSettingsRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobNotificationSettingsEnveloped'
          description: ''
    delete:
      operationId: Destroy Notification
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Notifications
      security:
      - BearerAuthentication: []
      responses:
        '204':
          description: No response body
  /api/v2/accounts/{account_id}/permissions/{id}/:
    post:
      operationId: Create Permission
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Permissions
      security:
      - BearerAuthentication: []
      responses:
        '200':
          description: No response body
  /api/v2/accounts/{account_id}/projects/:
    get:
      operationId: List Projects
      description: Deprecated. Consider using the v3 API instead.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: name__icontains
        schema:
          type: string
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: pk__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Projects
      security:
      - BearerAuthentication: []
      deprecated: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectListEnveloped'
          description: ''
    post:
      operationId: Create Project
      description: Deprecated. Consider using the v3 API instead.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
        required: true
      security:
      - BearerAuthentication: []
      deprecated: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectListEnveloped'
          description: ''
  /api/v2/accounts/{account_id}/projects/{id}/:
    get:
      operationId: Retrieve Project
      description: Deprecated. Consider using the v3 API instead.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Projects
      security:
      - BearerAuthentication: []
      deprecated: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectEnveloped'
          description: ''
    post:
      operationId: Update Project
      description: Deprecated. Consider using the v3 API instead.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
        required: true
      security:
      - BearerAuthentication: []
      deprecated: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectEnveloped'
          description: ''
    delete:
      operationId: Destroy Project
      description: Deprecated. Consider using the v3 API instead.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Projects
      security:
      - BearerAuthentication: []
      deprecated: true
      responses:
        '204':
          description: No response body
  /api/v2/accounts/{account_id}/repositories/:
    get:
      operationId: List Repositories
      description: Deprecated. Consider using the v3 API instead.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: remote_url
        schema:
          type: string
      - in: query
        name: state
        schema:
          type: integer
      tags:
      - Repositories
      security:
      - BearerAuthentication: []
      deprecated: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoryV2ListEnveloped'
          description: ''
    post:
      operationId: Create Repository
      description: Deprecated. Consider using the v3 API instead.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Repositories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepositoryV2Request'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RepositoryV2Request'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RepositoryV2Request'
        required: true
      security:
      - BearerAuthentication: []
      deprecated: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoryV2ListEnveloped'
          description: ''
  /api/v2/accounts/{account_id}/repositories/{id}/:
    get:
      operationId: Retrieve Repository
      description: Deprecated. Consider using the v3 API instead.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Repositories
      security:
      - BearerAuthentication: []
      deprecated: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoryV2Enveloped'
          description: ''
    delete:
      operationId: Destroy Repository
      description: Deprecated. Consider using the v3 API instead.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Repositories
      security:
      - BearerAuthentication: []
      deprecated: true
      responses:
        '204':
          description: No response body
  /api/v2/accounts/{account_id}/runs/:
    get:
      operationId: List Runs
      description: Use this endpoint to list runs for an account.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: query
        name: account_id
        schema:
          type: integer
      - in: query
        name: created_at__range
        schema:
          type: array
      - in: query
        name: dbt_version
        schema:
          type: string
      - in: query
        name: dbt_version__in
        schema:
          type: array
      - in: query
        name: deferring_run_id
        schema:
          type: integer
      - in: query
        name: environment_id
        schema:
          type: integer
      - in: query
        name: finished_at__range
        schema:
          type: array
      - in: query
        name: has_docs_generated
        schema:
          type: boolean
      - in: query
        name: has_sources_generated
        schema:
          type: boolean
      - in: query
        name: id__gt
        schema:
          type: integer
      - in: query
        name: job_definition_id
        schema:
          type: integer
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: pk
        schema:
          type: integer
      - in: query
        name: project_id
        schema:
          type: integer
      - in: query
        name: project_id__in
        schema:
          type: array
      - in: query
        name: state
        schema:
          type: integer
      - in: query
        name: status
        schema:
          type: integer
      - in: query
        name: status__in
        schema:
          type: array
      tags:
      - Runs
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunResponseListEnveloped'
          description: ''
  /api/v2/accounts/{account_id}/runs/{id}/:
    get:
      operationId: Retrieve Run
      description: Use this endpoint to retrieve details for a run.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Runs
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunResponseEnveloped'
          description: ''
  /api/v2/accounts/{account_id}/runs/{run_id}/artifacts/:
    get:
      operationId: List Run Artifacts
      description: Retrieve the list of artifacts generated for a run.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: run_id
        schema:
          type: integer
        required: true
      tags:
      - Runs
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOfStringsEnveloped'
          description: ''
  /api/v2/accounts/{account_id}/runs/{run_id}/artifacts/{remainder}:
    get:
      operationId: Retrieve Run Artifact
      description: Use this endpoint to fetch artifacts from a completed run. Once
        a run has been completed, you can use this endpoint to download the `manifest.json`,
        `run_results.json`, or `catalog.json` files from dbt Cloud. These artifacts
        contain information about the models in your dbt project, timing information
        around their execution, and a status message indicating the result of the
        model build. By default, this endpoint returns artifacts from the last step
        in the run. To list artifacts from other steps in the run, use the step query
        parameter described below.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: remainder
        schema:
          type: string
        required: true
      - in: path
        name: run_id
        schema:
          type: integer
        required: true
      - in: query
        name: step
        schema:
          type: integer
        description: The index of the Step in the Run to query for artifacts. The
          first step in the run has the index `1`. If the `step` parameter is omitted,
          then this endpoint will return the artifacts compiled for the last step
          in the run.
      tags:
      - Runs
      security:
      - BearerAuthentication: []
      responses:
        '200':
          description: No response body
  /api/v2/accounts/{account_id}/runs/{run_id}/cancel/:
    post:
      operationId: Cancel Run
      description: Use this endpoint to cancel a run.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: run_id
        schema:
          type: integer
        required: true
      tags:
      - Runs
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunResponseEnveloped'
          description: ''
  /api/v2/accounts/{account_id}/runs/{run_id}/retry/:
    get:
      operationId: Retrieve Run Failure Details
      description: Use this endpoint to get details about a retryable run that has
        failed.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: run_id
        schema:
          type: integer
        required: true
      tags:
      - Runs
      security:
      - BearerAuthentication: []
      responses:
        '200':
          description: No response body
    post:
      operationId: Retry Run
      description: Use this endpoint to retry a failed run. When this endpoint returns
        a successful response, a new run will be enqueued. Users can poll the Get
        Run endpoint until it completes. After the run has completed, users can use
        the Get Run Artifact endpoint to download artifacts generated by the run.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: run_id
        schema:
          type: integer
        required: true
      tags:
      - Runs
      security:
      - BearerAuthentication: []
      responses:
        '200':
          description: No response body
  /api/v2/accounts/{account_id}/steps/{id}/:
    get:
      operationId: Retrieve Run Step
      description: Use this endpoint to retrieve the details of a specific step of
        a run.
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Runs
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunStepEnveloped'
          description: ''
  /api/v2/accounts/{account_id}/users/:
    get:
      operationId: List Users
      parameters:
      - in: path
        name: account_id
        schema:
          type: integer
        required: true
      tags:
      - Users
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserListEnveloped'
          description: ''
  /api/v2/notifications/unsubscribe/:
    post:
      operationId: Unsubscribe from Notifications
      description: Clear out all email notification configurations for the user making
        the request.
      tags:
      - Notifications
      security:
      - BearerAuthentication: []
      responses:
        '200':
          description: No response body
  /api/v2/users/{id}/:
    get:
      operationId: Retrieve User
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Users
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserEnveloped'
          description: ''
    post:
      operationId: Update User
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      security:
      - BearerAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserEnveloped'
          description: ''
components:
  schemas:
    Account:
      type: object
      properties:
        name:
          type: string
          description: The name of the account
        state:
          type: integer
          default: 1
          description: A value of 1 means this entity is active and a value of 2 means
            this entity is deleted
        docs_job_id:
          type: integer
          description: (Deprecated)
        freshness_job_id:
          type: integer
          description: (Deprecated)
      required:
      - name
    AccountRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          description: The name of the account
        state:
          type: integer
          default: 1
          description: A value of 1 means this entity is active and a value of 2 means
            this entity is deleted
        docs_job_id:
          type: integer
          description: (Deprecated)
        freshness_job_id:
          type: integer
          description: (Deprecated)
      required:
      - name
    AdapterVersionEnum:
      enum:
      - apache_spark_v0
      - databricks_spark_v0
      - databricks_v0
      - trino_v0
      - snowflake_v0
      - bigquery_v0
      - postgres_v0
      - redshift_v0
      - synapse_v0
      - fabric_v0
      - athena_v0
      type: string
      description: |-
        * `apache_spark_v0` - apache_spark_v0
        * `databricks_spark_v0` - databricks_spark_v0
        * `databricks_v0` - databricks_v0
        * `trino_v0` - trino_v0
        * `snowflake_v0` - snowflake_v0
        * `bigquery_v0` - bigquery_v0
        * `postgres_v0` - postgres_v0
        * `redshift_v0` - redshift_v0
        * `synapse_v0` - synapse_v0
        * `fabric_v0` - fabric_v0
        * `athena_v0` - athena_v0
    BaseConnectionV3:
      type: object
      properties:
        account_id:
          type: integer
          description: The account the connection is associated with
        project_id:
          type: integer
          description: The project the connection is associated with
        name:
          type: string
          description: The name of the connection
        type:
          $ref: '#/components/schemas/Type32eEnum'
        adapter_version:
          $ref: '#/components/schemas/AdapterVersionEnum'
        created_by_id:
          type: integer
        created_by_service_token_id:
          type: integer
        state:
          type: integer
          default: 1
          description: A value of 1 means this entity is active and a value of 2 means
            this entity is deleted
        private_link_endpoint_id:
          type: string
        oauth_configuration_id:
          type: integer
          description: The OAuth Configuration associated with this connection. When
            set,developer credentials leveraging OAuth may be created.
      required:
      - account_id
      - name
      - project_id
      - type
    CauseCategoryEnum:
      enum:
      - api
      - ci
      - scheduled
      - ui
      - rerun
      - job completion
      - merge
      - exposures generated
      type: string
      description: |-
        * `api` - api
        * `ci` - ci
        * `scheduled` - scheduled
        * `ui` - ui
        * `rerun` - rerun
        * `job completion` - job_completion
        * `merge` - merge
        * `exposures generated` - exposures_generated
    ConnectionEncryptionEnveloped:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ConnectionEncryptionResponse'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    ConnectionEncryptionListEnveloped:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ConnectionEncryptionResponse'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    ConnectionEncryptionRequest:
      type: object
      properties:
        account_id:
          type: integer
          description: The account the connection is associated with
        connection_id:
          type: integer
          description: The connection to use the SSH tunnel with
        username:
          type: string
          minLength: 1
          description: SSH username
        port:
          type: integer
          description: SSH port
        hostname:
          type: string
          minLength: 1
          description: SSH hostname
        public_key:
          type: string
          minLength: 1
          description: SSH Public key
        private_key:
          type: string
          writeOnly: true
          minLength: 1
          description: SSH private key
        state:
          type: integer
          default: 1
          description: A value of 1 means this entity is active and a value of 2 means
            this entity is deleted
      required:
      - account_id
      - connection_id
      - hostname
      - port
      - username
    ConnectionEncryptionResponse:
      type: object
      properties:
        account_id:
          type: integer
          description: The account the connection is associated with
        connection_id:
          type: integer
          description: The connection to use the SSH tunnel with
        username:
          type: string
          description: SSH username
        port:
          type: integer
          description: SSH port
        hostname:
          type: string
          description: SSH hostname
        public_key:
          type: string
          description: SSH Public key
        state:
          type: integer
          default: 1
        id:
          type: integer
          readOnly: true
      required:
      - id
    CustomEnvironmentVariable:
      type: object
      properties:
        account_id:
          type: integer
        project_id:
          type: integer
        name:
          type: string
        type:
          $ref: '#/components/schemas/CustomEnvironmentVariableTypeEnum'
        user_id:
          type: integer
        environment_id:
          type: integer
        job_definition_id:
          type: integer
        display_value:
          type: string
        state:
          type: integer
          default: 1
      required:
      - account_id
      - name
      - project_id
      - type
    CustomEnvironmentVariableTypeEnum:
      enum:
      - project
      - environment
      - job
      - user
      type: string
      description: |-
        * `project` - project
        * `environment` - environment
        * `job` - job
        * `user` - user
    DateEnum:
      enum:
      - every_day
      - days_of_week
      - custom_cron
      - interval_cron
      type: string
      description: |-
        * `every_day` - every_day
        * `days_of_week` - days_of_week
        * `custom_cron` - custom_cron
        * `interval_cron` - interval_cron
    DeploymentTypeEnum:
      enum:
      - production
      - staging
      type: string
      description: |-
        * `production` - production
        * `staging` - staging
    EnvironmentV2:
      type: object
      properties:
        account_id:
          type: integer
        project_id:
          type: integer
        name:
          type: string
        connection_id:
          type: integer
        credentials_id:
          type: integer
        repository_id:
          type: integer
        extended_attributes_id:
          type: integer
        custom_branch:
          type: string
        use_custom_branch:
          type: boolean
        dbt_project_subdirectory:
          type: string
        dbt_version:
          type: string
        supports_docs:
          type: boolean
        deployment_type:
          $ref: '#/components/schemas/DeploymentTypeEnum'
        type:
          $ref: '#/components/schemas/Type76eEnum'
        created_by_id:
          type: integer
        state:
          type: integer
          default: 1
          description: A value of 1 means this entity is active and a value of 2 means
            this entity is deleted
      required:
      - account_id
      - name
      - project_id
      - supports_docs
      - type
      - use_custom_branch
    EnvironmentV2Enveloped:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EnvironmentV2Response'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    EnvironmentV2ListEnveloped:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentV2Response'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    EnvironmentV2Request:
      type: object
      properties:
        account_id:
          type: integer
        project_id:
          type: integer
        name:
          type: string
          minLength: 1
        connection_id:
          type: integer
        credentials_id:
          type: integer
        repository_id:
          type: integer
        extended_attributes_id:
          type: integer
        custom_branch:
          type: string
          minLength: 1
        use_custom_branch:
          type: boolean
        dbt_project_subdirectory:
          type: string
          minLength: 1
        dbt_version:
          type: string
          minLength: 1
        supports_docs:
          type: boolean
        deployment_type:
          $ref: '#/components/schemas/DeploymentTypeEnum'
        type:
          $ref: '#/components/schemas/Type76eEnum'
        created_by_id:
          type: integer
        state:
          type: integer
          default: 1
          description: A value of 1 means this entity is active and a value of 2 means
            this entity is deleted
      required:
      - account_id
      - name
      - project_id
      - supports_docs
      - type
      - use_custom_branch
    EnvironmentV2Response:
      type: object
      properties:
        account_id:
          type: integer
        project_id:
          type: integer
        name:
          type: string
        connection_id:
          type: integer
        credentials_id:
          type: integer
        repository_id:
          type: integer
        extended_attributes_id:
          type: integer
        custom_branch:
          type: string
        use_custom_branch:
          type: boolean
          default: false
        dbt_project_subdirectory:
          type: string
        dbt_version:
          type: string
        raw_dbt_version:
          type: string
          readOnly: true
        supports_docs:
          type: boolean
          default: false
        deployment_type:
          $ref: '#/components/schemas/DeploymentTypeEnum'
        type:
          allOf:
          - $ref: '#/components/schemas/Type76eEnum'
          default: deployment
        created_by_id:
          type: integer
        state:
          type: integer
          default: 1
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        repository:
          allOf:
          - $ref: '#/components/schemas/RepositoryV2'
          readOnly: true
        connection:
          allOf:
          - $ref: '#/components/schemas/PostgresConnection'
          readOnly: true
        jobs:
          type: array
          items: {}
          readOnly: true
        custom_environment_variables:
          type: array
          items:
            $ref: '#/components/schemas/CustomEnvironmentVariable'
          readOnly: true
      required:
      - connection
      - created_at
      - custom_environment_variables
      - id
      - jobs
      - raw_dbt_version
      - repository
      - updated_at
    EnvironmentV3:
      type: object
      properties:
        account_id:
          type: integer
          description: The account the environment is associated with
        project_id:
          type: integer
          description: The project the environment is associated with
        credentials_id:
          type: integer
          description: The id of the associated credentials. Null for development
            environments.
        connection_id:
          type: integer
          description: The id of the associated connection.
        extended_attributes_id:
          type: integer
        name:
          type: string
          description: The name of the environment
        dbt_version:
          type: string
          description: The default dbt Version to use for this environment
        type:
          $ref: '#/components/schemas/Type76eEnum'
        use_custom_branch:
          type: boolean
        custom_branch:
          type: string
        supports_docs:
          type: boolean
        deployment_type:
          $ref: '#/components/schemas/DeploymentTypeEnum'
        enable_model_query_history:
          type: boolean
          default: false
        state:
          type: integer
          default: 1
          description: A value of 1 means this entity is active and a value of 2 means
            this entity is deleted
      required:
      - account_id
      - dbt_version
      - name
      - project_id
      - supports_docs
      - type
      - use_custom_branch
    GitCloneStrategyEnum:
      enum:
      - azure_active_directory_app
      - deploy_key
      - deploy_token
      - github_app
      - git_token
      type: string
      description: |-
        * `azure_active_directory_app` - azure_active_directory_app
        * `deploy_key` - deploy_key
        * `deploy_token` - deploy_token
        * `github_app` - github_app
        * `git_token` - git_token
    Group:
      type: object
      properties:
        account_id:
          type: integer
        name:
          type: string
        state:
          type: integer
          default: 1
          description: A value of 1 means this entity is active and a value of 2 means
            this entity is deleted
        assign_by_default:
          type: boolean
        sso_mapping_groups:
          type: array
          items:
            type: string
      required:
      - account_id
      - assign_by_default
      - name
    GroupPermission:
      type: object
      properties:
        account_id:
          type: integer
        group_id:
          type: integer
        project_id:
          type: integer
        all_projects:
          type: boolean
        permission_set:
          $ref: '#/components/schemas/PermissionSetEnum'
        permission_level:
          type: integer
        state:
          type: integer
          default: 1
          description: A value of 1 means this entity is active and a value of 2 means
            this entity is deleted
        writable_environment_categories:
          type: array
          items:
            type: string
      required:
      - account_id
      - all_projects
      - group_id
      - permission_set
      - writable_environment_categories
    HumanReadableJobDefinition:
      type: object
      required:
      - id
      - environment_id
      - account_id
      - project_id
      - name
      - dbt_version
      - triggers
      - schedule
      - settings
      - execution
      - state
      - generate_docs
      - run_generate_sources
      - run_compare_changes
      - run_lint
      - errors_on_lint_failure
      properties:
        id:
          oneOf:
          - type: 'null'
          - type: integer
        environment_id:
          type: integer
        deferring_job_definition_id:
          oneOf:
          - type: 'null'
          - type: integer
        deferring_environment_id:
          oneOf:
          - type: 'null'
          - type: integer
        lifecycle_webhooks:
          oneOf:
          - type: boolean
          - type: 'null'
        lifecycle_webhooks_url:
          oneOf:
          - type: string
          - type: 'null'
        account_id:
          type: integer
        project_id:
          type: integer
        integration_id:
          oneOf:
          - type: 'null'
          - type: integer
        name:
          allOf:
          - type: string
          - minLength: 1
            maxLength: 255
        description:
          allOf:
          - type: string
          - minLength: 0
            maxLength: 255
        dbt_version:
          oneOf:
          - type: string
          - type: 'null'
        raw_dbt_version:
          oneOf:
          - type: string
          - type: 'null'
        triggers:
          description: 'Only one of the following fields can be true: triggers.github_webhook,
            triggers.schedule, triggers.on_merge & triggers.git_provider_webhook.
            The triggers.custom_branch_only field is now deprecated.'
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        execute_steps:
          allOf:
          - {}
          - minLength: 1
            maxLength: 100
          - {}
        schedule:
          description: schedule is only required if triggers.schedule is true
        settings: {}
        execution: {}
        state:
          oneOf:
          - {}
          - {}
        generate_docs:
          type: boolean
        run_generate_sources:
          type: boolean
        run_compare_changes:
          oneOf:
          - type: 'null'
          - type: boolean
        run_lint:
          oneOf:
          - type: 'null'
          - type: boolean
        errors_on_lint_failure:
          oneOf:
          - type: 'null'
          - type: boolean
        environment:
          oneOf:
          - {}
          - type: 'null'
        account:
          oneOf:
          - {}
          - type: 'null'
        project:
          oneOf:
          - {}
          - type: 'null'
        most_recent_completed_run:
          oneOf:
          - {}
          - type: 'null'
        most_recent_run:
          oneOf:
          - {}
          - type: 'null'
        is_deferrable:
          type: boolean
        deactivated:
          type: boolean
        is_system:
          type: boolean
        run_failure_count:
          type: integer
        job_type:
          oneOf:
          - {}
          - {}
          - {}
          - {}
          - {}
          - type: 'null'
          description: Available job types are 'ci', 'merge', 'scheduled', and 'other'
        triggers_on_draft_pr:
          type: boolean
        job_completion_trigger_condition:
          oneOf:
          - {}
          - type: 'null'
          description: "Use this to set up job completion triggers which would trigger\
            \ a run of a job when another\n            run finishes. If you have a\
            \ child job that you want triggered on the completion of a parent job,\n\
            \            then configure the trigger on the child job to be on job\
            \ completion and select the project, parent job\n            and the statuses\
            \ of the parent job on which to trigger the child job. The statuses which\
            \ is an array\n            can be one or more of - success (10), error\
            \ (20), canceled (30). Once the parent job completes,\n            a new\
            \ run will be enqueued for the child job.\n            Example of a job\
            \ completion trigger:\n                {\n                    \"condition\"\
            : {\n                        \"job_id\": 1,\n                        \"\
            project_id\": 1,\n                        \"statuses\": [10, 20],\n  \
            \                  }\n                }\n            "
        generate_sources:
          type: boolean
      additionalProperties: false
      definitions: {}
      $schema: http://json-schema.org/draft-07/schema#
    HumanReadableJobDefinitionEnveloped:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/HumanReadableJobDefinition'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    HumanReadableJobDefinitionRequest:
      type: object
      required:
      - id
      - environment_id
      - account_id
      - project_id
      - name
      - dbt_version
      - triggers
      - schedule
      - settings
      - execution
      - state
      - generate_docs
      - run_generate_sources
      - run_compare_changes
      - run_lint
      - errors_on_lint_failure
      properties:
        id:
          oneOf:
          - type: 'null'
          - type: integer
        environment_id:
          type: integer
        deferring_job_definition_id:
          oneOf:
          - type: 'null'
          - type: integer
        deferring_environment_id:
          oneOf:
          - type: 'null'
          - type: integer
        lifecycle_webhooks:
          oneOf:
          - type: boolean
          - type: 'null'
        lifecycle_webhooks_url:
          oneOf:
          - type: string
          - type: 'null'
        account_id:
          type: integer
        project_id:
          type: integer
        integration_id:
          oneOf:
          - type: 'null'
          - type: integer
        name:
          allOf:
          - type: string
          - minLength: 1
            maxLength: 255
        description:
          allOf:
          - type: string
          - minLength: 0
            maxLength: 255
        dbt_version:
          oneOf:
          - type: string
          - type: 'null'
        raw_dbt_version:
          oneOf:
          - type: string
          - type: 'null'
        triggers:
          description: 'Only one of the following fields can be true: triggers.github_webhook,
            triggers.schedule, triggers.on_merge & triggers.git_provider_webhook.
            The triggers.custom_branch_only field is now deprecated.'
        execute_steps:
          allOf:
          - {}
          - minLength: 1
            maxLength: 100
          - {}
        schedule:
          description: schedule is only required if triggers.schedule is true
        settings: {}
        execution: {}
        state:
          oneOf:
          - {}
          - {}
        generate_docs:
          type: boolean
        run_generate_sources:
          type: boolean
        run_compare_changes:
          oneOf:
          - type: 'null'
          - type: boolean
        run_lint:
          oneOf:
          - type: 'null'
          - type: boolean
        errors_on_lint_failure:
          oneOf:
          - type: 'null'
          - type: boolean
        environment:
          oneOf:
          - {}
          - type: 'null'
        account:
          oneOf:
          - {}
          - type: 'null'
        project:
          oneOf:
          - {}
          - type: 'null'
        most_recent_completed_run:
          oneOf:
          - {}
          - type: 'null'
        most_recent_run:
          oneOf:
          - {}
          - type: 'null'
        is_deferrable:
          type: boolean
        deactivated:
          type: boolean
        is_system:
          type: boolean
        run_failure_count:
          type: integer
        job_type:
          oneOf:
          - {}
          - {}
          - {}
          - {}
          - {}
          - type: 'null'
          description: Available job types are 'ci', 'merge', 'scheduled', and 'other'
        triggers_on_draft_pr:
          type: boolean
        job_completion_trigger_condition:
          oneOf:
          - {}
          - type: 'null'
          description: "Use this to set up job completion triggers which would trigger\
            \ a run of a job when another\n            run finishes. If you have a\
            \ child job that you want triggered on the completion of a parent job,\n\
            \            then configure the trigger on the child job to be on job\
            \ completion and select the project, parent job\n            and the statuses\
            \ of the parent job on which to trigger the child job. The statuses which\
            \ is an array\n            can be one or more of - success (10), error\
            \ (20), canceled (30). Once the parent job completes,\n            a new\
            \ run will be enqueued for the child job.\n            Example of a job\
            \ completion trigger:\n                {\n                    \"condition\"\
            : {\n                        \"job_id\": 1,\n                        \"\
            project_id\": 1,\n                        \"statuses\": [10, 20],\n  \
            \                  }\n                }\n            "
        generate_sources:
          type: boolean
      additionalProperties: false
      definitions: {}
      $schema: http://json-schema.org/draft-07/schema#
    InviteEnveloped:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/InviteResponse'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    InviteResponse:
      type: object
      properties:
        account_id:
          type: integer
          readOnly: true
        email_address:
          type: string
          readOnly: true
        license_type:
          $ref: '#/components/schemas/LicenseTypeEnum'
        status:
          $ref: '#/components/schemas/StatusEnum'
        group_ids:
          type: array
          items:
            type: integer
          default: []
        redeemed_at:
          type: string
          format: date-time
          readOnly: true
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        account:
          allOf:
          - $ref: '#/components/schemas/Account'
          readOnly: true
        groups:
          type: array
          items:
            $ref: '#/components/schemas/Group'
          readOnly: true
          default: []
      required:
      - account
      - account_id
      - created_at
      - email_address
      - groups
      - id
      - redeemed_at
    JobDefinitionExecution:
      type: object
      properties:
        timeout_seconds:
          type: integer
      required:
      - timeout_seconds
    JobDefinitionSchedule:
      type: object
      properties:
        cron:
          type: string
        date:
          $ref: '#/components/schemas/DateEnum'
        time:
          $ref: '#/components/schemas/TimeEnum'
      required:
      - cron
      - date
      - time
    JobDefinitionSettings:
      type: object
      properties:
        threads:
          type: integer
        target_name:
          type: string
      required:
      - target_name
      - threads
    JobDefinitionTriggers:
      type: object
      properties:
        github_webhook:
          type: boolean
        schedule:
          type: boolean
        git_provider_webhook:
          type: boolean
        on_merge:
          type: boolean
      required:
      - github_webhook
      - schedule
    JobDefinitionV2:
      type: object
      properties:
        environment_id:
          type: integer
        account_id:
          type: integer
        project_id:
          type: integer
        name:
          type: string
        description:
          type: string
        generate_docs:
          type: boolean
        run_generate_sources:
          type: boolean
        state:
          type: integer
          default: 1
          description: A value of 1 means this entity is active and a value of 2 means
            this entity is deleted
        dbt_version:
          type: string
        triggers:
          $ref: '#/components/schemas/JobDefinitionTriggers'
        settings:
          $ref: '#/components/schemas/JobDefinitionSettings'
        execution:
          $ref: '#/components/schemas/JobDefinitionExecution'
        schedule:
          $ref: '#/components/schemas/JobDefinitionSchedule'
        execute_steps:
          type: array
          items:
            type: string
        job_type:
          $ref: '#/components/schemas/JobTypeEnum'
        triggers_on_draft_pr:
          type: boolean
          default: false
        run_compare_changes:
          type: boolean
          default: false
        run_lint:
          type: boolean
          default: false
        errors_on_lint_failure:
          type: boolean
          default: true
        deferring_environment_id:
          type: integer
        deferring_job_definition_id:
          type: integer
      required:
      - account_id
      - environment_id
      - generate_docs
      - name
      - project_id
      - run_generate_sources
      - settings
    JobNotificationSettingsEnveloped:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/JobNotificationSettingsResponse'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    JobNotificationSettingsListEnveloped:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/JobNotificationSettingsResponse'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    JobNotificationSettingsRequest:
      type: object
      properties:
        account_id:
          type: integer
          description: The account the job notification setting is associated with
        user_id:
          type: integer
          description: For internal email notifications, the ID of the user to send
            notifications to. For all other notifications, the ID of the user who
            created the configuration.
        type:
          allOf:
          - $ref: '#/components/schemas/Type2e2Enum'
          description: "\n                The destination type.\n                1:\
            \ Internal Email\n                2: Slack\n                3: Deprecated\
            \ - do not use\n                4: External Email\n            \n\n* `1`\
            \ - EMAIL\n* `2` - SLACK\n* `3` - WEBHOOK\n* `4` - EXTERNAL_EMAIL"
        external_email:
          type: string
          minLength: 1
          description: The external email to send notifications to. Required for External
            Email types.
        slack_channel_id:
          type: string
          minLength: 1
          description: The ID of the Slack channel to send notifications to. Required
            for Slack notification types.
        slack_channel_name:
          type: string
          minLength: 1
          description: The name of the Slack channel to send notifications to. Required
            for Slack notification types.
        on_cancel:
          type: array
          items:
            type: integer
          description: List of job IDs to send notifications for when the job is cancelled.
        on_failure:
          type: array
          items:
            type: integer
          description: List of job IDs to send notifications for when the job fails.
        on_success:
          type: array
          items:
            type: integer
          description: List of job IDs to send notifications for when the job succeeds.
        on_warning:
          type: array
          items:
            type: integer
          description: List of job IDs to send notifications for when the job warns.
        state:
          type: integer
          default: 1
          description: A value of 1 means this entity is active and a value of 2 means
            this entity is deleted
      required:
      - account_id
      - on_cancel
      - on_failure
      - on_success
      - on_warning
      - type
      - user_id
    JobNotificationSettingsResponse:
      type: object
      properties:
        account_id:
          type: integer
          description: The account the job notification setting is associated with
        user_id:
          type: integer
          description: For internal email notifications, the ID of the user to send
            notifications to. For all other notifications, the ID of the user who
            created the configuration.
        type:
          allOf:
          - $ref: '#/components/schemas/Type2e2Enum'
          description: "\n                The destination type.\n                1:\
            \ Internal Email\n                2: Slack\n                3: Deprecated\
            \ - do not use\n                4: External Email\n            \n\n* `1`\
            \ - EMAIL\n* `2` - SLACK\n* `3` - WEBHOOK\n* `4` - EXTERNAL_EMAIL"
        external_email:
          type: string
          description: The external email to send notifications to. Required for External
            Email types.
        slack_channel_id:
          type: string
          description: The ID of the Slack channel to send notifications to. Required
            for Slack notification types.
        slack_channel_name:
          type: string
          description: The name of the Slack channel to send notifications to. Required
            for Slack notification types.
        on_cancel:
          type: array
          items:
            type: integer
          default: []
          description: List of job IDs to send notifications for when the job is cancelled.
        on_failure:
          type: array
          items:
            type: integer
          default: []
          description: List of job IDs to send notifications for when the job fails.
        on_success:
          type: array
          items:
            type: integer
          default: []
          description: List of job IDs to send notifications for when the job succeeds.
        on_warning:
          type: array
          items:
            type: integer
          default: []
          description: List of job IDs to send notifications for when the job warns.
        state:
          type: integer
          default: 1
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
          description: For internal email notifications, the user to send notifications
            to. For all other notifications, the user who created the configuration.
      required:
      - created_at
      - id
      - updated_at
      - user
    JobTypeEnum:
      enum:
      - ci
      - scheduled
      - other
      - merge
      - exposure_sync
      type: string
      description: |-
        * `ci` - ci
        * `scheduled` - scheduled
        * `other` - other
        * `merge` - merge
        * `exposure_sync` - exposure_sync
    Keypair:
      type: object
      properties:
        account_id:
          type: integer
        public_key:
          type: string
        state:
          type: integer
          default: 1
          description: A value of 1 means this entity is active and a value of 2 means
            this entity is deleted
      required:
      - account_id
      - public_key
    LicenseTypeEnum:
      enum:
      - developer
      - read_only
      - it
      - explorer
      type: string
      description: |-
        * `developer` - DEVELOPER
        * `read_only` - READ_ONLY
        * `it` - IT
        * `explorer` - EXPLORER
    ListOfStringsEnveloped:
      type: object
      properties:
        data:
          type: array
          items:
            type: string
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    PermissionSetEnum:
      enum:
      - owner
      - member
      - account_admin
      - security_admin
      - billing_admin
      - admin
      - database_admin
      - git_admin
      - team_admin
      - job_admin
      - job_runner
      - job_viewer
      - analyst
      - developer
      - stakeholder
      - readonly
      - project_creator
      - account_viewer
      - metadata_only
      - semantic_layer_only
      - webhooks_only
      - manage_marketplace_apps
      - explorer
      type: string
      description: |-
        * `owner` - OWNER
        * `member` - MEMBER
        * `account_admin` - ACCOUNT_ADMIN
        * `security_admin` - SECURITY_ADMIN
        * `billing_admin` - BILLING_ADMIN
        * `admin` - ADMIN
        * `database_admin` - DATABASE_ADMIN
        * `git_admin` - GIT_ADMIN
        * `team_admin` - TEAM_ADMIN
        * `job_admin` - JOB_ADMIN
        * `job_runner` - JOB_RUNNER
        * `job_viewer` - JOB_VIEWER
        * `analyst` - ANALYST
        * `developer` - DEVELOPER
        * `stakeholder` - STAKEHOLDER
        * `readonly` - READONLY
        * `project_creator` - PROJECT_CREATOR
        * `account_viewer` - ACCOUNT_VIEWER
        * `metadata_only` - METADATA_ONLY
        * `semantic_layer_only` - SEMANTIC_LAYER_ONLY
        * `webhooks_only` - WEBHOOKS_ONLY
        * `manage_marketplace_apps` - MANAGE_MARKETPLACE_APPS
        * `explorer` - EXPLORER
    PostgresConnection:
      type: object
      properties:
        id:
          type: integer
        account_id:
          type: integer
        dbt_project_id:
          type: integer
        name:
          type: string
        type:
          $ref: '#/components/schemas/Type32eEnum'
        state:
          type: integer
          default: 1
          description: A value of 1 means this entity is active and a value of 2 means
            this entity is deleted
        created_by_id:
          type: integer
        created_by_service_token_id:
          type: integer
        hostname:
          type: string
        dbname:
          type: string
        port:
          type: integer
        tunnel_enabled:
          type: boolean
      required:
      - account_id
      - dbname
      - hostname
      - name
      - port
      - tunnel_enabled
      - type
    ProjectEnveloped:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ProjectResponse'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    ProjectListEnveloped:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ProjectResponse'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    ProjectRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          description: The name of the project
        account_id:
          type: integer
          description: The account the project is associated with
        description:
          type: string
          minLength: 1
          description: The description of the project
        connection_id:
          type: integer
          description: The active connection
        repository_id:
          type: integer
          description: The active repository
        semantic_layer_config_id:
          type: integer
          description: The active semantic layer configuration
        skipped_setup:
          type: boolean
          default: false
        state:
          type: integer
          default: 1
          description: A value of 1 means this entity is active and a value of 2 means
            this entity is deleted
        dbt_project_subdirectory:
          type: string
          minLength: 1
        docs_job_id:
          type: integer
          description: The job used for docs generation
        freshness_job_id:
          type: integer
          description: The job used for source freshness generation
      required:
      - account_id
      - name
    ProjectResponse:
      type: object
      properties:
        name:
          type: string
          description: The name of the project
        account_id:
          type: integer
          description: The account the project is associated with
        description:
          type: string
          description: The description of the project
        connection_id:
          type: integer
          description: The active connection
        repository_id:
          type: integer
          description: The active repository
        semantic_layer_config_id:
          type: integer
          description: The active semantic layer configuration
        skipped_setup:
          type: boolean
          default: false
        state:
          type: integer
          default: 1
        dbt_project_subdirectory:
          type: string
        docs_job_id:
          type: integer
          description: The job used for docs generation
        freshness_job_id:
          type: integer
          description: The job used for source freshness generation
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        connection:
          allOf:
          - $ref: '#/components/schemas/BaseConnectionV3'
          readOnly: true
        environments:
          type: array
          items:
            $ref: '#/components/schemas/EnvironmentV3'
          readOnly: true
        repository:
          allOf:
          - $ref: '#/components/schemas/RepositoryV3'
          readOnly: true
        group_permissions:
          type: array
          items:
            $ref: '#/components/schemas/GroupPermission'
          readOnly: true
        docs_job:
          allOf:
          - $ref: '#/components/schemas/JobDefinitionV2'
          readOnly: true
        freshness_job:
          allOf:
          - $ref: '#/components/schemas/JobDefinitionV2'
          readOnly: true
      required:
      - connection
      - created_at
      - docs_job
      - environments
      - freshness_job
      - group_permissions
      - id
      - repository
      - updated_at
    RemoteBackendEnum:
      enum:
      - azure_active_directory
      - github
      - managed
      - gitlab
      - manual_config
      type: string
      description: |-
        * `azure_active_directory` - azure_active_directory
        * `github` - github
        * `managed` - managed
        * `gitlab` - gitlab
        * `manual_config` - manual_config
    RepositoryV2:
      type: object
      properties:
        account_id:
          type: integer
          description: The account the repo is associated with
        project_id:
          type: integer
          description: The project the repo is associated with
        full_name:
          type: string
          description: The name of the repo
        remote_backend:
          allOf:
          - $ref: '#/components/schemas/RemoteBackendEnum'
          description: |-
            The associated git provider

            * `azure_active_directory` - azure_active_directory
            * `github` - github
            * `managed` - managed
            * `gitlab` - gitlab
            * `manual_config` - manual_config
        git_clone_strategy:
          allOf:
          - $ref: '#/components/schemas/GitCloneStrategyEnum'
          description: |-
            The strategy to use when cloning the repo

            * `azure_active_directory_app` - azure_active_directory_app
            * `deploy_key` - deploy_key
            * `deploy_token` - deploy_token
            * `github_app` - github_app
            * `git_token` - git_token
        deploy_key_id:
          type: integer
        repository_credentials_id:
          type: integer
        github_installation_id:
          type: integer
        github_webhook_id:
          type: integer
        state:
          type: integer
          default: 1
          description: A value of 1 means this entity is active and a value of 2 means
            this entity is deleted
        git_provider_id:
          type: integer
        private_link_endpoint_id:
          type: string
      required:
      - account_id
    RepositoryV2Enveloped:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/RepositoryV2Response'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    RepositoryV2ListEnveloped:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/RepositoryV2Response'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    RepositoryV2Request:
      type: object
      properties:
        account_id:
          type: integer
          description: The account the repo is associated with
        project_id:
          type: integer
          description: The project the repo is associated with
        full_name:
          type: string
          minLength: 1
          description: The name of the repo
        remote_backend:
          allOf:
          - $ref: '#/components/schemas/RemoteBackendEnum'
          description: |-
            The associated git provider

            * `azure_active_directory` - azure_active_directory
            * `github` - github
            * `managed` - managed
            * `gitlab` - gitlab
            * `manual_config` - manual_config
        git_clone_strategy:
          allOf:
          - $ref: '#/components/schemas/GitCloneStrategyEnum'
          description: |-
            The strategy to use when cloning the repo

            * `azure_active_directory_app` - azure_active_directory_app
            * `deploy_key` - deploy_key
            * `deploy_token` - deploy_token
            * `github_app` - github_app
            * `git_token` - git_token
        deploy_key_id:
          type: integer
        repository_credentials_id:
          type: integer
        github_installation_id:
          type: integer
        github_webhook_id:
          type: integer
        state:
          type: integer
          default: 1
          description: A value of 1 means this entity is active and a value of 2 means
            this entity is deleted
        git_provider_id:
          type: integer
        private_link_endpoint_id:
          type: string
          minLength: 1
      required:
      - account_id
    RepositoryV2Response:
      type: object
      properties:
        account_id:
          type: integer
          description: The account the repo is associated with
        project_id:
          type: integer
          description: The project the repo is associated with
        full_name:
          type: string
          description: The name of the repo
        remote_backend:
          allOf:
          - $ref: '#/components/schemas/RemoteBackendEnum'
          description: |-
            The associated git provider

            * `azure_active_directory` - azure_active_directory
            * `github` - github
            * `managed` - managed
            * `gitlab` - gitlab
            * `manual_config` - manual_config
        git_clone_strategy:
          allOf:
          - $ref: '#/components/schemas/GitCloneStrategyEnum'
          description: |-
            The strategy to use when cloning the repo

            * `azure_active_directory_app` - azure_active_directory_app
            * `deploy_key` - deploy_key
            * `deploy_token` - deploy_token
            * `github_app` - github_app
            * `git_token` - git_token
        deploy_key_id:
          type: integer
        repository_credentials_id:
          type: integer
        github_installation_id:
          type: integer
        github_webhook_id:
          type: integer
        state:
          type: integer
          default: 1
        git_provider_id:
          type: integer
        private_link_endpoint_id:
          type: string
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deploy_key:
          allOf:
          - $ref: '#/components/schemas/Keypair'
          readOnly: true
      required:
      - created_at
      - deploy_key
      - id
      - updated_at
    RepositoryV3:
      type: object
      properties:
        account_id:
          type: integer
          description: The account the repo is associated with
        project_id:
          type: integer
          description: The project the repo is associated with
        full_name:
          type: string
          description: The name of the repo
        remote_backend:
          allOf:
          - $ref: '#/components/schemas/RemoteBackendEnum'
          description: |-
            The associated git provider

            * `azure_active_directory` - azure_active_directory
            * `github` - github
            * `managed` - managed
            * `gitlab` - gitlab
            * `manual_config` - manual_config
        git_clone_strategy:
          allOf:
          - $ref: '#/components/schemas/GitCloneStrategyEnum'
          description: |-
            The strategy to use when cloning the repo

            * `azure_active_directory_app` - azure_active_directory_app
            * `deploy_key` - deploy_key
            * `deploy_token` - deploy_token
            * `github_app` - github_app
            * `git_token` - git_token
        deploy_key_id:
          type: integer
        repository_credentials_id:
          type: integer
        github_installation_id:
          type: integer
        github_webhook_id:
          type: integer
        state:
          type: integer
          default: 1
          description: A value of 1 means this entity is active and a value of 2 means
            this entity is deleted
        private_link_endpoint_id:
          type: string
        git_provider_id:
          type: integer
      required:
      - account_id
    RetryNotSupportedReasonEnum:
      enum:
      - RETRY_UNSUPPORTED_CMD
      - RETRY_UNSUPPORTED_VERSION
      - RETRY_NOT_LATEST_RUN
      - RETRY_NOT_FAILED_RUN
      type: string
      description: |-
        * `RETRY_UNSUPPORTED_CMD` - RETRY_UNSUPPORTED_CMD
        * `RETRY_UNSUPPORTED_VERSION` - RETRY_UNSUPPORTED_VERSION
        * `RETRY_NOT_LATEST_RUN` - RETRY_NOT_LATEST_RUN
        * `RETRY_NOT_FAILED_RUN` - RETRY_NOT_FAILED_RUN
    RunResponseEnveloped:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/RunResponseResponse'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    RunResponseListEnveloped:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/RunResponseResponse'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    RunResponseResponse:
      type: object
      properties:
        id:
          type: integer
        trigger_id:
          type: integer
        account_id:
          type: integer
        environment_id:
          type: integer
        project_id:
          type: integer
        job_definition_id:
          type: integer
        status:
          type: integer
        dbt_version:
          type: string
        git_branch:
          type: string
        git_sha:
          type: string
        status_message:
          type: string
        owner_thread_id:
          type: string
        executed_by_thread_id:
          type: string
        deferring_run_id:
          type: integer
        artifacts_saved:
          type: boolean
        artifact_s3_path:
          type: string
        has_docs_generated:
          type: boolean
        has_sources_generated:
          type: boolean
        notifications_sent:
          type: boolean
        blocked_by:
          type: array
          items:
            type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        dequeued_at:
          type: string
          format: date-time
        started_at:
          type: string
          format: date-time
        finished_at:
          type: string
          format: date-time
        last_checked_at:
          type: string
          format: date-time
        last_heartbeat_at:
          type: string
          format: date-time
        should_start_at:
          type: string
          format: date-time
        trigger:
          $ref: '#/components/schemas/RunTrigger'
        job: {}
        environment:
          $ref: '#/components/schemas/EnvironmentV2'
        run_steps:
          type: array
          items:
            $ref: '#/components/schemas/RunStep'
        status_humanized:
          type: string
        in_progress:
          type: boolean
        is_complete:
          type: boolean
        is_success:
          type: boolean
        is_error:
          type: boolean
        is_cancelled:
          type: boolean
        duration:
          type: string
        queued_duration:
          type: string
        run_duration:
          type: string
        duration_humanized:
          type: string
        queued_duration_humanized:
          type: string
        run_duration_humanized:
          type: string
        created_at_humanized:
          type: string
        finished_at_humanized:
          type: string
        retrying_run_id:
          type: integer
        can_retry:
          type: boolean
        retry_not_supported_reason:
          $ref: '#/components/schemas/RetryNotSupportedReasonEnum'
        job_id:
          type: integer
        is_running:
          type: boolean
        href:
          type: string
        used_repo_cache:
          type: boolean
      required:
      - created_at
      - updated_at
    RunStep:
      type: object
      properties:
        run_id:
          type: integer
        account_id:
          type: integer
        index:
          type: integer
        status:
          type: integer
        name:
          type: string
        logs:
          type: string
        debug_logs:
          type: string
        log_path:
          type: string
        debug_log_path:
          type: string
      required:
      - account_id
      - index
      - name
      - run_id
      - status
    RunStepCommand:
      type: object
      properties:
        run_step_id:
          type: integer
        dbt_command:
          type: string
      required:
      - dbt_command
      - run_step_id
    RunStepEnveloped:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/RunStepResponse'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    RunStepResponse:
      type: object
      properties:
        run_id:
          type: integer
        account_id:
          type: integer
        index:
          type: integer
        status:
          type: integer
        name:
          type: string
        logs:
          type: string
        debug_logs:
          type: string
        log_path:
          type: string
        debug_log_path:
          type: string
        truncated_debug_logs:
          type: string
          readOnly: true
        started_at:
          type: string
          format: date-time
          readOnly: true
        finished_at:
          type: string
          format: date-time
          readOnly: true
        status_color:
          type: string
          readOnly: true
        status_humanized:
          type: string
          readOnly: true
        duration:
          type: string
          readOnly: true
        duration_humanized:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        run_step_command:
          allOf:
          - $ref: '#/components/schemas/RunStepCommand'
          readOnly: true
      required:
      - created_at
      - duration
      - duration_humanized
      - finished_at
      - id
      - run_step_command
      - started_at
      - status_color
      - status_humanized
      - truncated_debug_logs
      - updated_at
    RunTrigger:
      type: object
      properties:
        cause:
          type: string
        job_definition_id:
          type: integer
        git_branch:
          type: string
        git_sha:
          type: string
        azure_pull_request_id:
          type: integer
        github_pull_request_id:
          type: integer
        gitlab_merge_request_id:
          type: integer
        non_native_pull_request_id:
          type: integer
        schema_override:
          type: string
        dbt_version_override:
          type: string
        threads_override:
          type: integer
        target_name_override:
          type: string
        generate_docs_override:
          type: boolean
        timeout_seconds_override:
          type: integer
        steps_override:
          type: array
          items:
            type: string
        cause_category:
          $ref: '#/components/schemas/CauseCategoryEnum'
      required:
      - cause
      - job_definition_id
    Status:
      type: object
      properties:
        code:
          type: integer
          default: 200
        is_success:
          type: boolean
        user_message:
          type: string
        developer_message:
          type: string
      required:
      - developer_message
      - is_success
      - user_message
    StatusEnum:
      enum:
      - 1
      - 2
      - 3
      - 4
      - 5
      type: integer
      description: |-
        * `1` - PENDING
        * `2` - REDEEMED
        * `3` - EXPIRED
        * `4` - PENDING_EMAIL_VERIFICATION
        * `5` - EMAIL_VERIFIED_SSO
    TimeEnum:
      enum:
      - every_hour
      - at_exact_hours
      type: string
      description: |-
        * `every_hour` - every_hour
        * `at_exact_hours` - at_exact_hours
    TriggerRunRequestRequest:
      type: object
      properties:
        cause:
          type: string
          minLength: 1
        git_sha:
          type: string
          minLength: 1
        git_branch:
          type: string
          minLength: 1
        azure_pull_request_id:
          type: integer
        github_pull_request_id:
          type: integer
        gitlab_merge_request_id:
          type: integer
        non_native_pull_request_id:
          type: integer
        schema_override:
          type: string
          minLength: 1
        dbt_version_override:
          type: string
          minLength: 1
          description: 'Allowed values are: '
        threads_override:
          type: integer
        target_name_override:
          type: string
          minLength: 1
        generate_docs_override:
          type: boolean
        timeout_seconds_override:
          type: integer
        steps_override:
          type: array
          items:
            type: string
            minLength: 1
      required:
      - cause
    Type2e2Enum:
      enum:
      - 1
      - 2
      - 3
      - 4
      type: integer
      description: |-
        * `1` - EMAIL
        * `2` - SLACK
        * `3` - WEBHOOK
        * `4` - EXTERNAL_EMAIL
    Type32eEnum:
      enum:
      - postgres
      - redshift
      - snowflake
      - bigquery
      - adapter
      type: string
      description: |-
        * `postgres` - postgres
        * `redshift` - redshift
        * `snowflake` - snowflake
        * `bigquery` - bigquery
        * `adapter` - adapter
    Type76eEnum:
      enum:
      - development
      - deployment
      type: string
      description: |-
        * `development` - DEVELOPMENT
        * `deployment` - DEPLOYMENT
    User:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
      required:
      - first_name
      - last_name
    UserEnveloped:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/UserResponse'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    UserLicense:
      type: object
      properties:
        license_type:
          type: string
        state:
          type: integer
          default: 1
          description: A value of 1 means this entity is active and a value of 2 means
            this entity is deleted
      required:
      - license_type
    UserListEnveloped:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/UserResponse'
        status:
          $ref: '#/components/schemas/Status'
      required:
      - data
      - status
    UserRequest:
      type: object
      properties:
        first_name:
          type: string
          minLength: 1
        last_name:
          type: string
          minLength: 1
      required:
      - first_name
      - last_name
    UserResponse:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
          readOnly: true
        apitoken_last_used:
          type: string
          format: date-time
          readOnly: true
        azure_active_directory_connected:
          type: boolean
          readOnly: true
          default: false
        azure_active_directory_token_retrieval_failure:
          type: boolean
          readOnly: true
        azure_active_directory_username:
          type: string
          readOnly: true
        email_connected:
          type: boolean
          readOnly: true
          default: false
        email_verified:
          type: boolean
          readOnly: true
          default: false
        enterprise_connected:
          type: boolean
          readOnly: true
          default: false
        enterprise_authentication_method:
          type: string
          readOnly: true
        github_connected:
          type: boolean
          readOnly: true
          default: false
        github_username:
          type: string
          readOnly: true
        gitlab_connected:
          type: boolean
          readOnly: true
          default: false
        gitlab_username:
          type: string
          readOnly: true
        is_active:
          type: boolean
          readOnly: true
          default: false
        is_staff:
          type: boolean
          readOnly: true
          default: false
        last_login:
          type: string
          format: date-time
          readOnly: true
        sso_only_user:
          type: boolean
          readOnly: true
        github_token_retrieval_failure:
          type: boolean
          readOnly: true
        gitlab_token_retrieval_failure:
          type: boolean
          readOnly: true
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/UserLicense'
          readOnly: true
        auth_provider_infos:
          readOnly: true
      required:
      - apitoken_last_used
      - auth_provider_infos
      - azure_active_directory_connected
      - azure_active_directory_token_retrieval_failure
      - azure_active_directory_username
      - created_at
      - email
      - email_connected
      - email_verified
      - enterprise_authentication_method
      - enterprise_connected
      - github_connected
      - github_token_retrieval_failure
      - github_username
      - gitlab_connected
      - gitlab_token_retrieval_failure
      - gitlab_username
      - id
      - is_active
      - is_staff
      - last_login
      - permissions
      - sso_only_user
  securitySchemes:
    BearerAuthentication:
      type: http
      scheme: bearer
      bearerFormat: Bearer
servers:
- url: https://cloud.getdbt.com/
  description: Production (US)
- url: https://{account_prefix}.us1.dbt.com/
  description: Production (US)
  variables:
    account_prefix:
      default: ab123
      description: Your unique account prefix. Can be found on your account settings
        page.
- url: https://emea.dbt.com/
  description: Production (Europe)
- url: https://au.dbt.com/
  description: Production (AU)
